
----------Non-clustered index on tra_TransactionMaster
IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionMaster__PreclearanceRequestId')
BEGIN

	CREATE NONCLUSTERED INDEX tra_TransactionMaster__PreclearanceRequestId ON tra_TransactionMaster 
	(
		PreclearanceRequestId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionMaster__UserInfoId')
BEGIN

	CREATE NONCLUSTERED INDEX tra_TransactionMaster__UserInfoId ON tra_TransactionMaster 
	(
		UserInfoId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionMaster__DisclosureTypeCodeId')
BEGIN

	CREATE NONCLUSTERED INDEX tra_TransactionMaster__DisclosureTypeCodeId ON tra_TransactionMaster 
	(
		DisclosureTypeCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionMaster__TransactionStatusCodeId')
BEGIN

	CREATE NONCLUSTERED INDEX tra_TransactionMaster__TransactionStatusCodeId ON tra_TransactionMaster 
	(
		TransactionStatusCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionMaster__TradingPolicyId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionMaster__TradingPolicyId ON tra_TransactionMaster 
	(
		TradingPolicyId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

----------Non-clustered index on tra_TransactionDetails

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionDetails__TransactionMasterId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionDetails__TransactionMasterId ON tra_TransactionDetails 
	(
		TransactionMasterId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionDetails__SecurityTypeCodeId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionDetails__SecurityTypeCodeId ON tra_TransactionDetails 
	(
		SecurityTypeCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionDetails__ForUserInfoId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionDetails__ForUserInfoId ON tra_TransactionDetails 
	(
		ForUserInfoId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionDetails__DMATDetailsID')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionDetails__DMATDetailsID ON tra_TransactionDetails 
	(
		DMATDetailsID ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionDetails__ModeOfAcquisitionCodeId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionDetails__ModeOfAcquisitionCodeId ON tra_TransactionDetails 
	(
		ModeOfAcquisitionCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionDetails__TransactionTypeCodeId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionDetails__TransactionTypeCodeId ON tra_TransactionDetails 
	(
		TransactionTypeCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

----------Non-clustered index on tra_TransactionSummary
IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummary__UserInfoId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummary__UserInfoId ON tra_TransactionSummary 
	(
		UserInfoId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummary__UserInfoIdRelative')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummary__UserInfoIdRelative ON tra_TransactionSummary 
	(
		UserInfoIdRelative ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummary__SecurityTypeCodeId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummary__SecurityTypeCodeId ON tra_TransactionSummary 
	(
		SecurityTypeCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

----------Non-clustered index on tra_TransactionSummaryDMATWise

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummaryDMATWise__UserInfoId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummaryDMATWise__UserInfoId ON tra_TransactionSummaryDMATWise
	(
		UserInfoId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummaryDMATWise__UserInfoIdRelative')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummaryDMATWise__UserInfoIdRelative ON tra_TransactionSummaryDMATWise
	(
		UserInfoIdRelative ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummaryDMATWise__SecurityTypeCodeId')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummaryDMATWise__SecurityTypeCodeId ON tra_TransactionSummaryDMATWise
	(
		SecurityTypeCodeId ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME = 'tra_TransactionSummaryDMATWise__DMATDetailsID')
BEGIN
	CREATE NONCLUSTERED INDEX tra_TransactionSummaryDMATWise__DMATDetailsID ON tra_TransactionSummaryDMATWise
	(
		DMATDetailsID ASC		
	)
	WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
END
GO