@model InsiderTrading.Models.TradingPolicyModel
@{
    ViewBag.Title = @InsiderTrading.Common.Common.getResource("rul_ttl_15141");
}

<script type="text/javascript">
    $(function () {
        $(document).ready(function () {
            if ($("#DeclarationUPSIFlag").val() == "true") {
                $("#DivPreClrDeclaration").show();
            }
            else {                
                $("#DivPreClrDeclaration").hide();
            }            
        });
    });

    $(function () {        
        $('#PreClrSeek').click(function () {
            if ($('#DeclFrmInsiderContDisVal').val() != "") {
                $('#DecFrmInsContDis').val($('#DeclFrmInsiderContDisVal').val());
            }
            $("#DivPreClrDeclaration").show();
        });

        $('#ClrSeek').click(function () {            
            $("#DivPreClrDeclaration").hide();
        });
    });
</script>

@using (Html.BeginForm("Cancel", "TradingPolicy", new { ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new { @class = "", role = "", @autocomplete = "off", id = "frmTradingPolicy" }))
{
    @Html.AntiForgeryToken()
    <section class="content-header">
        <p><a href="@Url.Action("Index", "TradingPolicy", new { acid = InsiderTrading.Common.ConstEnum.UserActions.TRADING_POLICY_VIEW })"><i class=" fa fa-chevron-left"></i> Back to Search List</a></p>
        <h1>
            @InsiderTrading.Common.Common.getResource("rul_ttl_15141")
        </h1>
    </section>


    <section class="content">
        @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <label>@InsiderTrading.Common.Common.getResource("rul_ttl_15142")</label>
                                <div class="panel-group" id="accordion">
                                    
                                    <div class="panel panel-accordion">
                                        <div class="panel-heading active">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15139")
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseOne" class="panel-collapse in">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15196"))
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.RadioButtonFor(model => model.TradingPolicyForCodeId, InsiderTrading.Common.ConstEnum.Code.TradingPolicyInsiderType,
                                                            Model.TradingPolicyForCodeId == InsiderTrading.Common.ConstEnum.Code.TradingPolicyInsiderType ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)
                                                            : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15140")
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.RadioButtonFor(model => model.TradingPolicyForCodeId, InsiderTrading.Common.ConstEnum.Code.TradingPolicyEmployeeType,
                                                                            Model.TradingPolicyForCodeId == InsiderTrading.Common.ConstEnum.Code.TradingPolicyEmployeeType ?
                                                            @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15216") 
                                                            @Html.HiddenFor(m => m.TradingPolicyForCodeId)
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.ValidationMessageFor(m => m.TradingPolicyForCodeId)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.TradingPolicyName)
                                                            @Html.TextBoxFor(m => m.TradingPolicyName,
                                                                        @InsiderTrading.Common.Common.IsTradingPolicyEdit("Text", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                            @Html.ValidationMessageFor(m => m.TradingPolicyName)
                                                            @Html.HiddenFor(m => m.TradingPolicyName)
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.TradingPolicyDescription)
                                                            @Html.TextAreaFor(m => m.TradingPolicyDescription,
                                                            @InsiderTrading.Common.Common.IsTradingPolicyEdit("Text", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)
                                                       )
                                                            @Html.ValidationMessageFor(m => m.TradingPolicyDescription)
                                                            @Html.HiddenFor(m => m.TradingPolicyDescription)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                                        <div class="form-group" id="sandbox-container">
                                                            @Html.LabelFor(m => m.ApplicableFromDate)
                                                            @{
                                                            string FromDate = "";
                                                            if (Model.ApplicableFromDate != null)
                                                            {
                                                                FromDate = InsiderTrading.Common.Common.ApplyFormatting(Model.ApplicableFromDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                            }
                                                            }
                                                            <div class="input-group date">
                                                                @Html.TextBox("ApplicableFromDate", FromDate, null,
                                                             new { @class = "form-control" })@*@InsiderTrading.Common.Common.IsTradingPolicyEdit("Text", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)*@
                                                           
                                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                            </div>
                                                            @Html.ValidationMessageFor(m => m.ApplicableFromDate)
                                                            @Html.HiddenFor(m => m.ApplicableFromDate)
                                                        </div>

                                                    </div>
                                                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                                        <div class="form-group" id="sandbox-container">
                                                            @Html.LabelFor(m => m.ApplicableToDate)
                                                            @{
                                                            string ToDate = "";
                                                            if (Model.ApplicableToDate != null)
                                                            {
                                                                ToDate = InsiderTrading.Common.Common.ApplyFormatting(Model.ApplicableToDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                            }
                                                            }
                                                            <div class="input-group date">
                                                                @Html.TextBox("ApplicableToDate", ToDate, null, new { @class = "form-control" })
                                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                            </div>
                                                            @Html.ValidationMessageFor(m => m.ApplicableToDate)
                                                            @Html.HiddenFor(m => m.ApplicableToDate)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clearfix"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- End Trading policy panel-->

                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15143") 
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseTwo" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <div id="DivPreClearanceRequired">
                                                @{
                                                    if (Model.TradingPolicyForCodeId == InsiderTrading.Common.ConstEnum.Code.TradingPolicyInsiderType)
                                                    {
                                                        @Html.Partial("~/Views/TradingPolicy/_PreclearanceRequirement.cshtml")
                                                    }
                                                    else
                                                    {
                                                        @Html.Partial("~/Views/TradingPolicy/_PreclearanceNotRequired.cshtml")
                                                    }
                                                }
                                                </div>
                                                <div class="clearfix"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- End Pre-clearance requirement panel-->

                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseSeven">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15144") 
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseSeven" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15236"), new { @class = "control-label text-left" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 col-md-3 col-sm-8 col-xs-8">
                                                        <div class="form-group">
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.RadioButtonFor(model => model.DiscloInitReqFlag, "True", Model.DiscloInitReqFlag == true ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15176")
                                                                </label>
                                                            <label class="radio-inline" for="radios-1">
                                                                @Html.RadioButtonFor(model => model.DiscloInitReqFlag, "False", Model.DiscloInitReqFlag == false ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15177")
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            <label class="normalLable" style="font-style:italic">@InsiderTrading.Common.Common.getResource("rul_lbl_15178")</label>
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.CheckBoxFor(model => model.DiscloInitReqSoftcopyFlag, @InsiderTrading.Common.Common.IsTradingPolicyEdit("Checkbox", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                                @Html.LabelFor(m => m.DiscloInitReqSoftcopyFlag, new { @class = "normalLable" })
                                                                </label>
                                                                <label class="radio-inline" for="radios-1">
                                                                @Html.CheckBoxFor(model => model.DiscloInitReqHardcopyFlag, @InsiderTrading.Common.Common.IsTradingPolicyEdit("Checkbox", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                                @Html.LabelFor(m => m.DiscloInitReqHardcopyFlag, new { @class = "normalLable" })
                                                                </label>
</div>
                                                    </div>
                                                </div>
                                                <div id="DivInitialDisclosure">
                                                @{   
                                                    if (Model.DiscloInitReqFlag) 
                                                    { 
                                                        @Html.Partial("~/Views/TradingPolicy/_InitialDisclosure.cshtml")
                                                    }
                                                }
                                                </div>
                                                
                                                <div class="clearfix"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- End Disclosure frequencey-Initial disclosure panel-->

                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseThree">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15145") 
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseThree" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15243"), new { @class = "control-label text-left" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.RadioButtonFor(model => model.StExSubmitDiscloToCOByInsdrFlag, "True", Model.StExSubmitDiscloToCOByInsdrFlag == true ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15176")
                                                            </label>
                                                            <label class="radio-inline" for="radios-1">
                                                                @Html.RadioButtonFor(model => model.StExSubmitDiscloToCOByInsdrFlag, "False", Model.StExSubmitDiscloToCOByInsdrFlag == false ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15177")
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            <label style="font-style:italic" class="normalLable">@InsiderTrading.Common.Common.getResource("rul_lbl_15178")</label>
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.CheckBoxFor(model => model.StExSubmitDiscloToCOByInsdrSoftcopyFlag, @InsiderTrading.Common.Common.IsTradingPolicyEdit("Checkbox", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                                @Html.LabelFor(m => m.StExSubmitDiscloToCOByInsdrSoftcopyFlag, new { @class = "normalLable" })
                                                            </label>
                                                            <label class="radio-inline" for="radios-1">
                                                                @Html.CheckBoxFor(model => model.StExSubmitDiscloToCOByInsdrHardcopyFlag, @InsiderTrading.Common.Common.IsTradingPolicyEdit("Checkbox", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                                @Html.LabelFor(m => m.StExSubmitDiscloToCOByInsdrHardcopyFlag, new { @class = "normalLable" })
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="DIVCOntinuousDisclosureRequired">
                                                @{ 
                                                    if (Model.StExSubmitDiscloToCOByInsdrFlag) 
                                                    { 
                                                        @Html.Partial("~/Views/TradingPolicy/_ContinuousDisclosureRequired.cshtml")
                                                    }
                                                }
                                                </div>
                                            </div>

                                            @*New field added on 2-Jun-2016 for UPSI declaration on Continuous Disclosures page(YES BANK customization)*@
                                            <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.SeekDeclarationFromEmpRegPossessionOfUPSIFlag, new { @class = "control-label text-left" })
                                                </div>
                                            </div>
                                            <div class="col-md-9 col-md-4 col-sm-6 col-xs-8">
                                                <div class="form-group">                                                                                                        
                                                    <label class="radio-inline" for="radios-0">
                                                        @Html.RadioButtonFor(model => model.SeekDeclarationFromEmpRegPossessionOfUPSIFlag, "True", new { id = "PreClrSeek" }) <label class="normalLable"> @InsiderTrading.Common.Common.getResource("rul_lbl_15169")</label>
                                                    </label>
                                                    <label class="radio-inline" for="radios-1">
                                                        @Html.RadioButtonFor(model => model.SeekDeclarationFromEmpRegPossessionOfUPSIFlag, "False", new { id = "ClrSeek" }) <label class="normalLable"> @InsiderTrading.Common.Common.getResource("rul_lbl_15170")</label>
                                                    </label>
                                                    @if (ViewBag.SeekDeclarationUPSIFlag == true)
                                                    {
                                                        <input type="hidden" value="true" id="DeclarationUPSIFlag" />
                                                    }                                                    
                                                </div>
                                            </div>

                                            <div id="DivPreClrDeclaration">
                                                <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
                                                    <div class="form-group">
                                                        @InsiderTrading.Common.Common.getResource("rul_lbl_50070")
                                                    </div>
                                                </div>
                                                <div class="col-md-9 col-md-4 col-sm-6 col-xs-8">
                                                    <div class="form-group">
                                                        @Html.TextAreaFor(m => m.DeclarationFromInsiderAtTheTimeOfContinuousDisclosures, new { id = "DecFrmInsContDis", @class = "form-control" })
                                                        @if (ViewBag.DeclarationFromInsiderAtTheTimeOfContinuousDisclosures != null)
                                                        {
                                                            <input type="hidden" value="@ViewBag.DeclarationFromInsiderAtTheTimeOfContinuousDisclosures" id="DeclFrmInsiderContDisVal"/>
                                                        }
                                                    </div>
                                                </div>

                                                <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
                                                    <div class="form-group">
                                                        @InsiderTrading.Common.Common.getResource("rul_lbl_50071")
                                                    </div>
                                                </div>
                                                <div class="col-md-9 col-md-4 col-sm-6 col-xs-8">
                                                    <div class="form-group">                                                                                                                
                                                        <label class="radio-inline" for="radios-0">
                                                            @Html.RadioButtonFor(model => model.DeclarationToBeMandatoryFlag, "True", new { id = "DeclarationMandatoryFlag" }) <label class="normalLable"> @InsiderTrading.Common.Common.getResource("rul_lbl_15169")</label>
                                                        </label>
                                                        <label class="radio-inline" for="radios-1">
                                                            @Html.RadioButtonFor(model => model.DeclarationToBeMandatoryFlag, "False", new { id = "DeclarationFlag" }) <label class="normalLable"> @InsiderTrading.Common.Common.getResource("rul_lbl_15170")</label>
                                                        </label>                                                        
                                                    </div>
                                                </div>

                                                <div class="col-lg-5 col-md-5 col-sm-6 col-xs-12">
                                                    <div class="form-group">
                                                        @InsiderTrading.Common.Common.getResource("rul_lbl_50072")
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                                    <div class="form-group">
                                                        <label class="radio-inline" for="radios-0">
                                                            @Html.RadioButtonFor(model => model.DisplayDeclarationPostSubmissionOfContinuouseDisclosureFlag, "True", new { id = "DeclarationPostSubOfContiDiscFlag", @checked = "checked" }) <label class="normalLable"> @InsiderTrading.Common.Common.getResource("rul_lbl_15169")</label>
                                                        </label>
                                                        <label class="radio-inline" for="radios-1">
                                                            @Html.RadioButtonFor(model => model.DisplayDeclarationPostSubmissionOfContinuouseDisclosureFlag, "False", new { id = "DeclarationPostiDiscFlag" }) <label class="normalLable"> @InsiderTrading.Common.Common.getResource("rul_lbl_15170")</label>
                                                        </label>                                                        
                                                    </div>
                                                </div>
                                            </div>
                                            @*end new field added on 2-Jun-2016(YES BANK customization)*@

                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    <!-- End Disclosure frequencey-Trade(Continuous) disclosure panel-->

                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseFour">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15146") 
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseFour" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15197"), new { @class = "control-label text-left" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.RadioButtonFor(model => model.DiscloPeriodEndReqFlag, "True", Model.DiscloPeriodEndReqFlag == true ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15176")
                                                            </label>
                                                            <label class="radio-inline" for="radios-1">
                                                                @Html.RadioButtonFor(model => model.DiscloPeriodEndReqFlag, "False", Model.DiscloPeriodEndReqFlag == false ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15177")
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            <label style="font-style:italic" class="normalLable">@InsiderTrading.Common.Common.getResource("rul_lbl_15178")  </label>
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.CheckBoxFor(model => model.DiscloPeriodEndReqSoftcopyFlag, @InsiderTrading.Common.Common.IsTradingPolicyEdit("CheckBox", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                                @Html.LabelFor(m => m.DiscloPeriodEndReqSoftcopyFlag, new { @class = "normalLable" })</label>
                                                            <label class="radio-inline" for="radios-1">
                                                                @Html.CheckBoxFor(model => model.DiscloPeriodEndReqHardcopyFlag, @InsiderTrading.Common.Common.IsTradingPolicyEdit("CheckBox", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                                @Html.LabelFor(m => m.DiscloPeriodEndReqHardcopyFlag, new { @class = "normalLable" })</label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="DivPeiodEndDisclosure">
                                                @{
                                                    if (Model.DiscloPeriodEndReqFlag)
                                                    {
                                                        @Html.Partial("~/Views/TradingPolicy/_PeriodEndDisclosure.cshtml")
                                                    }
                                                }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- End Disclosure frequencey-Period end disclosure panel-->

                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseFive">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15147") 
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseFive" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15208"), new { @class = "normalLable" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-1 col-md-1 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(m => m.GenMinHoldingLimit, @InsiderTrading.Common.Common.IsTradingPolicyEdit("TextNumber", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-5 col-md-5 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            <label class="normalLable">@InsiderTrading.Common.Common.getResource("rul_lbl_15209")</label>
                                                            @Html.ValidationMessageFor(m => m.GenMinHoldingLimit)
                                                        </div>
                                                    </div>
                                                </div>
                                                @{
                                                 if (ViewBag.ContraTradeOption == InsiderTrading.Common.ConstEnum.Code.ContraTradeQuantiyBase) 
                                                 { 
                                                    <div class="row">
                                                        <div class="col-lg-12 col-md-12 col-sm-6 col-xs-12">
                                                            <div class="form-group">
                                                                @Html.RadioButtonFor(model => model.GenCashAndCashlessPartialExciseOptionForContraTrade, InsiderTrading.Common.ConstEnum.Code.ESOPExciseOptionFirstandThenOtherShares,
                                                                Model.GenCashAndCashlessPartialExciseOptionForContraTrade == InsiderTrading.Common.ConstEnum.Code.ESOPExciseOptionFirstandThenOtherShares ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)
                                                                : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) System should consider ESOP excise(Cash and Cashless Partial excise) option first and then other  @InsiderTrading.Common.Common.getResource("dis_lbl_50709")
                                                            </div>
                                                        </div>
                                                     </div>
                                                    <div class="row">
                                                        <div class="col-lg-12 col-md-12 col-sm-6 col-xs-12">
                                                            <div class="form-group">
                                                                @Html.RadioButtonFor(model => model.GenCashAndCashlessPartialExciseOptionForContraTrade, InsiderTrading.Common.ConstEnum.Code.OtherSharesFirstThenESOPExciseOption,
                                                                    Model.GenCashAndCashlessPartialExciseOptionForContraTrade == InsiderTrading.Common.ConstEnum.Code.OtherSharesFirstThenESOPExciseOption ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)
                                                                : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) System should consider other @InsiderTrading.Common.Common.getResource("dis_lbl_50709") balance first and then ESOP excise(Cash and Cashless Partial excise)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-lg-12 col-md-12 col-sm-6 col-xs-12">
                                                            <div class="form-group">
                                                                @Html.RadioButtonFor(model => model.GenCashAndCashlessPartialExciseOptionForContraTrade, InsiderTrading.Common.ConstEnum.Code.UserSelectionOnPreClearanceAndTradeDetailsSubmission,
                                                                Model.GenCashAndCashlessPartialExciseOptionForContraTrade == InsiderTrading.Common.ConstEnum.Code.UserSelectionOnPreClearanceAndTradeDetailsSubmission ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)
                                                                : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) User selection on Pre-Clearance / trade details submission form
                                                                @Html.ValidationMessageFor(m => m.GenCashAndCashlessPartialExciseOptionForContraTrade)
                                                            </div>
                                                        </div>
                                                    </div>
    }
                                                }
                                                <div class="row">
                                                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15440"))
                                                        </div>
                                                    </div>
                                                    <div class="col-md-8 col-md-8 col-sm-8 col-xs-8">
                                                        <div class="form-group">
                                                            <label class="radio-inline" for="radios-0">
                                                                @Html.RadioButtonFor(model => model.GenSecuritiesPriortoAcquisitionManualInputorAutoCalculate, "True", Model.GenSecuritiesPriortoAcquisitionManualInputorAutoCalculate == true ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) Manual Input
                                                            </label>
                                                            <label class="radio-inline" for="radios-1">
                                                                @Html.RadioButtonFor(model => model.GenSecuritiesPriortoAcquisitionManualInputorAutoCalculate, "False", Model.GenSecuritiesPriortoAcquisitionManualInputorAutoCalculate == false ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) Auto Calculate
                                                                @Html.ValidationMessageFor(m => m.GenSecuritiesPriortoAcquisitionManualInputorAutoCalculate)
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseSix">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    @InsiderTrading.Common.Common.getResource("rul_ttl_15454")
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseSix" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15455"),  new { @class = "normalLable" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.RadioButtonFor(model => model.ContraTradeBasedOn, InsiderTrading.Common.ConstEnum.Code.ContraTradeBasedOnAllSecurityType,
                                                        Model.ContraTradeBasedOn == InsiderTrading.Common.ConstEnum.Code.ContraTradeBasedOnAllSecurityType ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)
                                                            : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15456")
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.RadioButtonFor(model => model.ContraTradeBasedOn, InsiderTrading.Common.ConstEnum.Code.ContraTradeBasedOnIndividualSecurityType,
                                                            Model.ContraTradeBasedOn == InsiderTrading.Common.ConstEnum.Code.ContraTradeBasedOnIndividualSecurityType ?
                                                            @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15457")
                                                            @Html.HiddenFor(m => m.ContraTradeBasedOn)
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.ValidationMessageFor(m => m.ContraTradeBasedOn)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="DivContraTradeSecurityMapping">
                                                    @{if (Model.ContraTradeBasedOn != null)
                                                    {
                                                        @Html.Partial("~/Views/TradingPolicy/_ContraTradeSecurityMapping.cshtml")
                                                    }
                                                    }

                                                </div>

                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15210"), new { @class = "normalLable" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-1 col-md-1 col-sm-3 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(m => m.GenContraTradeNotAllowedLimit, @InsiderTrading.Common.Common.IsTradingPolicyEdit("TextNumber", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            <label class="normalLable">@InsiderTrading.Common.Common.getResource("rul_lbl_15211")</label>
                                                            @Html.ValidationMessageFor(m => m.GenContraTradeNotAllowedLimit)
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15212"), new { @class = "normalLable" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <div class="form-group">
                                                            @Html.DropDownList("SelectedGenExceptionFor", new MultiSelectList(ViewBag.GenExceptionForList, "Key", "Value", Model.AssignedGenExceptionForList.Select(m => m.Key)), @InsiderTrading.Common.Common.IsTradingPolicyEdit("MultiSelect", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
                                                            @Html.ValidationMessageFor(m => m.GenExceptionFor)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- End General panel-->

                                    <div class="panel panel-accordion">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseEight">
                                                    <span class="fa fa-plus pull-right"></span>
                                                    Documents
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseEight" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                @{
    if (Model.TradingPolicyId == null || Model.TradingPolicyId == 0)
    {
                                    <label>@InsiderTrading.Common.Common.getResource("rul_msg_15387")</label><br />
    }
    if (Model.TradingPolicyId > 0 && @ViewBag.CalledFrom == "Edit" &&
       InsiderTrading.Common.Common.IsTradingPolicyEdit(Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
    {
                                    @Html.Label(@InsiderTrading.Common.Common.getResource("rul_lbl_15245"))
                                                    @Html.Partial("~/Views/Common/MultiDocumentUpload.cshtml", Model.TradingPolicyDocumentFile, new ViewDataDictionary() { { "user_action", @ViewBag.TradingPolicyUserAction } })

    }
    else if (@ViewBag.CalledFrom == "View")
    {
                                    @Html.Label(@InsiderTrading.Common.Common.getResource("rul_lbl_15246"))
                                                    @Html.Partial("~/Views/Common/ViewMultiUploadedDocument.cshtml", Model.TradingPolicyDocumentFile, new ViewDataDictionary() { { "user_action", @ViewBag.TradingPolicyUserAction } })
    }
    else
    {
                                    @Html.Label(@InsiderTrading.Common.Common.getResource("rul_lbl_15246"))
                                                    @Html.Partial("~/Views/Common/ViewMultiUploadedDocument.cshtml", Model.TradingPolicyDocumentFile, new ViewDataDictionary() { { "user_action", @ViewBag.TradingPolicyUserAction } })
    }
                                                }
                                                <div class="clearfix"></div>
                                            </div>
                                        </div>

                                    </div>
                                    <!-- End Document panel-->
                                </div>

                            </div>
                        </div>
                        <!-- /.row (nested) -->
                        <div class="row">
                            <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                <div class="form-group">
                                    @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15213"))
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                <div class="form-group">
                                    @{
                                        if (ViewBag.HasApplicabilityDefinedFlag == 1)
                                        {
                                            @Html.RadioButtonFor(model => model.TradingPolicyStatusCodeId, InsiderTrading.Common.ConstEnum.Code.TradingPolicyStatusActive, Model.TradingPolicyStatusCodeId == InsiderTrading.Common.ConstEnum.Code.TradingPolicyStatusActive ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15215")
                                        }
                                        else
                                        {
                                            @Html.RadioButtonFor(model => model.TradingPolicyStatusCodeId, InsiderTrading.Common.ConstEnum.Code.TradingPolicyStatusActive, new { disabled = "disabled" }
                                                                                    ) @InsiderTrading.Common.Common.getResource("rul_lbl_15215")
                                        }
                                    }
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                <div class="form-group">
                                    @{if (ViewBag.HasApplicabilityDefinedFlag == 1)
                                    {
                                        @Html.RadioButtonFor(model => model.TradingPolicyStatusCodeId, InsiderTrading.Common.ConstEnum.Code.TradingPolicyStatusInactive, Model.TradingPolicyStatusCodeId == InsiderTrading.Common.ConstEnum.Code.TradingPolicyStatusInactive ? new { Checked = "checked" } : null) @InsiderTrading.Common.Common.getResource("rul_lbl_15214")
                                    }
                                    else
                                    {
                                        @Html.RadioButtonFor(model => model.TradingPolicyStatusCodeId, InsiderTrading.Common.ConstEnum.Code.TradingPolicyStatusInactive, new { disabled = "disabled" }) @InsiderTrading.Common.Common.getResource("rul_lbl_15214")
                                    }
                                    }
                                </div>
                            </div>
                        </div>

                        @Html.HiddenFor(m => m.TradingPolicyId)
                        @Html.HiddenFor(m => m.PreSecuritiesValuesList)
                        <input type="hidden" value="@ViewBag.CalledFrom" id="CalledFrom" name="CalledFrom" />
                        <input type="hidden" value="@ViewBag.AutoSubmitTransaction" id="AutoSubmitTransaction" name="AutoSubmitTransaction" />
                        <input type="hidden" value="@ViewBag.OccurrenceFrequencyYearly" id="OccurrenceFrequencyYearly" />
                        <input type="hidden" value="@ViewBag.TradingPolicyEmployeeType" id="TradingPolicyEmployeeType" />
                        <input type="hidden" value="@ViewBag.MultipleTransactionTrade" id="MultipleTransactionTrade" />
                        <input type="hidden" value="@ViewBag.HasApplicabilityDefinedFlag" id="HasApplicabilityDefinedFlag" />
                        <input type="hidden" value="@ViewBag.TradingPolicyType" id="TradingPolicyType" />
                        <input type="hidden" value="@ViewBag.ParentTradingPolicy" id="ParentTradingPolicy" name="ParentTradingPolicy" />
                        <input type="hidden" value="@ViewBag.CountUserAndOverlapTradingPolicy" id="CountUserAndOverlapTradingPolicy" name="CountUserAndOverlapTradingPolicy" />
                        <input type="hidden" value="@InsiderTrading.Common.Common.getResource("rul_msg_15395")" id="AffectApplicability" name="AffectApplicability" />
                        <input type="hidden" value="@ViewBag.TradingPolicyUserAction" id="TradingPolicyUserAction" name="TradingPolicyUserAction" />
                        <input type="hidden" value="@InsiderTrading.Common.ConstEnum.UserActions.TRADING_POLICY_DELETE" id="TradingPolicyDeleteUserAction" name="TradingPolicyDeleteUserAction" />
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

                                <button type="button" class="btn btn-success" id="BasicInfo" data-loading-text="Saving" autocomplete="off" name="BasicInfo" gridtype="114041"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("com_btn_14017")</button>
                                @{
                                    if (Model != null && Model.TradingPolicyId > 0)
                                    {
                                        if (ViewBag.CalledFrom == "Edit")
                                        {
                                            <a id="btnDefineApplicablility" name="btnDefineApplicablility" class="btn btn-success" data-toggle="modal" href='@Url.Action("ViewApplicablity", "TradingPolicy", new { TradingPolicyId = Model.TradingPolicyId,acid= @ViewBag.TradingPolicyUserAction, CalledFrom = @ViewBag.CalledFrom, TradingPolicyForCodeTypeID = Model.TradingPolicyForCodeId, ParentTradingPolicy = @ViewBag.ParentTradingPolicy })' role="button"><i class="icon icon-calender"></i>   @InsiderTrading.Common.Common.getResource("rul_btn_15393")</a>
                                        }
                                        else
                                        {
                                            <a id="btnDefineApplicablility" name="btnDefineApplicablility" class="btn btn-success" data-toggle="modal" href='@Url.Action("ViewApplicablity", "TradingPolicy", new { TradingPolicyId = Model.TradingPolicyId,acid= @ViewBag.TradingPolicyUserAction, CalledFrom = @ViewBag.CalledFrom, TradingPolicyForCodeTypeID = Model.TradingPolicyForCodeId, ParentTradingPolicy = @ViewBag.ParentTradingPolicy })' role="button"><i class="icon icon-calender"></i>   @InsiderTrading.Common.Common.getResource("rul_btn_15394")</a>
                                        }
                                    }
                                }
                                @{
                                    if (Model != null && Model.TradingPolicyId > 0 && InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.TRADING_POLICY_DELETE) && ViewBag.CalledFrom == "Edit")
                                    {
       
                                            <button type="button" id="DeleteTradingPolicy" name="DeleteTradingPolicy" class="btn btn-success" data-loading-text="Deleting" autocomplete="off">@InsiderTrading.Common.Common.getResource("com_btn_14009")</button>
                                    }
                                }
                                <button type="submit" class="btn btn-success cancel" id="cancelButton" data-dismiss="modal" name="Cancel"><i class="fa fa-times"></i> @InsiderTrading.Common.Common.getResource("com_btn_14010")</button>
                                <button type="button" name="Save1" id="Save1" class="confirm btn btn-success hide"><i class="fa fa-save"></i> CONFIRM</button>
                                <button type="button" name="Save2" id="Save2" class="confirm btn btn-success hide"><i class="fa fa-save"></i> CONFIRM1</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<div id="divOverlapModal" style="display:none;"></div>
@Scripts.Render("~/bundles/JqueryConfirm")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/TradingPolicy")
@Scripts.Render("~/bundles/CompareDateAnnotation")

@Html.Hidden("RadioButtonChangeTransaction", Url.Action("RadioButtonChangeTransaction", "TradingPolicy"))
@Html.Hidden("TradingPolicyForCodeType", Url.Action("TradingPolicyForCodeType", "TradingPolicy"))
@Html.Hidden("PreClearanceTransactionForTrade", Url.Action("PreClearanceTransactionForTrade", "TradingPolicy"))
@Html.Hidden("PreClrPartialTradeNotDoneFlagURL", Url.Action("PreClrPartialTradeNotDoneFlagURL", "TradingPolicy"))
@Html.Hidden("DiscloInitReqFlagURL", Url.Action("DiscloInitReqFlagURL", "TradingPolicy"))
@Html.Hidden("DiscloPeriodEndReqFlagURL", Url.Action("DiscloPeriodEndReqFlagURL", "TradingPolicy"))
@Html.Hidden("SaveTradingPolicy", Url.Action("BasicInfo", "TradingPolicy"))
@Html.Hidden("CreateTradingPolicy", Url.Action("Create", "TradingPolicy"))
@Html.Hidden("DeleteTradingPolicyDetails", Url.Action("DeleteTradingPolicy", "TradingPolicy"))
@Html.Hidden("ContinousSecurityFlagChange", Url.Action("ContinousSecurityFlagChange", "TradingPolicy"))
@Html.Hidden("ContinuousDisclosureRequiredURL", Url.Action("ContinuousDisclosureRequiredURL", "TradingPolicy"))
@Html.Hidden("ContinuousDisclosureSubmissionStockExchangeURL", Url.Action("ContinuousDisclosureSubmissionStockExchangeURL", "TradingPolicy"))
@Html.Hidden("PeriodEndDisclosureSubmissionStockExchangeURL", Url.Action("PeriodEndDisclosureSubmissionStockExchangeURL", "TradingPolicy"))
@Html.Hidden("PolicyList", Url.Action("Index", "TradingPolicy"))
@Html.Hidden("ViewOverlappedUser", Url.Action("ViewOverlappedUser", "TradingPolicy"))
@Html.Hidden("ContraTradeSecuirtyMapping", Url.Action("ContraTradeSecuirtyMapping", "TradingPolicy"))