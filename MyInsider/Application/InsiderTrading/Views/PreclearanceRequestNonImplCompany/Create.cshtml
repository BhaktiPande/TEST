@model InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel
@{
    ViewBag.Title = InsiderTrading.Common.Common.getResource("dis_ttl_17459");

    var html_attr = new Dictionary<string, object> { };
    var html_chk_attr = new Dictionary<string, object> { };
    var company_html_attr = new Dictionary<string, object> { };
    var quty_html_attr = new Dictionary<string, object> { };

    html_attr.Add("class", "form-control");
    html_chk_attr.Add("class", "");
    company_html_attr.Add("class", "form-control");

    quty_html_attr.Add("class", "form-control numericOnly");

    if (Model.PreclearanceStatusCodeId != null)
    {
        html_attr.Add("disabled", "disabled");
        html_chk_attr.Add("disabled", "form-disabled");
        quty_html_attr.Add("disabled", "form-control numericOnly");
    }
    company_html_attr.Add("disabled", "disabled");


    string view_name = "";
    string controller_name = "#";
    RouteValueDictionary controller_paramter = new RouteValueDictionary();

    if (ViewBag.BackURLACID == InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RESTRICTED_LIST_SEARCH)
    {
        view_name = "Cancel";
        controller_name = "PreclearanceRequestNonImplCompany";
        controller_paramter.Add("acid", InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_CANCEL);
    }
    else if (ViewBag.UserAction == InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DISCLOSURE_DETAILS_PRECLEARANCE_REQUEST_NONIMPLEMENTATION)
    {
        view_name = "Index";
        controller_name = " ";
        controller_paramter.Add("acid", ViewBag.UserAction);
    }
    else if (ViewBag.UserAction == InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_PRECLEARANCE_REQUEST_NONIMPLEMENTATION)
    {
        view_name = "COList";
        controller_name = "PreclearanceRequestNonImplCompany";
        controller_paramter.Add("acid", ViewBag.UserAction);
    }
}
@Styles.Render("~/content/SW360")

<!-- Content Header -->
<section class="content-header">
    <h4>@InsiderTrading.Common.Common.getResource("dis_ttl_17459")</h4>
</section>

<!-- Main content -->
<section class="content">
    <!-- Search form content -->
    <div class="row">
        <div class="col-lg-12">
            <div class="card panel-default">
                <div class="card-body">
                    @using (Html.BeginForm("SavePreclearanceRequest", "PreclearanceRequestNonImplCompany", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "", @autocomplete = "off", id = "frmPreclearanceRequest" }))
                    {
                        if (ViewBag.IsPreviousPeriodEndSubmission == 1 && Model.PreclearanceRequestId == 0)
                        {
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-6 col-xs-12">
                                    <label style="color:red;font-size:12px">@InsiderTrading.Common.Common.getResource(ViewBag.SubsequentPeriodEndOrPreciousPeriodEndResource)</label>
                                </div>
                            </div>
                        }
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })

                        <!-- form field row 1 -->
                        <div class="row">
                            <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                <div class="form-group">
                                    @Html.RadioButtonFor(m => m.PreclearanceRequestForCodeId, @InsiderTrading.Models.PreclearanceRequestFor.Self, html_chk_attr) @InsiderTrading.Common.Common.getResource("dis_lbl_17460")
                                    @Html.RadioButtonFor(m => m.PreclearanceRequestForCodeId, @InsiderTrading.Models.PreclearanceRequestFor.Relative, html_chk_attr) @InsiderTrading.Common.Common.getResource("dis_lbl_17461")
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                <div class="form-group" id="relativeDetails" style="display: none;">
                                    @Html.LabelFor(m => m.UserInfoIdRelative)
                                    @Html.DropDownListFor(m => m.UserInfoIdRelative, new SelectList(ViewBag.RelativeDropDown, "Key", "Value", ""), html_attr)
                                    @Html.ValidationMessageFor((m => m.UserInfoIdRelative))
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                @Html.LabelFor(m => m.PreclearanceDate) @Html.Label("" + InsiderTrading.Common.Common.ApplyFormatting(Model.PreclearanceDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date))
                                <br>
                                @if (Model.PreclearanceStatusCodeId == InsiderTrading.Common.ConstEnum.Code.PreclearanceRequestStatusApproved || Model.PreclearanceStatusCodeId == InsiderTrading.Common.ConstEnum.Code.PreclearanceRequestStatusRejected)
                                {
                                    @Html.LabelFor(m => m.PreclearanceStatusText) @Html.Label("" + Model.PreclearanceStatusText)
                                    <label>&nbsp;&nbsp;</label>
                                    @Html.LabelFor(m => m.ApproveOrRejectOn) @Html.Label(" " + InsiderTrading.Common.Common.ApplyFormatting(Model.ApproveOrRejectOn, InsiderTrading.Common.ConstEnum.DataFormatType.Date))
                                }
                            </div>
                        </div>

                        <!-- form field row 2 -->
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.TransactionTypeCodeId)
                                    @Html.DropDownListFor(m => m.TransactionTypeCodeId, new SelectList(ViewBag.TransactionDropDown, "Key", "Value", ""), html_attr)
                                    @Html.ValidationMessageFor((m => m.TransactionTypeCodeId))
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecurityTypeCodeId)
                                    @Html.DropDownListFor(m => m.SecurityTypeCodeId, new SelectList(ViewBag.SecurityDropDown, "Key", "Value", ""), html_attr)
                                    @Html.ValidationMessageFor(m => m.SecurityTypeCodeId)
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CompanyName)
                                    @Html.TextBoxFor(m => m.CompanyName, company_html_attr)
                                    @Html.HiddenFor(m => m.CompanyId)
                                    @Html.HiddenFor(m=>m.CompanyName)
                                </div>
                            </div>
                        </div>

                        <!-- form field row 3 -->
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecuritiesToBeTradedQty)
                                    @Html.TextBoxFor(m => m.SecuritiesToBeTradedQty, quty_html_attr)
                                    @Html.ValidationMessageFor(m => m.SecuritiesToBeTradedQty)
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecuritiesToBeTradedValue)
                                    @Html.TextBoxFor(m => m.SecuritiesToBeTradedValue, quty_html_attr)
                                    @Html.ValidationMessageFor(m => m.SecuritiesToBeTradedValue)
                                </div>
                            </div>
                            <div id="DivModeOfAcquisition">
                                @Html.Partial("~/Views/PreclearanceRequestNonImplCompany/_modeOfAcqisition.cshtml")
                            </div>
                        </div>

                        <!-- form field row 4 -->
                    <div class="row" id="divDMAT">
                                @Html.Partial("~/Views/PreclearanceRequestNonImplCompany/_DEMATList.cshtml")
                     </div>

                                    <!-- form field row 5 -->
                        if (Model.PreclearanceStatusCodeId == null)
                        {
                            <div class="row">
                                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1">
                                    @Html.CheckBox("declare", false, new { @class = "cr-check" })
                                </div>
                                <div class="col-lg-11 col-md-11 col-sm-11 col-xs-11">
                                    @InsiderTrading.Common.Common.getResource("dis_lbl_17479")
                                </div>
                            </div>
                            <br>
                        }

                        <!-- form buttons -->
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                @if (Model.PreclearanceStatusCodeId == null)
                                {
                                    @Html.HiddenFor(m => m.PreclearanceRequestId)
                                    @Html.HiddenFor(m => m.RlSearchAuditId)
                                    @Html.HiddenFor(m => m.RlSearchAuditIdOS)
                                    @Html.HiddenFor(m => m.PreclearanceStatusCodeId)
                                    @Html.HiddenFor(m => m.UserInfoId)
                                    @Html.HiddenFor(m => m.PreclearanceDate)
                                    @Html.Hidden("acid", (Int32)ViewBag.UserAction)
                                    @Html.Hidden("backacid", (Int32)ViewBag.BackURLACID)
                                    if (ViewBag.IsPreviousPeriodEndSubmission != 1)
                                    {
                                        <input type="hidden" name="authorization" value="SavePreclearanceRequest:@ViewBag.UserAction" />

                                        <button type="submit" name="SavePreclearanceRequest" class="confirm btn btn-success" id="btnSave"><i class="fa fa-check"> @InsiderTrading.Common.Common.getResource("dis_btn_17472")</i></button>
                                    }
                                }
                                <a class="btn btn-success cancel" id="cancelButton" data-toggle="modal" href='@Url.Action(view_name, controller_name, controller_paramter)' role="button">@InsiderTrading.Common.Common.getResource("dis_btn_17473")</a>
                            </div>
                        </div>
                    @Html.HiddenFor(m => m.SequenceNo)
                    }
                    @Html.Hidden("DematListURL", Url.Action("DematList", "PreclearanceRequestNonImplCompany"))
                    @Html.Hidden("AgreeTermsMsg", InsiderTrading.Common.Common.getResource("dis_lbl_17481"))
                    @Html.Hidden("LoadModeOfAquisition", Url.Action("LoadModeOfAquisition", "PreclearanceRequestNonImplCompany"))
                    @Html.Hidden("DematCreateAcid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DMAT_CREATE)
                    @Html.Hidden("DematCreateUser", Model.UserInfoId)
                    @Html.Hidden("AddDematURL", Url.Action("EditDMATDetails", "Employee"))
                    @Html.Hidden("SaveDMAT", Url.Action("SaveDMATDetails", "Employee"))
                    @Html.Hidden("DematPopup", "yes")

                    @Html.Hidden("DematListURL", Url.Action("DematList", "PreclearanceRequestNonImplCompany"))
                    @Html.Hidden("AgreeTermsMsg", InsiderTrading.Common.Common.getResource("dis_lbl_17481"))

                    @Html.Hidden("DematCreateAcid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DMAT_CREATE)
                    @Html.Hidden("DematCreateUser", Model.UserInfoId)
                    @Html.Hidden("AddDematURL", Url.Action("EditDMATDetails", "Employee"))
                    @Html.Hidden("SaveDMAT", Url.Action("SaveDMATDetails", "Employee"))
                    @Html.Hidden("DematPopup", "yes")
                    @Html.Hidden("LoadBalanceDMATwise", Url.Action("LoadBalanceDMATwise", "PreclearanceRequestNonImplCompany"))
                    @Html.Hidden("LoadModeOfAquisition", Url.Action("LoadModeOfAquisition", "PreclearanceRequestNonImplCompany"))
                    @Html.Hidden("LoadRelative", Url.Action("LoadRelative", "PreclearanceRequestNonImplCompany"))
                    @Html.Hidden("LoadSecurityType", Url.Action("LoadSecurityType", "PreclearanceRequestNonImplCompany"))
                </div>
            </div>
        </div>
    </div>
</section>

<div id="divDMATDetailsModal" style="display:none;"></div>

@Scripts.Render("~/bundles/PreclearanceRequestNonImplCompany")