@model InsiderTrading.Models.PreclearanceUserSearchViewModel
@{
    ViewBag.Title = "Index";
    TempData.Remove("PreClrList");
    TempData.Remove("GridAllow");
}


<section class="content-header">

    @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
    <h1>@InsiderTrading.Common.Common.getResource("dis_ttl_53033")</h1>

</section>
<!-- Main content -->
<section class="content  search" gridtype="@ViewBag.GridType">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <p>
                <button type="button" data-toggle="collapse" class="btn btn-success" data-target="#filter-panel">
                    <i class="fa fa-search"> @InsiderTrading.Common.Common.getResource("com_btn_14005")</i>
                </button>
                <a class="btn btn-success" href='@Url.Action("RestrictedListSearch", "RestrictedList", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RESTRICTED_LIST_SEARCH })' role="button" title=""><i class="fa fa-plus-square"></i>   @InsiderTrading.Common.Common.getResource("dis_btn_53001")</a>
                <a class="btn btn-success" href='@Url.Action("PreClearanceNotTakenAction", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RESTRICTED_LIST_SEARCH })' role="button" title=""><i class="fa fa-plus-square"></i>   @InsiderTrading.Common.Common.getResource("dis_btn_53025")</a>
            </p>
        </div>
    </div>

    <input type="hidden" gridtype="@ViewBag.GridType" />
    <input type="hidden" value="@ViewBag.UserID" id="1" gridtype="@ViewBag.GridType" />
    <form role="form">
        <div id="filter-panel" class="collapse filter-panel">
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_grd_53013"))
                                        @Html.TextBoxFor(m => m.PreClearanceID, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "2", @Value = @ViewBag.PreClearanceRequestID })
                                        @Html.ValidationMessageFor(m => m.PreClearanceID)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_grd_53016"))
                                        @Html.DropDownList("RequestStatus", new SelectList(ViewBag.RequestStatusList, "Key", "Value", ViewBag.PreClearanceRequestStatus), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "3" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_grd_53017"))
                                        @Html.DropDownList("TransactionType", new SelectList(ViewBag.TransactionTypeList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "4" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_grd_53009"))
                                        @Html.TextBox("CompanyName", null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "txtCompany", data_url = Url.Action("GetList", "RestrictedList") })
                                        <input type="hidden" name="5" id="5" gridtype="@ViewBag.GridType" />
                                    </div>
                                </div>
                                @* <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17066"))
                                            @Html.DropDownList("TradeDetails", new SelectList(ViewBag.TradeDetailsList, "Key", "Value", ViewBag.TradeDetailsID), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "7" })
                                        </div>
                                    </div>*@
                            </div>
                            @*<div class="row">
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <div class="form-group" id="sandbox-container">
                                            @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17067"))
                                            @{
                                                string SubmissionDate = "";
                                                SubmissionDate = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                            }
                                            <div class="input-group date">
                                                @Html.TextBox("SubmissionDate", SubmissionDate, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "5" })
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <div class="form-group" id="sandbox-container">
                                            @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17068"))
                                            @{
                                                string SubmissionDateTo = "";
                                                SubmissionDateTo = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                            }
                                            <div class="input-group date">
                                                @Html.TextBox("SubmissionDateTo", SubmissionDateTo, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "6" })
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17069"))
                                            @Html.DropDownList("DisclosureDetailsSoftcopy", new SelectList(ViewBag.DisclosureDetailsList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "8" })
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17070"))
                                            @Html.DropDownList("DisclosureDetailsHardcopy", new SelectList(ViewBag.DisclosureDetailsList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "9" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label>&nbsp;</label>
                                            @Html.CheckBox("ContinuousDisclosureRequired", new { @class = "Checkbox cr-check", gridtype = @ViewBag.GridType, id = "10" })
                                            &nbsp;&nbsp; @Html.Label("Continuous Disclosure Required")
                                        </div>
                                    </div>
                                </div>*@
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                    <button type="button" class="btn btn-success" id="btnSearch"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                    <button type="button" class="btn btn-success" id="btnReset" dt_name="btnReset" dt_gridtype="@ViewBag.GridType"><i class="fa fa-undo"></i> @InsiderTrading.Common.Common.getResource("com_btn_14006")</button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr>

        </div>
    </form>

    <div class="div-spacer"></div>
    <input type="hidden" value="@ViewBag.TradeDetailsID" id="6" gridtype="@ViewBag.GridType" />
    <input type="hidden" value="@ViewBag.IsFromDashboard" id="7" gridtype="@ViewBag.GridType" />
    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, btnSearch = "btnSearch", sSortCol = "" });}

    <section class="content-header">
        <h5>PLEASE NOTE:</h5>
        <h5>
            @InsiderTrading.Common.Common.getResource("dis_msg_55400")
        </h5>
    </section>
    <br />
    <input type="hidden" name="InsiderTypeUser" id="InsiderTypeUser" value="@ViewBag.InsiderTypeUser" />

</section><!-- /.content -->
@Html.Hidden("View", Url.Action("View", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "dis_grd_53013", param = "{'text':'<dis_grd_53013>','href':'" + Url.Action("View", "PreclearanceRequestNonImplCompany", new { acid = 216 }) + "&pclid=<PreclearanceRequestId>','class':'','style':'color:blue;'}" })
@Html.Hidden("DownloadFormE", Url.Action("DownloadFormE", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities }))
@Html.Hidden("TradingDetailsPending", Url.Action("Index", "TradingTransaction_OS"))
@Html.Hidden("NotTradedView", Url.Action("ViewNotTraded", "PreclearanceRequestNonImplCompany"))
@Html.Hidden("SoftcopyView", Url.Action("DownloadFormBOS", "InsiderInitialDisclosure", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities }))
@Html.Hidden("SoftcopyPending", Url.Action("DownloadFormBOS", "InsiderInitialDisclosure", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities, nDisclosureTypeCodeId = InsiderTrading.Common.ConstEnum.Code.DisclosureTypeContinuous }))
@*@Html.Hidden("HardcopyPending", Url.Action("UploadHardDocument", "TradingTransaction_OS", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_LETTER_SUBMISSION, nDisclosureTypeCodeId = InsiderTrading.Common.ConstEnum.Code.DisclosureTypeContinuous}))*@
@Html.Hidden("HardcopyPending", Url.Action("UploadHardDocument", "TradingTransaction_OS", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities, nDisclosureTypeCodeId = InsiderTrading.Common.ConstEnum.Code.DisclosureTypeContinuous }))
@Html.Hidden("HardcopyView", Url.Action("ViewHardCopy", "TradingTransaction_OS", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE, nDisclosureTypeCodeId = InsiderTrading.Common.ConstEnum.Code.DisclosureTypeContinuous }))

<script type="text/javascript">
    function SearchCompany(cmpname) {
        $(function () {
            var CompanyName = cmpname;
            $.ajax({
                url: '@Url.Content("~/RestrictedList/GetExistNSEBSEDetailsJSON/")',
                type: "GET",
                data: { CompanyName: CompanyName },
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger
                    if (data.agent != 0) {
                        $("#txtCompany").val(data[0].CompanyName);
                        $("#5").val(data[0].RLCompanyId);
                    }
                }
            });
        });
    }

    $(function () {
        $('#txtCompany').autocomplete({
            minLength: 0,
            source: function (request, response) {
                var url = $(this.element).data('url');

                $.getJSON(url, { term: request.term }, function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.CompanyName,
                            value: item.CompanyName
                        }
                    }));
                })
            },
            select: function (event, ui) {
                debugger
                $(event.target).val('');
                var cmpname = ui.item.label;
                SearchCompany(cmpname)
            },
            change: function (event, ui) {
                debugger
                if (!ui.item) {
                    $(event.target).val('');
                }
            }
        });
    })

    $('#btnReset').click(function () {
        $("#5").val(null);
    });
</script>

