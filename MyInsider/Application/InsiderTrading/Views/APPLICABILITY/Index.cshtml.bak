@model InsiderTrading.Models.UserInfoModel
@{
    ViewBag.Title = "Index";
}
<script type="text/javascript">
    arrIncludeList = new Array(4);
    arrExcludeList = new Array();
    arrIncludeList[0] = new Array();
    arrIncludeList[1] = new Array();
    arrIncludeList[2] = new Array();
    arrIncludeList[3] = new Array();
    filterGrid = '@ViewBag.Applicability_Filter_EmployeeInsider';
    nonInsEmpfilterGrid = '@ViewBag.Applicability_Filter_Employee';
    arrGrid = ['@ViewBag.Applicability_Search_EmployeeInsider',
        '@ViewBag.Applicability_Association_EmployeeInsider',
        '@ViewBag.Applicability_Search_Corporate',
        '@ViewBag.Applicability_Association_Corporate',
        '@ViewBag.Applicability_Search_Non_Employee',
        '@ViewBag.Applicability_Association_Non_Employee',
        '@ViewBag.Applicability_Search_COInsider',
        '@ViewBag.Applicability_Association_COInsider',
        '@ViewBag.Applicability_Search_Employee',
        '@ViewBag.Applicability_Association_Employee'];

    //Selection/visible UI for the already saved entries so that the already selected portion gets visible.
    function dropdownSelection() {
        var AllEmployeeFlag = '@ViewBag.AllEmployeeFlag';
        var AllInsiderFlag = '@ViewBag.AllInsiderFlag';
        var AllEmployeeInsiderFlag = '@ViewBag.AllEmployeeInsiderFlag';
        var AllCoFlag = '@ViewBag.AllCoFlag';
        var AllCorporateInsiderFlag = '@ViewBag.AllCorporateInsiderFlag';
        var AllNonEmployeeInsiderFlag = '@ViewBag.AllNonEmployeeInsiderFlag';
        var RecordCount = '@ViewBag.RecordCount';
        var ApplicabilityType = '@ViewBag.ApplicabilityType';
        var VisibleElement = '@ViewBag.VisibleElement[0]';
        if (AllInsiderFlag == 'True') {
            $("#multi-selected-others").val("oth-all-ins").trigger('change');
        } else if (ApplicabilityType == 132006 && VisibleElement == 'True') {
            $("#multi-selected-others").val("oth-sel-ins").trigger('change');
            if (AllEmployeeInsiderFlag == 'True' || AllEmployeeInsiderFlag == 'False') {
                $("div.custom-tabs>ul>li:first a").trigger("click");
                if (AllEmployeeInsiderFlag == 'True')
                    $('input[name="rdoEmpIns"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoEmpIns"][value=0]').prop('checked', true).trigger('change');
            }
            if (AllEmployeeFlag == 'True')
                $('input[name="rdoAllEmp"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllEmp"][value=0]').prop('checked', true).trigger('change');
            if (AllCoFlag == 'True')
                $('input[name="rdoAllCo"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllCo"][value=0]').prop('checked', true).trigger('change');
            if (AllCorporateInsiderFlag == 'True')
                $('input[name="rdoAllCorpIns"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllCorpIns"][value=0]').prop('checked', true).trigger('change');
            if (AllNonEmployeeInsiderFlag == 'True')
                $('input[name="rdoAllNonEmpIns"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllNonEmpIns"][value=0]').prop('checked', true).trigger('change');
        } else if (RecordCount == 1 && (AllEmployeeFlag == 'True' || AllEmployeeInsiderFlag == 'True' || AllCoFlag == 'True' || AllCorporateInsiderFlag == 'True' || AllNonEmployeeInsiderFlag == 'True')) {
            if (AllEmployeeFlag == 'True' && AllEmployeeInsiderFlag == 'False' && AllCoFlag == 'False' && AllCorporateInsiderFlag == 'False' && AllNonEmployeeInsiderFlag == 'False') {
                $("#multi-selected-others").val("oth-all-emp").trigger('change');
            }
            else if (AllEmployeeInsiderFlag == 'True' && AllEmployeeFlag == 'False' && AllCoFlag == 'False' && AllCorporateInsiderFlag == 'False' && AllNonEmployeeInsiderFlag == 'False') {
                $("#multi-selected-others").val("oth-all-emp-ins").trigger('change');
            }
            else if (AllCoFlag == 'True' && AllEmployeeInsiderFlag == 'False' && AllEmployeeFlag == 'False' && AllCorporateInsiderFlag == 'False' && AllNonEmployeeInsiderFlag == 'False') {
                $("#multi-selected-others").val("oth-all-Co").trigger('change');
            }
            else if (AllCorporateInsiderFlag == 'True' && AllEmployeeInsiderFlag == 'False' && AllCoFlag == 'False' && AllEmployeeFlag == 'False' && AllNonEmployeeInsiderFlag == 'False') {
                $("#multi-selected-others").val("oth-all-Corp-ins").trigger('change');
            }
            else if (AllNonEmployeeInsiderFlag == 'True' && AllEmployeeInsiderFlag == 'False' && AllCoFlag == 'False' && AllCorporateInsiderFlag == 'False' && AllEmployeeFlag == 'False') {

                $("#multi-selected-others").val("oth-all-non-emp-ins").trigger('change');
            }
            else {
                $("#multi-selected-others").val("oth-sel-ins").trigger('change');
                if (AllEmployeeInsiderFlag == 'True' || AllEmployeeInsiderFlag == 'False') {
                    $("div.custom-tabs>ul>li:first a").trigger("click");
                    if (AllEmployeeInsiderFlag == 'True')
                        $('input[name="rdoEmpIns"][value=1]').prop('checked', true).trigger('change');
                    else
                        $('input[name="rdoEmpIns"][value=0]').prop('checked', true).trigger('change');
                }
                if (AllEmployeeFlag == 'True')
                    $('input[name="rdoAllEmp"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoAllEmp"][value=0]').prop('checked', true).trigger('change');
                if (AllCoFlag == 'True')
                    $('input[name="rdoAllCo"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoAllCo"][value=0]').prop('checked', true).trigger('change');
                if (AllCorporateInsiderFlag == 'True')
                    $('input[name="rdoAllCorpIns"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoAllCorpIns"][value=0]').prop('checked', true).trigger('change');
                if (AllNonEmployeeInsiderFlag == 'True')
                    $('input[name="rdoAllNonEmpIns"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoAllNonEmpIns"][value=0]').prop('checked', true).trigger('change');
            }
        } else {
            $("#multi-selected-others").val("oth-sel-ins").trigger('change');
            if (AllEmployeeInsiderFlag == 'True' || AllEmployeeInsiderFlag == 'False') {
                $("div.custom-tabs>ul>li:first a").trigger("click");
                if (AllEmployeeInsiderFlag == 'True')
                    $('input[name="rdoEmpIns"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoEmpIns"][value=0]').prop('checked', true).trigger('change');
            }
            if (AllEmployeeFlag == 'True')
                $('input[name="rdoAllEmp"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllEmp"][value=0]').prop('checked', true).trigger('change');
            if (AllCoFlag == 'True')
                $('input[name="rdoAllCo"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllCo"][value=0]').prop('checked', true).trigger('change');
            if (AllCorporateInsiderFlag == 'True')
                $('input[name="rdoAllCorpIns"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllCorpIns"][value=0]').prop('checked', true).trigger('change');
            if (AllNonEmployeeInsiderFlag == 'True')
                $('input[name="rdoAllNonEmpIns"][value=1]').prop('checked', true).trigger('change');
            else
                $('input[name="rdoAllNonEmpIns"][value=0]').prop('checked', true).trigger('change');
        }

        /*
        if (AllEmployeeFlag != "") {
            if (AllEmployeeFlag == 'True') {
                if ($("#multi-selected-others option[value='oth-all-emp']").length > 0)
                {
                    $("#multi-selected-others").val("oth-all-emp").trigger('change');
                }
                else {
                    $("#multi-selected-others").val("oth-sel-ins").trigger('change');
                    $('input[name="rdoAllEmp"][value=1]').prop('checked', true).trigger('change');
                }

            } else if (AllInsiderFlag == 'True') {
                $("#multi-selected-others").val("oth-all-ins").trigger('change');
            } else if (AllEmployeeInsiderFlag == 'True' || AllEmployeeInsiderFlag == 'False') {
                $("#multi-selected-others").val("oth-sel-ins").trigger('change');
                $("div.custom-tabs>ul>li:first a").trigger("click");
                if (AllEmployeeInsiderFlag == 'True')
                    $('input[name="rdoEmpIns"][value=1]').prop('checked', true).trigger('change');
                else
                    $('input[name="rdoEmpIns"][value=0]').prop('checked', true).trigger('change');
            }
        }
        */
        if ('@ViewBag.CalledFrom' != "Edit" && '@ViewBag.CalledFrom' != "e") {
            $('input[name="rdoEmpIns"]').attr('disabled', 'disabled');
            $('input[name="rdoAllEmp"]').attr('disabled', 'disabled');
            $('input[name="rdoAllCo"]').attr('disabled', 'disabled');
            $('input[name="rdoAllCorpIns"]').attr('disabled', 'disabled');
            $('input[name="rdoAllNonEmpIns"]').attr('disabled', 'disabled');
            $("#multi-selected-others").attr('disabled', 'disabled');
        }
    }

    $(document).ready(function () {
        var calledForm = '@ViewBag.CalledFrom';


        //Dropdown selection for all employee, all insider or select insider.
        $("#multi-selected-others").change(function () {
            $("select option:selected").each(function () {
                if ($(this).attr("value") == "oth-sel-ins") {
                    $(".sel-container").hide();
                    $(".oth-sel-ins").show();
                    $("div.custom-tabs>ul>li:first a").trigger("click");
                }
                if ($(this).attr("value") == "oth-all-emp") {
                    $(".sel-container").hide();
                    $(".oth-all-emp").show();
                }
                if ($(this).attr("value") == "oth-all-ins") {
                    $(".sel-container").hide();
                    $(".oth-all-ins").show();
                }
                if ($(this).attr("value") == "oth-all-emp-ins") {
                    $(".sel-container").hide();
                    $(".oth-all-ins").show();
                }
                if ($(this).attr("value") == "oth-all-Corp-ins") {
                    $(".sel-container").hide();
                    $(".oth-all-ins").show();
                }
                if ($(this).attr("value") == "oth-all-non-emp-ins") {
                    $(".sel-container").hide();
                    $(".oth-all-ins").show();
                }
                if ($(this).attr("value") == "oth-all-Co") {
                    $(".sel-container").hide();
                    $(".oth-all-ins").show();
                }
                if ($(this).text().toLowerCase() == "select") {
                    $(".sel-container,.oth-all-ins,.oth-all-emp").hide();
                }
            });
        }).change();

        //Radio button event available in Employee inside tab
        $('input[name="rdoEmpIns"]').change(function () {
            if ($(this).val() != undefined) {
                if ($(this).val() == "1")
                    $('#divEmpIns').hide();
                else
                    $('#divEmpIns').show();
            }
            else {
                $('#divEmpIns').hide();
            }
        }).change();
        //Radio button event available in Employee inside tab
        $('input[name="rdoAllEmp"]').change(function () {
            if ($(this).val() != undefined) {
                if ($(this).val() == "1")
                    $('#divSltEmp').hide();
                else
                    $('#divSltEmp').show();
            }
            else {
                $('#divSltEmp').hide();
            }
        }).change();
        //Radio button event available in CO tab
        $('input[name="rdoAllCo"]').change(function () {
            if ($(this).val() != undefined) {
                if ($(this).val() == "1")
                    $('#divSltCo').hide();
                else
                    $('#divSltCo').show();
            }
            else {
                $('#divSltCo').hide();
            }
        }).change();
        //Radio button event available in Corporate Insider tab
        $('input[name="rdoAllCorpIns"]').change(function () {
            if ($(this).val() != undefined) {
                if ($(this).val() == "1")
                    $('#divSltCorpIns').hide();
                else
                    $('#divSltCorpIns').show();
            }
            else {
                $('#divSltCorpIns').hide();
            }
        }).change();
        //Radio button event available in Non Employee Insider tab
        $('input[name="rdoAllNonEmpIns"]').change(function () {
            if ($(this).val() != undefined) {
                if ($(this).val() == "1")
                    $('#divSltNonEmpIns').hide();
                else
                    $('#divSltNonEmpIns').show();
            }
            else {
                $('#divSltNonEmpIns').hide();
            }
        }).change();
        //display already selected records according to the flag selection
        dropdownSelection();

        //Reset button functionality for setting defaults for search functionality and the gird list.
        $('*[name=btnReset]').click(function () {
            var nGridTypeId = $(this).closest(".clientSearch").attr("gridtype");
            var tableElement = $('table[name="DatatableGrid"][gridtype=' + nGridTypeId + ']').dataTable();
            $.each(($(".clientSearch[gridtype=" + nGridTypeId + "] input:not('[type=hidden]'):not('[type=button]')")), function () {
                $(this).val("");
                tableElement.fnFilter("", $(this).attr('id'));
            });
            $.each(($('.clientSearch[gridtype=' + nGridTypeId + ']').find("select:not('[type=hidden]'):not('[type=button]')")), function () {
                $(this).val("00");
                tableElement.fnFilter("", $(this).attr('id'));
            });
            $('.clientSearch[gridtype=' + nGridTypeId + ']').next().find('tbody tr').find('td:first input[type=checkbox]:checked').attr("checked", false);
        });

        //Add button event for getting the selected employee and filters to other associated list accordingly.
        $('button[name=btnApplicabilityAdd]').click(function () {
            var btnIndex = parseInt($(this).attr('value'));
            var index = eval(btnIndex) * 2;
            var flag = false;
            var datatable_1 = null;
            var datatable_2 = null;
            datatable_1 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[index] + ']').dataTable();
            datatable_2 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[index + 1] + ']').dataTable();

            // For Employee insider tab add the filters according to the search criteria selected.
            if (btnIndex == 0) {
                //check if filter selected
                if (((($('#divEmpIns  #3').val() != "undefined" && $('#divEmpIns  #3').val() != null && $('#divEmpIns  #3').val().indexOf("00") < 0 && $('#divEmpIns  #3').val().length > 0) ||
                     ($('#divEmpIns  #4').val() != "undefined" && $('#divEmpIns  #4').val() != null && $('#divEmpIns  #4').val().indexOf("00") < 0 && $('#divEmpIns  #4').val().length > 0) ||
                     ($('#divEmpIns  #5').val() != "undefined" && $('#divEmpIns  #5').val() != null && $('#divEmpIns  #5').val().indexOf("00") < 0 && $('#divEmpIns  #5').val().length > 0) ||
                     ($('#divEmpIns  #6').val() != "undefined" && $('#divEmpIns  #6').val() != null && $('#divEmpIns  #6').val().indexOf("00") < 0 && $('#divEmpIns  #6').val().length > 0) ||
                     ($('#divEmpIns  #7').val() != "undefined" && $('#divEmpIns  #7').val() != null && $('#divEmpIns  #7').val().indexOf("00") < 0 && $('#divEmpIns  #7').val().length > 0) ||
                     ($('#divEmpIns  #8').val() != "undefined" && $('#divEmpIns  #8').val() != null && $('#divEmpIns  #8').val().indexOf("00") < 0 && $('#divEmpIns  #8').val().length > 0)
                    ) && datatable_1.$('tbody tr').find('td:first input:checked').length > 0) ||
                    (($('.clientSearch').find('#divEmpIns  #1').val() != "" || $('.clientSearch').find('#divEmpIns  #2').val() != "") && datatable_1.$('tbody tr').find('td:first input:checked').length > 0) || datatable_1.$('tbody tr').find('td:first input:checked').length > 0) {
                    //Iterate through employee insider list and add all the excluded records
                    datatable_1.$('tbody tr').find('td:first input:not(:checked)').parents('tr').each(function () {
                        var applicabilityData = datatable_1.fnGetData(this);
                        if (arrExcludeList.indexOf(applicabilityData.UserInfoId) == -1)
                            arrExcludeList.push(applicabilityData.UserInfoId);
                    });
                    if ($('#select-all')[0].checked) {
                        var arrData = {}
                        Department = ($('#divEmpIns  #3').val());
                        Grade = $('#divEmpIns  #4').val();
                        Designation = $('#divEmpIns  #5').val();
                        Category = $('#divEmpIns  #6').val();
                        SubCategory = $('#divEmpIns  #7').val();
                        Role = $('#divEmpIns  #8').val();
                        var filter = [];

                        Department = Department != null ? [Department] : [""];
                        Grade = Grade != null ? [Grade] : [""];
                        Designation = Designation != null ? [Designation] : [""];
                        Category = Category != null ? [Category] : [""];
                        SubCategory = SubCategory != null ? [SubCategory] : [""];
                        Role = Role != null ? [Role] : [""];

                        // fetch the search selection
                        if (Department && Department.length > 0 && Department.indexOf('00') != -1)
                            Department.splice(Department.indexOf('00'), 1);
                        if (Grade && Grade.length > 0 && Grade.indexOf('00') != -1)
                            Grade.splice(Grade.indexOf('00'), 1);
                        if (Designation && Designation.length > 0 && Designation.indexOf('00') != -1)
                            Designation.splice(Designation.indexOf('00'), 1);
                        if (Category && Category.length > 0 && Category.indexOf('00') != -1)
                            Category.splice(Category.indexOf('00'), 1);
                        if (SubCategory && SubCategory.length > 0 && SubCategory.indexOf('00') != -1)
                            SubCategory.splice(SubCategory.indexOf('00'), 1);
                        if (Role && Role.length > 0 && Role.indexOf('00') != -1)
                            Role.splice(Role.indexOf('00'), 1);

                        Department = Department && Department.length != 0 ? Department : [""];
                        Grade = Grade && Grade.length != 0 ? Grade : [""];
                        Designation = Designation && Designation.length != 0 ? Designation : [""];
                        Category = Category && Category.length != 0 ? Category : [""];
                        SubCategory = SubCategory && SubCategory.length != 0 ? SubCategory : [""];
                        Role = Role && Role.length != 0 ? Role : [""];
                        // Insert all the possible combination to filter datatable
                        for (var i = 0; i < Department.length; i++) {
                            var deptName = Department[i] != "" ? $('#divEmpIns  #3 option[value=' + Department[i] + ']').text() : "";

                            for (var j = 0; j < Grade.length; j++) {
                                var gradName = Grade[j] != "" ? $('#divEmpIns  #4 option[value=' + Grade[j] + ']').text() : "";
                                for (var k = 0; k < Designation.length; k++) {
                                    var desgnName = Designation[k] != "" ? $('#divEmpIns  #5 option[value=' + Designation[k] + ']').text() : "";
                                    for (var k = 0; k < Category.length; k++) {
                                        var CategoryName = Category[k] != "" ? $('#divEmpIns  #6 option[value=' + Category[k] + ']').text() : "";
                                        for (var k = 0; k < SubCategory.length; k++) {
                                            var SubCategoryName = SubCategory[k] != "" ? $('#divEmpIns  #7 option[value=' + SubCategory[k] + ']').text() : "";
                                            for (var k = 0; k < Role.length; k++) {
                                                var RoleName = Role[k] != "" ? $('#divEmpIns  #8 option[value=' + Role[k] + ']').text() : "";
                                                //alert(Department[i] + "-" + Grade[j] + "-" + Designation[k] + "-" + Category[j] + "-" + SubCategory[k] + "-" + Role[k]);
                                                if (Department[i] != "" || Grade[j] != "" || Designation[k] != "" || Category[j] != "" || SubCategory[k] != "" || Role[k] != "") {
                                                    var datatable1 = $('table[name="DatatableGrid"][gridtype=' + filterGrid + ']').dataTable();
                                                    datatable1.fnAddData({ 'ApplicabilityDtlsId': '0', 'DepartmentId': Department[i], 'GradeId': Grade[j], 'DesignationId': Designation[k], 'CategoryId': Category[k], 'SubCategoryId': SubCategory[k], 'RoleId': Role[k], 'rul_grd_15339': deptName, 'rul_grd_15340': gradName, 'rul_grd_15341': desgnName, 'rul_grd_15451': CategoryName, 'rul_grd_15452': SubCategoryName, 'rul_grd_15453': RoleName });
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        flag = true;
                    }
                    flag = true;
                } else { flag = false; }
            } else { flag = true; }

            if (flag) {
                //Iterate and insert/delete all the selected entiries from respective list
                datatable_1.$('tbody tr').find('td:first input:checked').parents('tr').each(function () {
                    var applicabilityData = datatable_1.fnGetData(this);
                    datatable_2.fnAddData(applicabilityData);
                    datatable_1.fnDeleteRow(this, false);
                });

                datatable_1.fnDraw();
                datatable_2.fnDraw();
            }
            $('*[name=btnReset]').trigger('click');
        });


        $('#btnApplicabilityApply').click(function () {
            var arrData = {};
            var j = 0, cnt = 0;
            var selection = $('#multi-selected-others option:selected').val();

            //check if option selected
            if (selection != "0") {
                $('*[name=btnReset]').trigger('click');
                //Build the flags and id's to be sent
                //arrData['nAllEmployeeFlag'] = selection == "oth-all-emp" ? 1 : 0;
                if (selection == "oth-sel-ins") {
                    arrData['nAllEmployeeFlag'] = (selection == "oth-all-emp" ? 1 : $('input[name="rdoAllEmp"]:checked').val() != undefined ? parseInt($('input[name="rdoAllEmp"]:checked').val()) : 0);//selection == "oth-sel-ins" ? 1 : 0;
                    arrData['nAllInsiderFlag'] = selection == "oth-all-ins" ? 1 : 0;
                    arrData['nAllEmployeeInsiderFlag'] = (selection == "oth-all-emp-ins" ? 1 : $('input[name="rdoEmpIns"]:checked').val() != undefined ? parseInt($('input[name="rdoEmpIns"]:checked').val()) : 0);//selection == "oth-sel-ins" ? 1 : 0;
                    arrData['nAllCoFlag'] = (selection == "oth-all-Co" ? 1 : $('input[name="rdoAllCo"]:checked').val() != undefined ? parseInt($('input[name="rdoAllCo"]:checked').val()) : 0);//selection == "oth-sel-ins" ? 1 : 0;
                    arrData['nAllCorporateInsiderFlag'] = (selection == "oth-all-Corp-ins" ? 1 : $('input[name="rdoAllCorpIns"]:checked').val() != undefined ? parseInt($('input[name="rdoAllCorpIns"]:checked').val()) : 0);//selection == "oth-sel-ins" ? 1 : 0;
                    arrData['nAllNonEmployeeInsiderFlag'] = (selection == "oth-all-non-emp-ins" ? 1 : $('input[name="rdoAllNonEmpIns"]:checked').val() != undefined ? parseInt($('input[name="rdoAllNonEmpIns"]:checked').val()) : 0);//selection == "oth-sel-ins" ? 1 : 0;
                    
                    // If all employee insider set to 0 get excluded list.
                    if (arrData['nAllEmployeeInsiderFlag'] == 0 && $('table[name="DatatableGrid"][gridtype=' + arrGrid[0] + ']').length > 0) {
                        var datatable_1 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[0] + ']').dataTable();

                        //Add excluded elements from search employee insider
                        datatable_1.$('tbody tr').find('td:first input[exclude=150002]').parents('tr').each(function () {
                            var applicabilityData = datatable_1.fnGetData(this);
                            if (arrIncludeList[0].indexOf(applicabilityData.UserInfoId) == -1 && arrExcludeList.indexOf(applicabilityData.UserInfoId) == -1)
                                arrExcludeList.push(applicabilityData.UserInfoId);
                        });
                        var datatable_2 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[1] + ']').dataTable();
                        //Add excluded elements from associated employee insider
                        datatable_2.$('tbody tr').find('td:first input:not(:checked)').parents('tr').each(function () {
                            var applicabilityData = datatable_2.fnGetData(this);
                            if (arrIncludeList[0].indexOf(applicabilityData.UserInfoId) == -1 && arrExcludeList.indexOf(applicabilityData.UserInfoId) == -1)
                                arrExcludeList.push(applicabilityData.UserInfoId);
                        });

                    }
                    if (arrData['nAllEmployeeInsiderFlag'] == 0 && $('table[name="DatatableGrid"][gridtype=' + arrGrid[8] + ']').length > 0) {
                        var datatable_3 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[8] + ']').dataTable();

                        //Add excluded elements from search employee insider
                        datatable_3.$('tbody tr').find('td:first input[exclude=150002]').parents('tr').each(function () {
                            var applicabilityData = datatable_3.fnGetData(this);
                            if (arrIncludeList[0].indexOf(applicabilityData.UserInfoId) == -1 && arrExcludeList.indexOf(applicabilityData.UserInfoId) == -1)
                                arrExcludeList.push(applicabilityData.UserInfoId);
                        });
                        var datatable_4 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[9] + ']').dataTable();
                        //Add excluded elements from associated employee insider
                        datatable_4.$('tbody tr').find('td:first input:not(:checked)').parents('tr').each(function () {
                            var applicabilityData = datatable_4.fnGetData(this);
                            if (arrIncludeList[0].indexOf(applicabilityData.UserInfoId) == -1 && arrExcludeList.indexOf(applicabilityData.UserInfoId) == -1)
                                arrExcludeList.push(applicabilityData.UserInfoId);
                        });

                    }
                    var i = 3;
                    //if all employee insider flag set to 0 then add all the selected records to the included list else don't add the included list.
                    if (arrData['nAllEmployeeInsiderFlag'] == 0) {
                        i = 1;
                    }
                    else {
                        arrIncludeList[j] = new Array();
                        j++;
                    }

                    //Iterate and fetch all the included list entries
                    for (; i < arrGrid.length; i += 2) {
                        if ($('table[name="DatatableGrid"][gridtype=' + arrGrid[i] + ']').length > 0) {
                            var datatable_1 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[i] + ']').dataTable();
                            arrIncludeList[j] = new Array();
                            datatable_1.$('tbody tr').find('td:first input:checked').parents('tr').each(function () {
                                var applicabilityData = datatable_1.fnGetData(this);
                                if (arrIncludeList[j].indexOf(applicabilityData.UserInfoId) == -1)
                                    arrIncludeList[j].push(applicabilityData.UserInfoId);
                            });
                        }
                        j++;
                    }

                    //Build the included/excluded/filter list to be sent according to the flag selection
                    if (arrData['nAllInsiderFlag'] == 0) {
                        var arrFilter = [];
                        var arrnonInsEmpFilter = [];
                        arrData['arrIncluded'] = JSON.stringify(arrIncludeList);

                        if (arrData['nAllEmployeeInsiderFlag'] == 0) {

                            if ($('table[name="DatatableGrid"][gridtype=' + filterGrid + ']').length > 0) {
                                datatable_1 = $('table[name="DatatableGrid"][gridtype=' + filterGrid + ']').dataTable();
                                datatable_1.$('tbody tr').find('td:first input:checked').parents('tr').each(function () {
                                    var applicabilityData = datatable_1.fnGetData(this);
                                    applicabilityData['usr_grd_11228'] = "";
                                    arrFilter.push(applicabilityData);
                                });
                            }
                            arrData['arrFilter'] = JSON.stringify(arrFilter);

                        }
                        else {
                            arrData['arrFilter'] = "";
                        }
                        if (arrData['nAllEmployeeFlag'] == 0) {
                            if ($('table[name="DatatableGrid"][gridtype=' + nonInsEmpfilterGrid + ']').length > 0) {
                                datatable_1 = $('table[name="DatatableGrid"][gridtype=' + nonInsEmpfilterGrid + ']').dataTable();
                                datatable_1.$('tbody tr').find('td:first input:checked').parents('tr').each(function () {
                                    var applicabilityData = datatable_1.fnGetData(this);
                                    applicabilityData['usr_grd_11228'] = "";
                                    arrnonInsEmpFilter.push(applicabilityData);
                                });
                            }
                            arrData['arrnonInsEmpFilter'] = JSON.stringify(arrnonInsEmpFilter);
                        }
                        else {
                            arrData['arrnonInsEmpFilter'] = "";
                        }
                        if (arrData['nAllEmployeeFlag'] == 0 && arrData['nAllEmployeeInsiderFlag'] == 0) {
                            arrData['arrExcluded'] = "";
                        }
                        else {
                            arrData['arrExcluded'] = JSON.stringify(arrExcludeList);
                        }
                    }
                    else {
                        arrData['arrIncluded'] = "";
                        arrData['arrExcluded'] = "";
                        arrData['arrFilter'] = "";
                        arrData['arrnonInsEmpFilter'] = "";
                    }
                }
                else {
                    arrData['nAllEmployeeFlag'] = (selection == "oth-all-emp" ? 1 : 0);
                    arrData['nAllInsiderFlag'] = selection == "oth-all-ins" ? 1 : 0;
                    arrData['nAllEmployeeInsiderFlag'] = (selection == "oth-all-emp-ins" ? 1 : 0);
                    arrData['nAllCoFlag'] = (selection == "oth-all-Co" ? 1 : 0);
                    arrData['nAllCorporateInsiderFlag'] = (selection == "oth-all-Corp-ins" ? 1 : 0);
                    arrData['nAllNonEmployeeInsiderFlag'] = selection == "oth-all-non-emp-ins" ? 1 : 0;
                    arrData['arrIncluded'] = "";
                    arrData['arrExcluded'] = "";
                    arrData['arrFilter'] = "";
                    arrData['arrnonInsEmpFilter'] = "";
                }
                arrData['sMapToId'] = $('#txtMapToId').val();
                arrData['sMapToTypeCodeId'] = $('#txtMapToTypeCodeId').val();
                arrData['acid'] = $('#acid').val();

                var form = $('#__AjaxAntiForgeryFormforApplicability');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                
                var ApplicabilityformId = 0;
                if ($('#txtMapToTypeCodeId').val() == 132001) //Policy Document
                {
                    ApplicabilityformId = 58;
                }
                else if ($('#txtMapToTypeCodeId').val() == 132002) //Trading Policy
                {
                    ApplicabilityformId = 59;
                }
                else if ($('#txtMapToTypeCodeId').val() == 132006)//Communication rule
                {
                    
                    ApplicabilityformId = 60;
                }
                else if ($('#txtMapToTypeCodeId').val() == 132009)  //Trading Window
                {
                    ApplicabilityformId = 61;
                }
                else
                {
                    ApplicabilityformId = 62;
                }

                arrData['__RequestVerificationToken'] = token;
                arrData['formId'] = ApplicabilityformId;

                //Server side call
                $.ajax({
                    url: '@Url.Action("Apply", "Applicability")',
                    method: 'POST',
                    headers: getRVToken(),
                    data: arrData,
                    datatype: 'json',
                    success: function (data) {
                        if (data['status']) {
                            showMessage(data.Message['success'], true);


                            if ($("#txtMapToTypeCodeId").val() == '@InsiderTrading.Common.ConstEnum.Code.TradingPolicy' && parseInt(data.Message['CountOverlapPolicy']) > 0) {
                                $.ajax({
                                    url: $("#ViewOverlappedUser").val(),
                                    type: 'post',
                                    headers: getRVToken(),
                                    data: { 'TradingPolicyId': '' + $('#txtMapToId').val(), 'ShowFrom': 'Applicability' },
                                    success: function (data) {
                                        $("#divOverlapModal").html("");
                                        $("#divOverlapModal").append(data);
                                        $("#btnWarning").trigger('click');
                                        $("#divOverlapModal").on("hidden.bs.modal", function () { $('#btnBack')[0].click(); });
                                    }
                                });

                            }
                            else {
                                $('#btnBack')[0].click();
                            }
                        }
                        else {
                            showMessage(data.Message['error'], false);
                            //$('#divApplicabilityMessage').html(data.Message['error']);
                            //$('#divApplicabilityMessage').addClass('alert-error').fadeIn('slow');;
                            //setTimeout(function () {
                            //    $('#divApplicabilityMessage').removeClass('alert-error').fadeOut('slow');
                            //    $('#divApplicabilityMessage').html("");
                            //}, 20000);
                        }
                    }
                });
            }
        });
        /*Employee non Insider filter Add */
        //Add button event for getting the selected employee and filters to other associated list accordingly.
        $('button[name=btnApplicabilityEmpAdd]').click(function () {
            var btnIndex = parseInt($(this).attr('value'));
            var index = eval(btnIndex) * 2;
            var flag = false;
            var datatable_1 = null;
            var datatable_2 = null;
            datatable_1 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[index] + ']').dataTable();
            datatable_2 = $('table[name="DatatableGrid"][gridtype=' + arrGrid[index + 1] + ']').dataTable();

            // For Employee insider tab add the filters according to the search criteria selected.
            if (btnIndex == 4) {
                //check if filter selected
                if (((($('#divSltEmp #3').val() != "undefined" && $('#divSltEmp #3').val() != null && $('#divSltEmp #3').val().indexOf("00") < 0 && $('#divSltEmp #3').val().length > 0) ||
                     ($('#divSltEmp #4').val() != "undefined" && $('#divSltEmp #4').val() != null && $('#divSltEmp #4').val().indexOf("00") < 0 && $('#divSltEmp #4').val().length > 0) ||
                     ($('#divSltEmp #5').val() != "undefined" && $('#divSltEmp #5').val() != null && $('#divSltEmp #5').val().indexOf("00") < 0 && $('#divSltEmp #5').val().length > 0) ||
                     ($('#divSltEmp #6').val() != "undefined" && $('#divSltEmp #6').val() != null && $('#divSltEmp #6').val().indexOf("00") < 0 && $('#divSltEmp #6').val().length > 0) ||
                     ($('#divSltEmp #7').val() != "undefined" && $('#divSltEmp #7').val() != null && $('#divSltEmp #7').val().indexOf("00") < 0 && $('#divSltEmp #7').val().length > 0) ||
                     ($('#divSltEmp #8').val() != "undefined" && $('#divSltEmp #8').val() != null && $('#divSltEmp #8').val().indexOf("00") < 0 && $('#divSltEmp #8').val().length > 0)
                    ) && datatable_1.$('tbody tr').find('td:first input:checked').length > 0) ||
                    (($('.clientSearch').find('#divSltEmp #1').val() != "" || $('.clientSearch').find('#divSltEmp #2').val() != "") && datatable_1.$('tbody tr').find('td:first input:checked').length > 0) || datatable_1.$('tbody tr').find('td:first input:checked').length > 0) {


                    //Iterate through employee insider list and add all the excluded records
                    datatable_1.$('tbody tr').find('td:first input:not(:checked)').parents('tr').each(function () {
                        var applicabilityData = datatable_1.fnGetData(this);
                        if (arrExcludeList.indexOf(applicabilityData.UserInfoId) == -1)
                            arrExcludeList.push(applicabilityData.UserInfoId);
                    });

                    var arrData = {}
                    Department = ($('#divSltEmp #3').val());
                    Grade = $('#divSltEmp #4').val();
                    Designation = $('#divSltEmp #5').val();
                    Category = $('#divSltEmp #6').val();
                    SubCategory = $('#divSltEmp #7').val();
                    Role = $('#divSltEmp #8').val();
                    var filter = [];
                    Department = Department != null ? [Department] : [""];
                    Grade = Grade != null ? [Grade] : [""];
                    Designation = Designation != null ? [Designation] : [""];
                    Category = Category != null ? [Category] : [""];
                    SubCategory = SubCategory != null ? [SubCategory] : [""];
                    Role = Role != null ? [Role] : [""];
                    // fetch the search selection
                    if (Department && Department.length > 0 && Department.indexOf('00') != -1)
                        Department.splice(Department.indexOf('00'), 1);
                    if (Grade && Grade.length > 0 && Grade.indexOf('00') != -1)
                        Grade.splice(Grade.indexOf('00'), 1);
                    if (Designation && Designation.length > 0 && Designation.indexOf('00') != -1)
                        Designation.splice(Designation.indexOf('00'), 1);
                    if (Category && Category.length > 0 && Category.indexOf('00') != -1)
                        Category.splice(Category.indexOf('00'), 1);
                    if (SubCategory && SubCategory.length > 0 && SubCategory.indexOf('00') != -1)
                        SubCategory.splice(SubCategory.indexOf('00'), 1);
                    if (Role && Role.length > 0 && Role.indexOf('00') != -1)
                        Role.splice(Role.indexOf('00'), 1);

                    Department = Department && Department.length != 0 ? Department : [""];
                    Grade = Grade && Grade.length != 0 ? Grade : [""];
                    Designation = Designation && Designation.length != 0 ? Designation : [""];
                    Category = Category && Category.length != 0 ? Category : [""];
                    SubCategory = SubCategory && SubCategory.length != 0 ? SubCategory : [""];
                    Role = Role && Role.length != 0 ? Role : [""];
                    // Insert all the possible combination to filter datatable
                    for (var i = 0; i < Department.length; i++) {
                        var deptName = Department[i] != "" ? $('#divSltEmp #3 option[value=' + Department[i] + ']').text() : "";

                        for (var j = 0; j < Grade.length; j++) {
                            var gradName = Grade[j] != "" ? $('#divSltEmp #4 option[value=' + Grade[j] + ']').text() : "";
                            for (var k = 0; k < Designation.length; k++) {
                                var desgnName = Designation[k] != "" ? $('#divSltEmp #5 option[value=' + Designation[k] + ']').text() : "";
                                for (var k = 0; k < Category.length; k++) {
                                    var CategoryName = Category[k] != "" ? $('#divSltEmp #6 option[value=' + Category[k] + ']').text() : "";
                                    for (var k = 0; k < SubCategory.length; k++) {
                                        var SubCategoryName = SubCategory[k] != "" ? $('#divSltEmp #7 option[value=' + SubCategory[k] + ']').text() : "";
                                        for (var k = 0; k < Role.length; k++) {
                                            var RoleName = Role[k] != "" ? $('#divSltEmp #8 option[value=' + Role[k] + ']').text() : "";
                                            if (Department[i] != "" || Grade[j] != "" || Designation[k] != "" || Category[j] != "" || SubCategory[k] != "" || Role[k] != "") {

                                                var datatable1 = $('table[name="DatatableGrid"][gridtype=' + nonInsEmpfilterGrid + ']').dataTable();
                                                datatable1.fnAddData({ 'ApplicabilityDtlsId': '0', 'DepartmentId': Department[i], 'GradeId': Grade[j], 'DesignationId': Designation[k], 'CategoryId': Category[k], 'SubCategoryId': SubCategory[k], 'RoleId': Role[k], 'rul_grd_15339': deptName, 'rul_grd_15340': gradName, 'rul_grd_15341': desgnName, 'rul_grd_15451': CategoryName, 'rul_grd_15452': SubCategoryName, 'rul_grd_15453': RoleName });
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    flag = true;

                } else { flag = false; }
            } else { flag = true; }

            if (flag) {
                //Iterate and insert/delete all the selected entiries from respective list
                datatable_1.$('tbody tr').find('td:first input:checked').parents('tr').each(function () {
                    var applicabilityData = datatable_1.fnGetData(this);
                    datatable_2.fnAddData(applicabilityData);
                    datatable_1.fnDeleteRow(this, false);
                });

                datatable_1.fnDraw();
                datatable_2.fnDraw();
            }
            $('*[name=btnReset]').trigger('click');
        });


        $('table[name = "DatatableGrid"][gridtype = ' + nonInsEmpfilterGrid + ']').delegate("input[type=checkbox]", "click", function () {
            var index = $('table[name = "DatatableGrid"][gridtype = ' + nonInsEmpfilterGrid + ']').find('td input[type=checkbox]').index(this);
            var row = $(this).closest('tr');
            var filterData = {};
            var sSelector = [];
            //fetch the check/uncheck record entries
            filterData["rul_grd_15339"] = row.find('td:eq(1)').text() != undefined ? row.find('td:eq(1)').text() : "";
            filterData["rul_grd_15340"] = row.find('td:eq(2)').text() != undefined ? row.find('td:eq(2)').text() : "";
            filterData["rul_grd_15341"] = row.find('td:eq(3)').text() != undefined ? row.find('td:eq(3)').text() : "";
            filterData["rul_grd_15451"] = row.find('td:eq(4)').text() != undefined ? row.find('td:eq(4)').text() : "";
            filterData["rul_grd_15452"] = row.find('td:eq(5)').text() != undefined ? row.find('td:eq(5)').text() : "";
            filterData["rul_grd_15453"] = row.find('td:eq(6)').text() != undefined ? row.find('td:eq(6)').text() : "";

            //Build the selector accordingly
            if (filterData["rul_grd_15339"] != "")
                sSelector.push("tr:has(td:nth-child(4):contains(" + filterData["rul_grd_15339"] + "))");
            if (filterData["rul_grd_15340"] != "")
                sSelector.push("tr:has(td:nth-child(5):contains(" + filterData["rul_grd_15340"] + "))");
            if (filterData["rul_grd_15341"] != "")
                sSelector.push("tr:has(td:nth-child(6):contains(" + filterData["rul_grd_15341"] + "))");
            if (filterData["rul_grd_15451"] != "")
                sSelector.push("tr:has(td:nth-child(7):contains(" + filterData["rul_grd_15451"] + "))");
            if (filterData["rul_grd_15452"] != "")
                sSelector.push("tr:has(td:nth-child(8):contains(" + filterData["rul_grd_15452"] + "))");
            if (filterData["rul_grd_15453"] != "")
                sSelector.push("tr:has(td:nth-child(9):contains(" + filterData["rul_grd_15453"] + "))");
            var arrChkList = null;
            var dataTableEmpIns = $('table[name = "DatatableGrid"][gridtype = ' + arrGrid[9] + ']');

            //Filter and apply the check/uncheck row records
            switch (sSelector.length) {
                case 6:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]).filter(dataTableEmpIns.find(sSelector[3]).filter(dataTableEmpIns.find(sSelector[4]).filter(dataTableEmpIns.find(sSelector[5])))))); break;
                case 5:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]).filter(dataTableEmpIns.find(sSelector[3]).filter(dataTableEmpIns.find(sSelector[4]))))); break;
                case 4:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]).filter(dataTableEmpIns.find(sSelector[3])))); break;
                case 3:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]))); break;
                case 2:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1])); break;
                case 1:
                    arrChkList = dataTableEmpIns.find(sSelector[0]); break;
                default:
                    arrChkList = null; break;
            }
            if (arrChkList) {
                arrChkList.find('td:eq(0) input[type=checkbox]').prop("checked", $(this).is(":checked"));
            }
        });

        /*End Employee non Insider filter Add */
        $('table[name = "DatatableGrid"][gridtype = ' + filterGrid + ']').delegate("input[type=checkbox]", "click", function () {
            var index = $('table[name = "DatatableGrid"][gridtype = ' + filterGrid + ']').find('td input[type=checkbox]').index(this);
            var row = $(this).closest('tr');
            var filterData = {};
            var sSelector = [];
            //fetch the check/uncheck record entries
            filterData["rul_grd_15339"] = row.find('td:eq(1)').text() != undefined ? row.find('td:eq(1)').text() : "";
            filterData["rul_grd_15340"] = row.find('td:eq(2)').text() != undefined ? row.find('td:eq(2)').text() : "";
            filterData["rul_grd_15341"] = row.find('td:eq(3)').text() != undefined ? row.find('td:eq(3)').text() : "";
            filterData["rul_grd_15451"] = row.find('td:eq(4)').text() != undefined ? row.find('td:eq(4)').text() : "";
            filterData["rul_grd_15452"] = row.find('td:eq(5)').text() != undefined ? row.find('td:eq(5)').text() : "";
            filterData["rul_grd_15453"] = row.find('td:eq(6)').text() != undefined ? row.find('td:eq(6)').text() : "";


            //Build the selector accordingly
            if (filterData["rul_grd_15339"] != "")
                sSelector.push("tr:has(td:nth-child(4):contains(" + filterData["rul_grd_15339"] + "))");
            if (filterData["rul_grd_15340"] != "")
                sSelector.push("tr:has(td:nth-child(5):contains(" + filterData["rul_grd_15340"] + "))");
            if (filterData["rul_grd_15341"] != "")
                sSelector.push("tr:has(td:nth-child(6):contains(" + filterData["rul_grd_15341"] + "))");
            if (filterData["rul_grd_15451"] != "")
                sSelector.push("tr:has(td:nth-child(7):contains(" + filterData["rul_grd_15451"] + "))");
            if (filterData["rul_grd_15452"] != "")
                sSelector.push("tr:has(td:nth-child(8):contains(" + filterData["rul_grd_15452"] + "))");
            if (filterData["rul_grd_15453"] != "")
                sSelector.push("tr:has(td:nth-child(9):contains(" + filterData["rul_grd_15453"] + "))");
            var arrChkList = null;
            var dataTableEmpIns = $('table[name = "DatatableGrid"][gridtype = ' + arrGrid[1] + ']');

            //Filter and apply the check/uncheck row records
            switch (sSelector.length) {
                case 6:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]).filter(dataTableEmpIns.find(sSelector[3]).filter(dataTableEmpIns.find(sSelector[4]).filter(dataTableEmpIns.find(sSelector[5])))))); break;
                case 5:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]).filter(dataTableEmpIns.find(sSelector[3]).filter(dataTableEmpIns.find(sSelector[4]))))); break;
                case 4:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]).filter(dataTableEmpIns.find(sSelector[3])))); break;
                case 3:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1]).filter(dataTableEmpIns.find(sSelector[2]))); break;
                case 2:
                    arrChkList = dataTableEmpIns.find(sSelector[0]).filter(dataTableEmpIns.find(sSelector[1])); break;
                case 1:
                    arrChkList = dataTableEmpIns.find(sSelector[0]); break;
                default:
                    arrChkList = null; break;
            }
            if (arrChkList) {
                arrChkList.find('td:eq(0) input[type=checkbox]').prop("checked", $(this).is(":checked"));
            }
        });
        $("#btnApplicabilitySearch").click(function () {

            if ((($('#divEmpIns #3').val() != "undefined" && $('#divEmpIns #3').val() != null && $('#divEmpIns #3').val().indexOf("00") < 0 && $('#divEmpIns #3').val().length > 0) ||
                     ($('#divEmpIns #4').val() != "undefined" && $('#divEmpIns #4').val() != null && $('#divEmpIns #4').val().indexOf("00") < 0 && $('#divEmpIns #4').val().length > 0) ||
                     ($('#divEmpIns #5').val() != "undefined" && $('#divEmpIns #5').val() != null && $('#divEmpIns #5').val().indexOf("00") < 0 && $('#divEmpIns #5 ').val().length > 0) ||
                     ($('#divEmpIns #6').val() != "undefined" && $('#divEmpIns #6').val() != null && $('#divEmpIns #6').val().indexOf("00") < 0 && $('#divEmpIns #6').val().length > 0) ||
                     ($('#divEmpIns #7').val() != "undefined" && $('#divEmpIns #7').val() != null && $('#divEmpIns #7').val().indexOf("00") < 0 && $('#divEmpIns #7 ').val().length > 0) ||
                     ($('#divEmpIns #8').val() != "undefined" && $('#divEmpIns #8').val() != null && $('#divEmpIns #8').val().indexOf("00") < 0 && $('#divEmpIns #8 ').val().length > 0)) ||
                   ($('.clientSearch').find('#divEmpIns #1').val() != "" || $('.clientSearch').find('#divEmpIns #2').val() != "")) {

                $('.search').find('tbody tr').find('td:first input[type=checkbox][gridtype=' + filterGrid + ']').attr('checked', true);
            }
        });
        $("#btnApplicabilitySearchEmp").click(function () {

            if ((($('#divSltEmp #3').val() != "undefined" && $('#divSltEmp #3').val() != null && $('#divSltEmp #3').val().indexOf("00") < 0 && $('#divSltEmp #3').val().length > 0) ||
                     ($('#divSltEmp #4').val() != "undefined" && $('#divSltEmp #4').val() != null && $('#divSltEmp #4').val().indexOf("00") < 0 && $('#divSltEmp #4').val().length > 0) ||
                     ($('#divSltEmp #5').val() != "undefined" && $('#divSltEmp #5').val() != null && $('#divSltEmp #5').val().indexOf("00") < 0 && $('#divSltEmp #5').val().length > 0) ||
                     ($('#divSltEmp #6').val() != "undefined" && $('#divSltEmp #6').val() != null && $('#divSltEmp #6').val().indexOf("00") < 0 && $('#divSltEmp #6').val().length > 0) ||
                     ($('#divSltEmp #7').val() != "undefined" && $('#divSltEmp #7').val() != null && $('#divSltEmp #7').val().indexOf("00") < 0 && $('#divSltEmp #7 ').val().length > 0) ||
                     ($('#divSltEmp #8').val() != "undefined" && $('#divSltEmp #8').val() != null && $('#divSltEmp #8').val().indexOf("00") < 0 && $('#divSltEmp #8 ').val().length > 0)) ||
                    ($('.clientSearch').find('#divSltEmp #1').val() != "" || $('.clientSearch').find('#divSltEmp #2').val() != "")) {

                $('.search ').find('tbody tr').find('td:first input[type=checkbox][gridtype = ' + nonInsEmpfilterGrid + ']').attr('checked', true);
            }
        });
        setTimeout(function () {
            $('table[name="DatatableGrid"][gridtype=' + filterGrid + ']').parent().css({ 'overflow': 'hidden' });
            $('table[id^=DataTables_Table_]:not(table[name="DatatableGrid"][gridtype=' + filterGrid + '])').parent().css({ 'overflow': 'scroll', 'height': '250px' });
            $('table[name="DatatableGrid"][gridtype=' + nonInsEmpfilterGrid + ']').parent().css({ 'overflow': 'hidden' });
            $('table[id^=DataTables_Table_]:not(table[name="DatatableGrid"][gridtype=' + nonInsEmpfilterGrid + '])').parent().css({ 'overflow': 'scroll', 'height': '250px' });
        }, 500);
        setTimeout(function () { $('#btnApplicabilityEmpInsiderSearch').click(); }, 1000);

        //Check uncheck select All checkbox
        $('table[name = "DatatableGrid"][gridtype = 114023]').delegate("input[type=checkbox]", "click", function () {
            datatable_1 = $('table[name="DatatableGrid"][gridtype = 114023]').dataTable();
            var rowCount = (($('table[name = "DatatableGrid"][gridtype = 114023]')[0].rows).length) - 1;
            if (!this.checked) {
                $(this).prop('checked', false);
                $('#select-all')[0].checked = false;
            }
            else {
                var all = true;
                var checkedCount = 0;
                $('table[name = "DatatableGrid"][gridtype = 114023]').delegate("input[type=checkbox]", "click", function () {
                    if (!this.checked) { all = false; }
                })
                if (!all) { $('#select-all').prop('checked', false); }
                $('table[name = "DatatableGrid"][gridtype = 114023]').find("input[type=checkbox]").each(function () {
                    if (this.checked) { checkedCount++; }
                });
                if (rowCount == checkedCount && rowCount != 0 && checkedCount != 0) {
                    $('#select-all').prop('checked', true);
                }
            }
        });
    });


</script>
<section class="content-header">
        @{
        var sURL = "";
        var sDisplayText = "";
        if (@ViewBag.ApplicabilityType == InsiderTrading.Common.ConstEnum.Code.TradingPolicy)
        {
            sURL = @Url.Action("Create", "TradingPolicy") + "?acid=" + ViewBag.UserAction + "&TradingPolicyId=" + @ViewBag.ApplicabilityID + "&CalledFrom=" + @ViewBag.CalledFrom + "&ParentTradingPolicy=" + @ViewBag.ParentTradingPolicy;
            sDisplayText = "Trading Policy";
        }
        else if (@ViewBag.ApplicabilityType == InsiderTrading.Common.ConstEnum.Code.PolicyDocument)
        {
            if (@ViewBag.CalledFrom == "e")
            {
                sURL = @Url.Action("Edit", "PolicyDocuments") + "?acid=" + @InsiderTrading.Common.ConstEnum.UserActions.POLICY_DOCUMENT_EDIT + "&pdid=" + @ViewBag.ApplicabilityID + "&view=" + @ViewBag.CalledFrom;
            }
            else
            {
                sURL = @Url.Action("Edit", "PolicyDocuments") + "?acid=" + @InsiderTrading.Common.ConstEnum.UserActions.POLICY_DOCUMENT_VIEW + "&pdid=" + @ViewBag.ApplicabilityID + "&view=" + @ViewBag.CalledFrom;
            }
            sDisplayText = "Policy Document";
        }
        else if (@ViewBag.ApplicabilityType == InsiderTrading.Common.ConstEnum.Code.TradingWindowOther)
        {
            sURL = @Url.Action("Edit", "TradingWindowsOther") + "?acid=" + InsiderTrading.Common.ConstEnum.UserActions.TRADING_WINDOW_OTHER_EDIT + "&CalledFrom=Edit&TradingWindowEventId=" + @ViewBag.ApplicabilityID;
            sDisplayText = "Trading Window Other";
        }
        else if (@ViewBag.ApplicabilityType == InsiderTrading.Common.ConstEnum.Code.CommunicationRule)
        {
            sURL = @Url.Action("Create", "CommunicationRuleMaster") + "?acid=" + InsiderTrading.Common.ConstEnum.UserActions.COMMUNICATION_RULES_EDIT_RIGHT + "&RuleId=" + @ViewBag.ApplicabilityID;
            sDisplayText = "Communication Rule";
        }
        else if (@ViewBag.ApplicabilityType == InsiderTrading.Common.ConstEnum.Code.RestrictedList)
        {
            if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "E")
            {
                sURL = @Url.Action("Create", "RestrictedList") + "?acid=" + InsiderTrading.Common.ConstEnum.UserActions.RESTRICTED_EDIT + "&nMasterID=" + @ViewBag.ApplicabilityID + "&CalledFrom=Edit";
            }
            else if(@ViewBag.Calledfrom == "History" || @ViewBag.Calledfrom == "H")
            {
                sURL = @Url.Action("Create", "RestrictedList") + "?acid=" + InsiderTrading.Common.ConstEnum.UserActions.RESTRICTED_HISTORY + "&nMasterID=" + @ViewBag.ApplicabilityID + "&CalledFrom=History&nApplicabilityId=" + @ViewBag.ApplicabilityIDFromHistory;
            }
            else
            {
                sURL = @Url.Action("Create", "RestrictedList") + "?acid=" + InsiderTrading.Common.ConstEnum.UserActions.RESTRICTED_VIEW + "&nMasterID=" + @ViewBag.ApplicabilityID + "&CalledFrom=View";
            }

            sDisplayText = "Restricted List";
        }
    }

    <h1>Applicability for @sDisplayText</h1>
</section>
<section class="content">

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="panel panel-default">
                <div class="panel-body">

                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <form role="form">
                                <div class="form-group">
                                    <input type="hidden" value="@ViewBag.ApplicabilityID" id="txtMapToId" />
                                    <input type="hidden" value="@ViewBag.ApplicabilityType" id="txtMapToTypeCodeId" />
                                    <select class="form-control" id="multi-selected-others">
                                        <option value="0">Select</option>
                                        @if (ViewBag.VisibleElement[0])
                                        {
                                            <option value="oth-sel-ins">Select User</option>
                                            @*if (ViewBag.ApplicabilityType != InsiderTrading.Common.ConstEnum.Code.CommunicationRule) {
                                                <option value="oth-sel-ins">Select Insider</option>
                                                }
                                                else
                                                {
                                                    <option value="oth-sel-ins">Select User</option>
                                                }*@
                                        }

                                        @if (ViewBag.VisibleElement[1])
                                        {
                                            <option value="oth-all-emp">All Employees</option>
                                        }
                                        @if (ViewBag.VisibleElement[2])
                                        {
                                            <option value="oth-all-ins">All Insiders</option>
                                        }
                                        @if (ViewBag.VisibleElement[3] && !ViewBag.VisibleElement[6])
                                        {
                                            <option value="oth-all-emp-ins">All Employees Insiders</option>
                                        }
                                        @if (ViewBag.VisibleElement[4] && !ViewBag.VisibleElement[6])
                                        {
                                            <option value="oth-all-Corp-ins">All Corporate Insiders</option>
                                        }
                                        @if (ViewBag.VisibleElement[5] && !ViewBag.VisibleElement[6])
                                        {
                                            <option value="oth-all-non-emp-ins">All Non Employees Insiders</option>
                                        }
                                        @if (ViewBag.ApplicabilityType == InsiderTrading.Common.ConstEnum.Code.CommunicationRule && ViewBag.VisibleElement[1] && ViewBag.VisibleElement[6])
                                        {
                                            <option value="oth-all-Co">All CO</option>
                                        }
                                    </select>
                                </div>
                            </form>
                        </div>
                    </div>


                    <div class="sel-container oth-sel-ins">
                        <div class="custom-tabs">
                            <!-- Nav tabs -->
                            <ul class="nav nav-tabs" role="tablist">
                                @if (ViewBag.VisibleElement[3])
                                {
                                    <li role="presentation" class="active"><a href="#employee-insider" aria-controls="employee-insider" role="tab" data-toggle="tab">Employee Insider</a></li>
                                }
                                @if (ViewBag.VisibleElement[4])
                                {
                                    <li role="presentation"><a href="#corporate-insider" aria-controls="corporate-insider" role="tab" data-toggle="tab">Corporate Insider</a></li>
                                }
                                @if (ViewBag.VisibleElement[5])
                                {
                                    <li role="presentation"><a href="#non-employee-inisder" aria-controls="non-employee-inisder" role="tab" data-toggle="tab">Non-Employee Insider</a></li>
                                }
                                @if (ViewBag.VisibleElement[6])
                                {
                                    <li role="presentation"><a href="#co-insider" aria-controls="co-insider" role="tab" data-toggle="tab">Co User</a></li>
                                }
                                @if (ViewBag.VisibleElement[7])
                                {
                                    <li role="presentation"><a href="#all-emp" aria-controls="all-emp" role="tab" data-toggle="tab">Employee</a></li>
                                }
                            </ul>

                            <div class="tab-content">
                                @if (ViewBag.VisibleElement[3])
                                {
                                    <div role="tabpanel" class="tab-pane active" id="employee-insider">
                                        <input type="radio" name="rdoEmpIns" value="1" /> All employee insider &nbsp;&nbsp;&nbsp;&nbsp; <input type="radio" name="rdoEmpIns" value="0" checked="checked" /> Select employee insider
                                        <div id="divEmpIns">
                                            @{
                                    if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "e")
                                    {
                                                <div class="card-body clientSearch" gridtype="@ViewBag.Applicability_Search_EmployeeInsider">
                                                    <div class="row">
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Department Wise</label>
                                                                    @Html.DropDownListFor(m => m.DepartmentId,
new SelectList(ViewBag.DepartmentDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "3", size = 5 })
                                                                    @* @Html.ListBoxFor(m => m.DepartmentId, new SelectList(ViewBag.DepartmentDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "3" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Grade Wise</label>
                                                                    @Html.DropDownListFor(m => m.GradeId,
new SelectList(ViewBag.GradeDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "4", size = 5 })
                                                                    @* @Html.ListBoxFor(m => m.GradeId, new SelectList(ViewBag.GradeDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "4" })*@
                                                                </div>
                                                            </form>
                                                        </div>


                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Designation</label>
                                                                    @Html.DropDownListFor(m => m.DesignationId,
new SelectList(ViewBag.DesignationDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "5", size = 5 })
                                                                    @*@Html.ListBoxFor(m => m.DesignationId, new SelectList(ViewBag.DesignationDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "5" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Category</label>
                                                                    @Html.DropDownListFor(m => m.Category,
new SelectList(ViewBag.CategoryDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "6", size = 5 })
                                                                    @*@Html.ListBoxFor(m => m.Category, new SelectList(ViewBag.CategoryDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "6" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Sub Category</label>
                                                                    @Html.DropDownListFor(m => m.SubCategory,
new SelectList(ViewBag.SubCategoryDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "7", size = 5 })
                                                                    @*@Html.ListBoxFor(m => m.SubCategory, new SelectList(ViewBag.SubCategoryDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "7" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Role</label>
                                                                    <select id="8" class="form-control" size="5" gridtype=@ViewBag.Applicability_Search_EmployeeInsider>
                                                                        @{foreach (var objRoleList in ViewBag.EmployeeTypeRoleDropDown)
                                                                {

                                                                            <option value="@objRoleList.Key">@objRoleList.Value</option>

                                                                }
                                                                        }
                                                                    </select>
                                                                    @*@Html.ListBoxFor(m => m.RoleID, new SelectList(ViewBag.EmployeeTypeRoleDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "10" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <div class="row">OR</div>
                                                    <div class="row">
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Employee ID</label>
                                                                    @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "2" })
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Employee Name</label>
                                                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "1" })
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <button type="button" class="btn btn-success" id="btnApplicabilityEmpInsiderSearch"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                                                <button type="reset" class="btn btn-success" name="btnReset" gridtype="@ViewBag.Applicability_Search_EmployeeInsider"><i class="fa fa-undo"></i> @InsiderTrading.Common.Common.getResource("com_btn_14006")</button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="divEmpInsiderGrd" class="search" gridtype="@ViewBag.Applicability_Search_EmployeeInsider">
                                                    <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Search_EmployeeInsider" />
                                                    <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Search_EmployeeInsider" />
                                                    <input type="button" class="hide btn btn-success extra-handler" id="btnApplicabilitySearch" />
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Search_EmployeeInsider, btnSearch = "btnApplicabilityEmpInsiderSearch", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" }); }
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <form role="form">
                                                            <button type="button" name="btnApplicabilityAdd" class="btn btn-success" value="0"><i class="fa fa-plus-square"></i> Add</button>
                                                        </form>
                                                    </div>
                                                </div>
                                                <br />
                                    }
                                            }
                                            <div class="search" gridtype="@ViewBag.Applicability_Filter_EmployeeInsider">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Filter_EmployeeInsider" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Filter_EmployeeInsider" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityIDFromHistory" id="3" gridtype="@ViewBag.Applicability_Search_EmployeeInsider" />
                                                <div class="col-lg-12">
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Filter_EmployeeInsider, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrt" });}
                                                </div>
                                            </div>
                                            <div class="search" gridtype="@ViewBag.Applicability_Association_EmployeeInsider">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Association_EmployeeInsider" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Association_EmployeeInsider" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityIDFromHistory" id="6" gridtype="@ViewBag.Applicability_Search_EmployeeInsider" />
                                                @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Association_EmployeeInsider, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });}
                                            </div>


                                        </div>
                                    </div>
                                }
                                @if (ViewBag.VisibleElement[4])
                                {
                                    <div role="tabpanel" class="tab-pane" id="corporate-insider">
                                        <input type="radio" name="rdoAllCorpIns" value="1" /> All Corporate Insider &nbsp;&nbsp;&nbsp;&nbsp; <input type="radio" name="rdoAllCorpIns" value="0" checked="checked" /> Select Corporate Insider

                                        <div id="divSltCorpIns">
                                            @{if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "e")
                                            {
                                                <div id="divCorpInsGrd" class="search" gridtype="@ViewBag.Applicability_Search_Corporate">
                                                    <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Search_Corporate" />
                                                    <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Search_Corporate" />
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Search_Corporate, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });
                                                    }
                                                </div>


                                                <div class="row">

                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <form role="form">
                                                            <button type="button" name="btnApplicabilityAdd" class="btn btn-success" value="1"><i class="fa fa-plus-square"></i> Add</button>
                                                        </form>
                                                    </div>
                                                </div>
                                                <br />
                                            }
                                            }
                                            <div class="search" gridtype="@ViewBag.Applicability_Association_Corporate">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Association_Corporate" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Association_Corporate" />
                                                @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Association_Corporate, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });}
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (ViewBag.VisibleElement[5])
                                {
                                    <div role="tabpanel" class="tab-pane" id="non-employee-inisder">
                                        <input type="radio" name="rdoAllNonEmpIns" value="1" /> All Non-Employee Insider  &nbsp;&nbsp;&nbsp;&nbsp; <input type="radio" name="rdoAllNonEmpIns" value="0" checked="checked" /> Select Non-Employee Insider

                                        <div id="divSltNonEmpIns">
                                            @{
                                    if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "e")
                                    {
                                                <div id="divNonEmpInsGrd" class="search" gridtype="@ViewBag.Applicability_Search_Non_Employee">
                                                    <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Search_Non_Employee" />
                                                    <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Search_Non_Employee" />
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Search_Non_Employee, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });
                                                    }
                                                </div>


                                                <div class="row">

                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <form role="form">
                                                            <button type="button" name="btnApplicabilityAdd" class="btn btn-success" value="2"><i class="fa fa-plus-square"></i> Add</button>
                                                        </form>
                                                    </div>
                                                </div>
                                                <br />
                                    }
                                            }
                                            <div class="search" gridtype="@ViewBag.Applicability_Association_Non_Employee">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Association_Non_Employee" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Association_Non_Employee" />
                                                @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Association_Non_Employee, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });}
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (ViewBag.VisibleElement[6])
                                {
                                    <div role="tabpanel" class="tab-pane" id="co-insider">
                                        <input type="radio" name="rdoAllCo" value="1" /> All CO  &nbsp;&nbsp;&nbsp;&nbsp; <input type="radio" name="rdoAllCo" value="0" checked="checked" /> Select CO

                                        <div id="divSltCo">
                                            @{if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "e")
                                            {
                                                <div id="divCoGrd" class="search" gridtype="@ViewBag.Applicability_Search_COInsider">
                                                    <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Search_COInsider" />
                                                    <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Search_COInsider" />
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Search_COInsider, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });
                                                    }
                                                </div>


                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <form role="form">
                                                            <button type="button" name="btnApplicabilityAdd" class="btn btn-success" value="3"><i class="fa fa-plus-square"></i> Add</button>
                                                        </form>
                                                    </div>
                                                </div>
                                                <br />
                                            }
                                            }
                                            <div class="search" gridtype="@ViewBag.Applicability_Association_COInsider">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Association_COInsider" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Association_COInsider" />
                                                @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Association_COInsider, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });}
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (ViewBag.VisibleElement[7])
                                {
                                    <div role="tabpanel" class="tab-pane" id="all-emp">
                                        <input type="radio" name="rdoAllEmp" value="1" /> All employee  &nbsp;&nbsp;&nbsp;&nbsp; <input type="radio" name="rdoAllEmp" value="0" checked="checked" /> Select employee
                                        <div id="divSltEmp">
                                            @{if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "e")
                                            {
                                                <div class="panel-body clientSearch" gridtype="@ViewBag.Applicability_Search_Employee">
                                                    <div class="row">
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Department Wise</label>
                                                                    @Html.DropDownListFor(m => m.DepartmentId,
new SelectList(ViewBag.DepartmentDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "3", size = 5 })
                                                                    @* @Html.ListBoxFor(m => m.DepartmentId, new SelectList(ViewBag.DepartmentDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "3" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Grade Wise</label>
                                                                    @Html.DropDownListFor(m => m.GradeId,
new SelectList(ViewBag.GradeDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "4", size = 5 })
                                                                    @* @Html.ListBoxFor(m => m.GradeId, new SelectList(ViewBag.GradeDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "4" })*@
                                                                </div>
                                                            </form>
                                                        </div>


                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Designation</label>
                                                                    @Html.DropDownListFor(m => m.DesignationId,
new SelectList(ViewBag.DesignationDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "5", size = 5 })
                                                                    @*  @Html.ListBoxFor(m => m.DesignationId, new SelectList(ViewBag.DesignationDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "5" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Category</label>
                                                                    @Html.DropDownListFor(m => m.Category,
new SelectList(ViewBag.CategoryDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "6", size = 5 })
                                                                    @* @Html.ListBoxFor(m => m.Category, new SelectList(ViewBag.CategoryDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "6" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Sub Category</label>
                                                                    @Html.DropDownListFor(m => m.SubCategory,
new SelectList(ViewBag.SubCategoryDropDown, "Key", "Value", ""),
new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "7", size = 5 })
                                                                    @* @Html.ListBoxFor(m => m.SubCategory, new SelectList(ViewBag.SubCategoryDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "7" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Role</label>
                                                                    <select id="8" class="form-control" size="5" gridtype=@ViewBag.Applicability_Search_Employee>
                                                                        @{foreach (var objRoleList in ViewBag.EmployeeTypeRoleDropDown)
                                                                        {

                                                                            <option value="@objRoleList.Key">@objRoleList.Value</option>

                                                                        }
                                                                        }
                                                                    </select>
                                                                    @*@Html.ListBoxFor(m => m.RoleID, new SelectList(ViewBag.EmployeeTypeRoleDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_EmployeeInsider, id = "10" })*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <div class="row">OR</div>
                                                    <div class="row">
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Employee ID</label>
                                                                    @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "2" })
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <div class="form-group">
                                                                    <label>Employee Name</label>
                                                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", gridtype = @ViewBag.Applicability_Search_Employee, id = "1" })
                                                                </div>
                                                            </form>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                            <form role="form">
                                                                <button type="button" class="btn btn-success" id="btnApplicabilityEmpSearch"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                                                <button type="reset" class="btn btn-success" name="btnReset" gridtype="@ViewBag.Applicability_Search_Employee"><i class="fa fa-undo"></i> @InsiderTrading.Common.Common.getResource("com_btn_14006")</button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="divEmpNonInsiderGrd" class="search" gridtype="@ViewBag.Applicability_Search_Employee">
                                                    <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Search_Employee" />
                                                    <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Search_Employee" />
                                                    <input type="button" class="hide btn btn-success extra-handler" id="btnApplicabilitySearchEmp" />
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Search_Employee, btnSearch = "btnApplicabilityEmpSearch", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" }); }
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                        <form role="form">
                                                            <button type="button" name="btnApplicabilityEmpAdd" class="btn btn-success" value="4"><i class="fa fa-plus-square"></i> Add</button>
                                                        </form>
                                                    </div>
                                                </div>
                                                <br />
                                            }
                                            }
                                            <div class="search" gridtype="@ViewBag.Applicability_Filter_Employee">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Filter_Employee" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Filter_Employee" />
                                                <div class="col-lg-12">
                                                    @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Filter_Employee, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrt" });}
                                                </div>
                                            </div>
                                            <div class="search" gridtype="@ViewBag.Applicability_Association_Employee">
                                                <input type="hidden" value="@ViewBag.ApplicabilityType" id="1" gridtype="@ViewBag.Applicability_Association_Employee" />
                                                <input type="hidden" value="@ViewBag.ApplicabilityID" id="2" gridtype="@ViewBag.Applicability_Association_Employee" />
                                                @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.Applicability_Association_Employee, btnSearch = "", sSortCol = "1", acid = ViewBag.UserAction, bIsPagination = false, bIsServerSide = false, sDom = "lrti" });}
                                            </div>


                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div id="divApplicabilityMessage" class="alert" style="display: none;">
                    </div>
                    <div class="">

                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div role="form">
                                @{
                                    if (@ViewBag.CalledFrom == "Edit" || @ViewBag.CalledFrom == "e")
                                    {
                                    <button type="button" class="btn btn-success oth-all-ins oth-all-emp oth-sel-ins" id="btnApplicabilityApply">Apply</button>
                                    }
                                }


                                @{
                                    if (@sURL != "")
                                    {
                                    <a href="@sURL" id="btnBack" class="btn btn-success">Back</a>
                                    }
                                }
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>

        @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Search_EmployeeInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'exclude':<IncludeExcludeCodeId>}" })
        @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Search_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'exclude':<IncludeExcludeCodeId>}" })
        @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Search_Corporate + "_usr_grd_11228", param = "{'type':'checkbox'}" })
        @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Search_Non_Employee + "_usr_grd_11228", param = "{'type':'checkbox'}" })
        @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Search_COInsider + "_usr_grd_11228", param = "{'type':'checkbox'}" })
        @if (@ViewBag.CalledFrom != "Edit" && @ViewBag.CalledFrom != "e")
        {
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_Non_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'disabled':'disabled'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Filter_EmployeeInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'name':'ApplicabilityFilter', 'disabled':'disabled'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Filter_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'name':'NonInsEmpApplicabilityFilter', 'disabled':'disabled'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_EmployeeInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'disabled':'disabled'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'disabled':'disabled'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_Corporate + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'disabled':'disabled'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_COInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'disabled':'disabled'}" })
        }
        else
        {
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_Corporate + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_EmployeeInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_Non_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Filter_EmployeeInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'name':'ApplicabilityFilter'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Filter_Employee + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked', 'name':'NonInsEmpApplicabilityFilter'}" })
            @Html.Hidden("Checkbox", "checkbox", new { @class = "gridtypecontrol", ctrtype = "checkbox", gridcolumntype = @ViewBag.Applicability_Association_COInsider + "_usr_grd_11228", param = "{'type':'checkbox', 'checked':'checked'}" })
        }
        @Html.Hidden("ApplicabilityApply", @Url.Action("Apply", "Applicability"))
        @Html.Hidden("ViewOverlappedUser", Url.Action("ViewOverlappedUser", "TradingPolicy"))

        @Html.Hidden("acid", (int)ViewBag.UserAction)


        <a class="btn btn-primary pull-right hide" data-toggle="modal" data-target="#OverlapModal" id="btnWarning"><i class="fa fa-pencil"></i> Warning</a>
        <div id="divOverlapModal">

        </div>
</section>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryFormforApplicability" }))
{
    @Html.AntiForgeryToken()
}


