@model InsiderTrading.Models.EmployeeRelativeModel
@{
    ViewBag.Title = InsiderTrading.Common.Common.getResource("usr_ttl_11248");
    var counter = 1;
    var TotalMobileNo = (@ViewBag.RelativeContact != null) ? @ViewBag.RelativeContact.Count : 1;
}

@Html.Partial("~/Views/Common/PersonalDetailsBreadcrumbs.cshtml")
<section class="content">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div id="EmpInfo">
                <div class="panel-group" id="accordion">
                    <div class="card panel-accordion">
                        <div class="card-header active">
                            <h4 class="card-title">
                                @InsiderTrading.Common.Common.getResource("usr_ttl_11248")
                                @*<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                                        <span class="fa fa-minus pull-right"></span>
                                        @InsiderTrading.Common.Common.getResource("usr_ttl_11248")
                                    </a>*@
                            </h4>
                        </div>
                        @*<div id="collapseOne" class="panel-collapse collapse in">*@

                        @using (Html.BeginForm("CreateRelative", "Employee", new { ReturnUrl = ViewBag.ReturnUrl, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"], formId = InsiderTrading.Common.ConstEnum.Code.frmCreateRelative }, FormMethod.Post, new { @id = "EditRelativeForm", role = "form", autocomplete = "off" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
                            <div class="card-body">
                                <div class="row" style="display:none">
                                    <div class="col-xs-3 form-group">
                                        <div class="col-xs-6">
                                            @Html.LabelFor(m => m.userInfoModel.EmployeeId)
                                        </div>
                                        <div class="col-xs-6">
                                            @Html.DisplayFor(m => m.userInfoModel.EmployeeId)
                                        </div>
                                    </div>
                                    <div class="col-xs-3 form-group">
                                        <div class="col-xs-6">
                                            @Html.LabelFor(m => m.userInfoModel.LoginID)
                                        </div>
                                        <div class="col-xs-6">
                                            @Html.DisplayFor(m => m.userInfoModel.ParentFirstName) @Html.DisplayFor(m => m.userInfoModel.ParentLastName)
                                        </div>
                                    </div>
                                    <div class="col-xs-3 form-group">
                                        <div class="col-xs-6">
                                            @Html.LabelFor(m => m.userInfoModel.CompanyId)
                                        </div>
                                        <div class="col-xs-6">
                                            @Html.DisplayFor(m => m.userInfoModel.CompanyName)
                                        </div>
                                    </div>
                                    <div class="col-xs-3 form-group">
                                        <div class="col-xs-6">
                                            @Html.LabelFor(m => m.userInfoModel.Category)
                                        </div>
                                        <div class="col-xs-6">
                                            @Html.DisplayFor(m => m.userInfoModel.CategoryName)
                                        </div>
                                    </div>
                                </div>
                                @Html.HiddenFor(m => m.userInfoModel.UserInfoId)
                                @Html.HiddenFor(m => m.userInfoModel.ParentId)
                                @if (Model.userInfoModel.UserInfoId != 0 && Model.userInfoModel.UserInfoId != null)
                                {
                                    @Html.Hidden("acid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_EDIT)
                                }
                                else
                                {
                                    @Html.Hidden("acid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_CREATE)
                                }
                                <div id="RelCreateGrid">
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.FirstName)
                                                            @Html.TextBoxFor(m => m.userInfoModel.FirstName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.FirstName).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.FirstName).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.FirstName)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.MiddleName)
                                                            @Html.TextBoxFor(m => m.userInfoModel.MiddleName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.MiddleName).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.MiddleName).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.MiddleName)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.LastName)
                                                            @Html.TextBoxFor(m => m.userInfoModel.LastName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.LastName).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.LastName).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.LastName)
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.PAN)
                                                            @Html.TextBoxFor(m => m.userInfoModel.PAN, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.PAN).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.PAN).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.PAN)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.IdentificationTypeId)
                                                            @Html.DropDownListFor(m => m.userInfoModel.IdentificationTypeId, new SelectList(ViewBag.IdentificationTypeIdTypeRelativeDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.IdentificationTypeId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.IdentificationTypeId).ToString(), new { @class = "form-control" }))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.IdentificationTypeId)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.UIDAI_IdentificationNo)
                                                            @Html.TextBoxFor(m => m.userInfoModel.UIDAI_IdentificationNo, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.UIDAI_IdentificationNo).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.UIDAI_IdentificationNo).ToString(), new { @class = "form-control" }))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.UIDAI_IdentificationNo)
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-left: 15px">
                                            <div role="form">
                                                <div class="form-group">
                                                    @Html.CheckBox("chkSameEmployee")
                                                    @Html.Label(InsiderTrading.Common.Common.getResource("usr_lbl_11249"))
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.AddressLine1)
                                                            @Html.TextAreaFor(m => m.userInfoModel.AddressLine1, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.AddressLine1).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.AddressLine1).ToString(), new { @class = "form-control", row = "4", style = "height:34px" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.AddressLine1)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.PinCode)
                                                            @Html.TextBoxFor(m => m.userInfoModel.PinCode, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.PinCode).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.PinCode).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.PinCode)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.CountryId)
                                                            @Html.DropDownListFor(m => m.userInfoModel.CountryId, new SelectList(ViewBag.CountryDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.CountryId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.CountryId).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.CountryId)
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.EmailId)
                                                            @Html.TextBoxFor(m => m.userInfoModel.EmailId, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.EmailId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.EmailId).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.EmailId)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.MobileNumber)
                                                            @Html.TextBoxFor(m => m.userInfoModel.MobileNumber, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.MobileNumber).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.MobileNumber).ToString(), new { @class = "form-control RelativeMobNo", id = "txt_RelativeMobNo" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.MobileNumber)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.RelationTypeCodeId)
                                                            @*@Html.DropDownListFor(m => m.userInfoModel.RelationTypeCodeId, new SelectList(ViewBag.RelationDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.RelationTypeCodeId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.RelationTypeCodeId).ToString(), new { @class = "form-control" }, InsiderTrading.Common.ConstEnum.IsRelative.Relative))*@
                                                            @Html.DropDownListFor(m => m.userInfoModel.RelationTypeCodeId, new SelectList(ViewBag.RelationDropDown, "Key", "Value", ""), new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.RelationTypeCodeId)
                                                        </div>
                                                    </div>
                                                </div>

                                                @*@if (Model.userInfoModel.UserInfoId == 0)
                                                    {
                                                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                            <div role="form">
                                                                <div class="form-group">
                                                                    @Html.CheckBox("chkDmatAccAvailable", new { @Name = "IsChecked", @value = "true" })
                                                                    @Html.Label(InsiderTrading.Common.Common.getResource("usr_lbl_50734"))
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }*@
                                            </div>
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                    <div role="form">
                                                        <div class="form-group">
                                                            @Html.LabelFor(m => m.userInfoModel.RelativeStatus)
                                                            @Html.DropDownListFor(m => m.userInfoModel.RelativeStatus, new SelectList(ViewBag.UserStatusDropDown, "Key", "Value", ""), new { @class = "form-control", id = "SelectedStatusId" })
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.RelativeStatus)
                                                        </div>
                                                    </div>
                                                </div>
                                                @if (Model.userInfoModel.UserInfoId == 0)
                                                {
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <div role="form">
                                                            <div class="form-group" style="padding-top:30px;">
                                                                @Html.LabelFor(m => m.userInfoModel.DoYouHaveDMATEAccount) &nbsp;
                                                                @Html.RadioButtonFor(m => m.userInfoModel.DoYouHaveDMATEAccount, 1, new { id = "RBYes" }) @InsiderTrading.Common.Common.getResource("com_lbl_14021") &nbsp;
                                                                @Html.RadioButtonFor(m => m.userInfoModel.DoYouHaveDMATEAccount, 0, new { id = "RBNo" }) @InsiderTrading.Common.Common.getResource("com_lbl_14022")
                                                                @Html.ValidationMessageFor(m => m.userInfoModel.DoYouHaveDMATEAccount)
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12" style="display:none">
                                                        <div role="form">
                                                            <div class="form-group">
                                                                @Html.LabelFor(m => m.userInfoModel.DoYouHaveDMATEAccount)
                                                                @Html.RadioButtonFor(m => m.userInfoModel.DoYouHaveDMATEAccount, 1, new { id = "RBYes" }) @InsiderTrading.Common.Common.getResource("com_lbl_14021") &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                @Html.RadioButtonFor(m => m.userInfoModel.DoYouHaveDMATEAccount, 0, new { id = "RBNo" }) @InsiderTrading.Common.Common.getResource("com_lbl_14022")
                                                                @Html.ValidationMessageFor(m => m.userInfoModel.DoYouHaveDMATEAccount)
                                                            </div>
                                                        </div>
                                                    </div>

                                                }
                                            </div>
                                        </div>
                                        <p style="color: red; display: none" id="err_msg">@InsiderTrading.Common.Common.getResource("usr_msg_50595")</p>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" align="left" style="margin-left: 15px">
                                            <div role="form">
                                                @if (Model.userInfoModel.UserInfoId == 0)
                                                {
                                                    <button type="submit" class="btn btn-success" id="emp_rel_detail_save" disabled="disabled"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("com_btn_14017")</button>
                                                }
                                                else
                                                {
                                                    <button type="submit" class="btn btn-success" id="emp_rel_detail_save"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("com_btn_14017")</button>
                                                }
                                                @*<button type="submit" class="btn btn-success" id="SaveNAddDmat"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("com_btn_50735")</button>*@
                                                <a class="btn btn-success btnAddDMATDetails" id="SaveNAddDmat"><i class="icon"></i> @InsiderTrading.Common.Common.getResource("com_btn_50735")</a>
                                                @if (Model.userInfoModel.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.EmployeeType)
                                                {
                                                    <a class="btn btn-success" href='@Url.Action("CreateRelative", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_CREATE, nParentID = Model.userInfoModel.ParentId, nUserDematSaved = true, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] })' role="button"> @InsiderTrading.Common.Common.getResource("com_btn_14010") </a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-success" href='@Url.Action("CreateRelative", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_CREATE, nParentID = Model.userInfoModel.ParentId, nUserDematSaved = true, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] })' role="button"> @InsiderTrading.Common.Common.getResource("com_btn_14010") </a>
                                                }
                                                @if (Model.userInfoModel.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.NonEmployeeType)
                                                {
                                                    <a class="btn btn-success pull-left" id="SaveNProced" style="display:none" href='@Url.Action("CreateRelative", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_CREATE, nParentID = Model.userInfoModel.UserInfoId, nUserDematSaved = true, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] })' role="button"> @InsiderTrading.Common.Common.getResource("usr_btn_50765") </a>
                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
            @if (Model.userInfoModel.UserInfoId != 0)
            {
                <div class="card panel-accordion" style="width:100%;">
                    <div class="card-header active">
                        <h4 class="card-title">
                            <span class="pull-right"></span>
                            @InsiderTrading.Common.Common.getResource("usr_lbl_11351")
                        </h4>
                    </div>
                    <div class="card-body">
                        @Html.Partial("~/Views/Employee/Relative_CreateDMATDetails.cshtml", Model.dmatDetailsModel)
                    </div>

                </div>
            }
            @*//UserRelative Details*@
            <div id="RelGrid">
                <div class="card panel-accordion">
                    <div class="card-header active">
                        <h4 class="card-title">
                            @InsiderTrading.Common.Common.getResource("usr_lbl_11350")
                        </h4>
                    </div>
                    <div class="card-body">
                        @Html.Partial("~/Views/Common/CreateUserRelativeDetails.cshtml", Model.userInfoModel)
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

                                <a class="btn btn-success" id="ConfirmDetails" style="display:none" href='@Url.Action("ConfirmPersonalDetails", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_EDIT, nParentID = Session["UserInfoId"], nRelativeDetailsSaved = true, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] })' role="button"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("usr_btn_50769")</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <section class="content-header" style="padding-left:0px;padding-top: 0px">
                <ul style="list-style: none; padding-left: 0px; font-family: Roboto,sans-serif; font-weight: 400; color: #333; margin: 40px 0px 0px 0px;">
                    <li><h5>@InsiderTrading.Common.Common.getResource("usr_lbl_52095")</h5></li>
                    <li><h5>@InsiderTrading.Common.Common.getResource("usr_lbl_52088")</h5></li>
                    <li><h5>@InsiderTrading.Common.Common.getResource("usr_lbl_52094")</h5></li>
                </ul>
            </section>
        </div>
    </div>
</section>

<div id="divDMATDetailsModal" style="display:none;"></div>
<div id="divDocumentDetailsModal" style="display:none;"></div>
@Html.Hidden("GetUserDetails", Url.Action("GetParentDetails", "Employee", new { acid = ViewBag.user_action }))
@Scripts.Render("~/bundles/relativeDetails")
@Scripts.Render("~/bundles/relativeDMATDetails")

<div class="container">
    <!--PopUp-->
    <!-- Modal -->
    <div class="modal fade" id="ConfirmModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    @InsiderTrading.Common.Common.getResource("usr_lbl_11493")
                </div>
                <div class="modal-footer">

                    <input type="hidden" name="SPName" id="SPName" />

                    <a class="btn btn-success" id="btnYesConfirm" href='@Url.Action("ConfirmPersonalDetails", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_EDIT, nParentID = Session["UserInfoId"], nRelativeDetailsSaved = true, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] })' role="button"><i class="fa fa-save"></i> Yes</a>

                    @*<button type="button" id="btnYes" class="btn btn-success">Yes</button>*@

                    <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    @InsiderTrading.Common.Common.getResource("usr_lbl_50773")
                </div>
                <div class="modal-footer">

                    <input type="hidden" name="SPName" id="SPName" />

                    <a class="btn btn-success" id="btnYes" href='@Url.Action("ConfirmPersonalDetails", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_EDIT, nParentID = Session["UserInfoId"], nRelativeDetailsSaved = true, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] })' role="button"><i class="fa fa-save"></i> Yes</a>
                    @*<button type="button" id="btnYes" class="btn btn-success">Yes</button>*@

                    <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>

                </div>
            </div>
        </div>
    </div>
</div>


<div class="container">
    <div class="modal fade" id="RelativeModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title custom_align" id="myModalLabel">@InsiderTrading.Common.Common.getResource("usr_lbl_54041")</h4>
                </div>
                <div class="modal-body">

                    <table id="tblCustomers" class="table" cellpadding="0" cellspacing="0">
                        <thead>
                            <tr>
                                <th style="width:150px">@InsiderTrading.Common.Common.getResource("usr_lbl_54042")</th>

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>


                            @if (ViewBag.RelativeContact != null)
                            {
                                foreach (var customer in ViewBag.RelativeContact)
                                {
                                    <tr>
                                        <td>
                                            <input type="text" class='form-control txtmonileno' maxlength="13" title="Enter 10 digit mobile number" id="txtmonileno" style='  width: 265px;' value="@customer.MobileNumber" onkeypress="return isNumberKey(event)" />
                                            <input type="text" class="form-control txtmonileno " maxlength="13" title="Enter 10 digit mobile number" id="txtName" style=" width: 265px; display:none" onkeypress="return isNumberKey(event)" />
                                        </td>
                                        <td>
                                            @if (counter != 1)
                                            {
                                                <a class="display-icon icon icon-delete" role="button" onclick="Remove(this);"></a>

                                            }
                                            else if (counter == 1)
                                            {
                                                <input type="button" class="btn btn-success" id="btnAdd" value="+" />
                                            }

                                        </td>


                                    </tr>
                                            counter = counter + 1;
                                }
                            }

                        </tbody>

                    </table>
                    <br />


                    <button type="button" class="btn btn-success" id="btnSaveRelativeMobile" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("usr_btn_54043")</button>

                    <button type="button" class="btn btn-success" id="cancelButton" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("usr_btn_54044")</button>




                </div>
            </div>
        </div>
    </div>
</div>
<div id="divRelativeModal" style="display:none;"></div>


@Html.Hidden("AddRelDMAT", Url.Action("EditRelativeDMATDetails", "Employee"), new { UserInfoID = Model.userInfoModel.UserInfoId, acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DMAT_CREATE })
@Html.Hidden("AddDMAT", Url.Action("EditRelativeDMATDetails", "Employee"), new { UserInfoID = Model.userInfoModel.UserInfoId, acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DMAT_CREATE })
@Html.Hidden("SaveDMAT", Url.Action("SaveRelativeDMATDetails", "Employee"))
@Html.Hidden("AddDMATRel", Url.Action("EditRelativeDMATDetails", "Employee"), new { UserInfoID = Model.userInfoModel.UserInfoId, acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DMAT_EDIT })

@{
    var IsNewRelativeRegistration = @ViewBag.NewRelativeRegistration;
    var MobNumberCountryCode = @InsiderTrading.Common.ConstEnum.CountryCode;
}

<script>
    $(document).delegate(".RelativeMobNo", "click", function () {
        if (@Model.userInfoModel.UserInfoId != 0)
        {
            document.getElementById("txt_RelativeMobNo").blur();
            $("#divRelativeModal").show();
            $('#RelativeModal').modal('show');
        }



    });

    function isNumberKey(evt){
        var charCode = (evt.which) ? evt.which : event.keyCode

        if (charCode > 31 && ((charCode < 48 && charCode != 43) || charCode > 57))
            return false;
        return true;
    }

    $(document).delegate(".RelativeMobNo", "focusin", function () {
        if (@Model.userInfoModel.UserInfoId != 0)
        {
            document.getElementById("txt_RelativeMobNo").blur();
            $("#divRelativeModal").show();
            $('#RelativeModal').modal('show');
        }
    });
    $("body").on("click", "#btnAdd", function () {
        var validation=true;

        $("#tblCustomers TBODY TR").each(function () {
            var row = $(this).closest("tr");

            if($('input:text:eq(0)', row).val()=="")
            {
                validation=false;
                return;
            }
            if($('input:text:eq(0)', row).val()=="+91")
            {

                validation=false;
                return;
            }


        });
        if(validation)
        {

            //Reference the Name and Country TextBoxes.
            var txtName = $("#txtName");
            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblCustomers > TBODY")[0];
            //Add Row.
            var row = tBody.insertRow(-1);
            //Add Name cell.
            var cell = $(row.insertCell(-1));
            //cell.html(txtName.val());
            cell.html("<input type='text' class='form-control txtmonileno' maxlength='13' pattern='[0-9]{5}[-][0-9]{7}[-][0-9]{1}'  id='mobileno' onkeypress='return isNumberKey(event)' style='  width: 265px;' value='+91" + txtName.val() + "' />"); //("<input type='text'  value='" + txtName.val() + "' />");
            //Add Country cell.
            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<a/>");
            btnRemove.attr("type", "button");
            btnRemove.attr("class", "display-icon icon icon-delete");
            btnRemove.attr("onclick", "Remove(this);");
            cell.append(btnRemove);
            //Clear the TextBoxes.
            txtName.val("");
        }
    });
    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        //if (confirm("Do you want to delete: " + name)) {
        //Get the reference of the Table.
        var table = $("#tblCustomers")[0];

        //Delete the Table row using it's Index.
        table.deleteRow(row[0].rowIndex);
        //}
    };
    $("body").on("click", "#btnSaveRelativeMobile", function () {
        //Loop through the Table rows and build a JSON array.
        var UserInfoid = 0;
        var UserRelativeID = 0;
        var row = $(this);
        var ContactDetails = new Array();
        $("#tblCustomers TBODY TR").each(function () {
            var row = $(this);
            var customer = {};
            UserInfoId = UserInfoid;
            customer.MobileNumber = $('input:text:eq(0)', row).val();
            ContactDetails.push(customer);
        });
        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: '@Url.Action("RelativeCustomers", "Employee")',
            // data: JSON.stringify(customers),
            data: JSON.stringify({ MobileDetails: ContactDetails, UserInfoId: UserInfoid, UserRelativeID: UserRelativeID }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                $("#divRelativeModal").hide();
                $('#RelativeModal').modal('hide');
                document.getElementById('txt_RelativeMobNo').value = r.data.MobileNumber;
            }
        });
    });
</script>
<script type="text/javascript">
    var MobNumCountryCode = "@MobNumberCountryCode";
    var Chk_IsNewRelativeRegistration = "@IsNewRelativeRegistration";
    var objRouteValueDictionary = @InsiderTrading.Common.Common.IsEditable("MobileNumber", "usr_lbl_11364", null, 1);
    if (Chk_IsNewRelativeRegistration) {

        if (objRouteValueDictionary.Values.Count != 0)
        {

            $.each( objRouteValueDictionary,function(index,value){
                debugger;
                if(value!="disabled")
                {
                    $("#txt_RelativeMobNo").val(MobNumCountryCode);
                }
                else
                {  $("#txt_RelativeMobNo").val(MobNumCountryCode);}
            });

        }

    }

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnProceed").click(function () {
            $($(this).data("target")).show();
        });
    });
    //$('#btnYes').click(function () {
    //    $('#myModal').modal('hide');
    //    $('#btnProceed').hide();
    //    $('#ConfirmDetails').show();
    //    $('#RelCreateGrid').hide();
    //    $('#EmpInfo').hide();
    //});

</script>
<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.DupEmailChk' != '') {
            $('#RelCreateGrid').show();
            $('#EmpInfo').show();
            $('#emp_rel_detail_save').removeAttr("disabled");
            $('#RelGrid').hide();
        }
    });

</script>
<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Confirm_PersonalDetails_Required' != 'True') {
            $("#btn_GetUserDetails").removeClass("btn-warning").addClass("btn-success");
            $("#btn_GetUserDematDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserEducationDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserRelativeDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_ConfirmDetails").removeClass("btn-danger").addClass("btn-success");
        }
        else if ('@ViewBag.Confirm_PersonalDetails_Required' == 'True' && '@ViewBag.nUserEducationSaved' != 'True') {
            $("#btn_GetUserDetails").removeClass("btn-warning").addClass("btn-success");
            $("#btn_GetUserDematDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserEducationDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserRelativeDetails").removeClass("btn-danger").addClass("btn-warning");
            $("#btn_ConfirmDetails").removeClass("btn-danger").addClass("btn-danger");
        }
        else if ('@ViewBag.Confirm_PersonalDetails_Required' == 'True' && '@ViewBag.nUserEducationSaved' == 'True') {
            $("#btn_GetUserDetails").removeClass("btn-warning").addClass("btn-success");
            $("#btn_GetUserDematDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserEducationDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserRelativeDetails").removeClass("btn-danger").addClass("btn-warning");
            $("#btn_ConfirmDetails").removeClass("btn-danger").addClass("btn-danger");

        }

        if ($("#btn_GetUserRelativeDetails").hasClass("btn-warning")) {
           @* $('#btn_ConfirmDetails').attr("disabled", "disabled");*@
            $('#btn_ConfirmDetails').addClass("disabled");
            $('.cursor-change').addClass("not-allowed");
        }
        else {
            @*$('#btn_ConfirmDetails').removeAttr("disabled", "disabled");*@
            $('#btn_ConfirmDetails').removeClass("disabled");
            $('.cursor-change').removeClass("not-allowed");
        }
    });


    function NewDMATDetails(RelID) {
        var RelUserId = RelID;
        $.ajax({
            url: $("#AddDMATRel").val(),
            // type: 'post',
            headers: getRVToken(),
            data: { "acid": $("#AddDMATRel").attr("acid"), "nDMATDetailsID": $(this).attr("data-details"), "nUserInfoID": RelUserId },
            success: function (data) {
                $("#divDMATDetailsModal").html(data);
                $("#divDMATDetailsModal").show();
                $('#DMATModal').modal('show');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }
</script>