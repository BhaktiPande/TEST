@model InsiderTrading.Models.EmployeeModel
@{
    ViewBag.Title = InsiderTrading.Common.Common.getResource("usr_ttl_11238");
    InsiderTrading.Common.LoginUserDetails objLoginUserDetails = (InsiderTrading.Common.LoginUserDetails)InsiderTrading.Common.Common.GetSessionValue(InsiderTrading.Common.ConstEnum.SessionValue.UserDetails);
    //ViewBag.ToolTipWhenPersonalDetailsNotConfirmed = Html.Raw("title='" + InsiderTrading.Common.Common.getResource("usr_ttl_11438") + "'");
    var counter = 1;
    var TotalMobileNo = ViewBag.mobileno.Count;
}
<script>

    $(document).ready(function () {

        $("#addRoleMaster").on('show.bs.modal', function (event) {
            $(".modal-dialog").css({ width: '40%' });
            $.ajax({
                @*@Html.ActionLink(@InsiderTrading.Common.Common.getResource("usr_lbl_11339"), "Create", "RoleMaster", new { RoleId = 0, acid = @InsiderTrading.Common.ConstEnum.UserActions.CRUSER_ROLEMASTER_CREATE, frm = "emp", uid = Model.userInfoModel.UserInfoId }, new { @class = "create-link" })*@
                url: "@Url.Action("Create", "RoleMaster", new { acid = @InsiderTrading.Common.ConstEnum.UserActions.CRUSER_ROLEMASTER_CREATE, uid = Model.userInfoModel.UserInfoId })",//"../TemplateMaster/Create?TemplateMasterId=0",
                data: { RoleId: "0", frm: "emp" },
                method: "GET",
                success: function (response) {
                    //$("#myModal .modal-body").html('');
                    $("#addRoleMaster .modal-body").html(response);
                }
            });
        });
    });
</script>

@Styles.Render("~/content/SW360")



@Html.Partial("~/Views/Common/PersonalDetailsBreadcrumbs.cshtml")

<section class="content">

    @Html.Partial("~/Views/Employee/PartialWarningInfoMsg.cshtml", new ViewDataDictionary() { { "PolicyDocument", ViewBag.IsShowMsgPDocNotApp }, { "TradingPolicy", ViewBag.IsShowMsgTPocNotApp }, { "ConfirmDetails", ViewBag.IsShowMsgConfirmDetails } })


    <div class="row">
        @using (Html.BeginForm("Create", "Employee", new { ReturnUrl = ViewBag.ReturnUrl, formId = InsiderTrading.Common.ConstEnum.Code.frmCreateEmployee }, FormMethod.Post, new { role = "form", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="panel-group" id="accordion">
                    <div class="panel panel-accordion">
                        <div class="panel-heading active">
                            <h4 class="panel-title">
                                @InsiderTrading.Common.Common.getResource("usr_ttl_11239")  & @InsiderTrading.Common.Common.getResource("usr_ttl_11240")
                            </h4>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in">

                            @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
                            @Html.HiddenFor(m => m.userInfoModel.UserInfoId)
                            @Html.HiddenFor(m => m.userInfoModel.IsRequiredConfirmPersonalDetails)
                            @if (Model.userInfoModel.UserInfoId != 0 && Model.userInfoModel.UserInfoId != null)
                            {
                                @Html.Hidden("acid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_EDIT)
                            }
                            else
                            {
                                @Html.Hidden("acid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_CREATE)
                            }
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <h4>@InsiderTrading.Common.Common.getResource("usr_ttl_11239")</h4>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">
                                            @{
                                                //check if to show following option to login user -- if do not show role then hide div
                                                if (!(bool)ViewBag.show_not_login_user_details)
                                                {
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div role="form">
                                                            <div class="form-group">
                                                                @Html.LabelFor(m => m.userInfoModel.LoginID)
                                                                @Html.TextBoxFor(m => m.userInfoModel.LoginID, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.LoginID).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.LoginID).ToString(), new { @class = "form-control", id = "txtLoginID" }))
                                                                @Html.HiddenFor(m => m.userInfoModel.LoginID)
                                                                @Html.ValidationMessageFor(m => m.userInfoModel.LoginID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            }

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.EmployeeId)
                                                        @Html.TextBoxFor(m => m.userInfoModel.EmployeeId, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.EmployeeId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.EmployeeId).ToString(), new { @class = "form-control", id = "txtEmployeeId" }))
                                                        @Html.HiddenFor(m => m.userInfoModel.EmployeeId)
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.EmployeeId)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.CompanyId)
                                                        @Html.TextBoxFor(m => m.userInfoModel.CompanyName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.CompanyId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.CompanyId).ToString(), new { @class = "form-control", @disabled = "disabled" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.CompanyId)
                                                    </div>
                                                </div>
                                            </div>
                                            @if (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.EmployeeType || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.NonEmployeeType)
                                            {
                                                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.AssignedRole)
                                                        @foreach (var item in Model.userInfoModel.AssignedRole)
                                                        {
                                                            <div><u>@item.Value</u></div>
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>

                                    </div>
                                    @{
                                        //check if to show following option to login user -- if do not show role then hide div
                                        if ((bool)ViewBag.show_not_login_user_details)
                                        {
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                <div class="row">
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div role="form">
                                                            <div class="form-group">
                                                                @Html.LabelFor(m => m.userInfoModel.LoginID)
                                                                @Html.TextBoxFor(m => m.userInfoModel.LoginID, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.LoginID).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.LoginID).ToString(), new { @class = "form-control" }))
                                                                @Html.ValidationMessageFor(m => m.userInfoModel.LoginID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                        <div role="form">
                                                            <div class="form-group">
                                                                @Html.LabelFor(m => m.userInfoModel.AssignedRole)
                                                                @{
                                                                    //check if user has permission to add role
                                                                    if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CRUSER_ROLEMASTER_CREATE))
                                                                    {
                                                                        if ((bool)ViewBag.show_create_role_link)
                                                                        {
                                                                            @Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                                                                            <div class="form-group">
                                                                                <a href="javascript:void(0);" class="create-link" id="AT" type="button" data-toggle='modal' data-target='#addRoleMaster'>
                                                                                    @InsiderTrading.Common.Common.getResource("usr_lbl_11339")
                                                                                </a>
                                                                            </div>
                                                                        }
                                                                    }
                                                                }
                                                                @Html.ListBoxFor(m => m.userInfoModel.SubmittedRole, new MultiSelectList(Model.userInfoModel.DefaultRole, "Key", "Value", Model.userInfoModel.AssignedRole.Select(m => m.Key)), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.AssignedRole).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.AssignedRole).ToString(), new { multiple = "multiple", @class = "form-control multiselect" }))
                                                                @Html.ValidationMessageFor(m => m.userInfoModel.SubmittedRole)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            //set hidden variable for role which need to be pass for saving
                                            @*@Html.HiddenFor(m => m.userInfoModel.SubmittedRole)*@
                                        }
                                    }

                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.FirstName)
                                                        @Html.TextBoxFor(m => m.userInfoModel.FirstName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.FirstName).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.FirstName).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.FirstName)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.MiddleName)
                                                        @Html.TextBoxFor(m => m.userInfoModel.MiddleName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.MiddleName).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.MiddleName).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.MiddleName)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.LastName)
                                                        @Html.TextBoxFor(m => m.userInfoModel.LastName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.LastName).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.LastName).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.LastName)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.EmailId)
                                                        @Html.TextBoxFor(m => m.userInfoModel.EmailId, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.EmailId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.EmailId).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.EmailId)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.ResidentTypeId)
                                                        @Html.DropDownListFor(m => m.userInfoModel.ResidentTypeId, new SelectList(ViewBag.ResidentTypeDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.ResidentTypeId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.ResidentTypeId).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.ResidentTypeId)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.PAN)
                                                        @Html.TextBoxFor(m => m.userInfoModel.PAN, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.PAN).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.PAN).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.PAN)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.IdentificationTypeId)
                                                        @Html.DropDownListFor(m => m.userInfoModel.IdentificationTypeId, new SelectList(ViewBag.IdentificationTypeIdTypeDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.IdentificationTypeId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.IdentificationTypeId).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.IdentificationTypeId)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.UIDAI_IdentificationNo)
                                                        @Html.TextBoxFor(m => m.userInfoModel.UIDAI_IdentificationNo, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.UIDAI_IdentificationNo).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.UIDAI_IdentificationNo).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.UIDAI_IdentificationNo)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">




                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group" id="sandbox-container">

                                                        @Html.LabelFor(m => m.userInfoModel.Passport_ExpiryDate)
                                                        @{
                                                            string passport = "";
                                                            if (Model.userInfoModel.Passport_ExpiryDate != null)
                                                            {
                                                                passport = InsiderTrading.Common.Common.ApplyFormatting(Model.userInfoModel.Passport_ExpiryDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                            }
                                                        }
                                                        <div class="input-group date  group_date_previous">

                                                            @Html.TextBox("userInfoModel.Passport_ExpiryDate", passport, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.Passport_ExpiryDate).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.Passport_ExpiryDate).ToString(), new { @class = "form-control" }))
                                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                        </div>
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.Passport_ExpiryDate)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">

                                                        @Html.LabelFor(m => m.userInfoModel.EmiratesId)

                                                        @Html.TextBoxFor(m => m.userInfoModel.EmiratesId, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.EmiratesId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.EmiratesId).ToString(), new { @class = "form-control ", id = "txtEmiratesId" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.EmiratesId)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group" id="sandbox-container">

                                                        @Html.LabelFor(m => m.userInfoModel.EmiratesId_ExpiryDate)
                                                        @{
                                                            string Exp = "";
                                                            if (Model.userInfoModel.EmiratesId_ExpiryDate != null)
                                                            {
                                                                Exp = InsiderTrading.Common.Common.ApplyFormatting(Model.userInfoModel.EmiratesId_ExpiryDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                            }
                                                        }
                                                        <div class="input-group date  group_date_previous ">
                                                            @*  group_date_previous*@
                                                            @Html.TextBox("userInfoModel.EmiratesId_ExpiryDate", Exp, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.EmiratesId_ExpiryDate).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.EmiratesId_ExpiryDate).ToString(), new { @class = "form-control" }))
                                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                        </div>
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.EmiratesId_ExpiryDate)
                                                    </div>
                                                </div>
                                            </div>


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.MobileNumber)
                                                        @Html.TextBoxFor(m => m.userInfoModel.MobileNumber, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.MobileNumber).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.MobileNumber).ToString(), new { @class = "form-control btnAddMobileDetails", id = "txt_EmpMobNo" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.MobileNumber)
                                                    </div>
                                                </div>
                                            </div>


                                        </div>
                                    </div>


                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.PhoneNumber)

                                                        @Html.TextBoxFor(m => m.userInfoModel.PhoneNumber, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.PhoneNumber).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.PhoneNumber).ToString(), new { @class = "form-control btnAddMobileDetails ", id = "txt_EmpMobNo" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.PhoneNumber)

                                                    </div>
                                                </div>
                                            </div>


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.AddressLine1)
                                                        @Html.TextAreaFor(m => m.userInfoModel.AddressLine1, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.AddressLine1).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.AddressLine1).ToString(), new { @class = "form-control", style = "height:34px" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.AddressLine1)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.PersonalAddress)
                                                        @Html.TextAreaFor(m => m.userInfoModel.PersonalAddress, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.PersonalAddress).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.PersonalAddress).ToString(), new { @class = "form-control", style = "height:34px" }))
                                                        <br />@Html.ValidationMessageFor(m => m.userInfoModel.PersonalAddress)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.PinCode)
                                                        @Html.TextBoxFor(m => m.userInfoModel.PinCode, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.PinCode).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.PinCode).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.PinCode)
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>


                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.CountryId)
                                                        @Html.DropDownListFor(m => m.userInfoModel.CountryId, new SelectList(ViewBag.CountryDropDown, "Key", "Value", ""), new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.CountryId)
                                                    </div>
                                                </div>
                                            </div>


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group" id="sandbox-container">

                                                        @Html.LabelFor(m => m.userInfoModel.DateOfBirth)
                                                        @{
                                                            string DOB = "";
                                                            if (Model.userInfoModel.DateOfBirth != null)
                                                            {
                                                                DOB = InsiderTrading.Common.Common.ApplyFormatting(Model.userInfoModel.DateOfBirth, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                            }
                                                        }
                                                        <div class="input-group date datepickerDOB">
                                                            @Html.TextBox("userInfoModel.DateOfBirth", DOB, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DateOfBirth).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DateOfBirth).ToString(), new { @class = "form-control" }))
                                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                        </div>
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.DateOfBirth)
                                                    </div>
                                                </div>
                                            </div>


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div class="form-group" id="sandbox-container">
                                                    @Html.LabelFor(m => m.userInfoModel.DateOfJoining)
                                                    @{
                                                        string DOJ = "";
                                                        if (Model.userInfoModel.DateOfJoining != null)
                                                        {
                                                            DOJ = InsiderTrading.Common.Common.ApplyFormatting(Model.userInfoModel.DateOfJoining, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                        }
                                                    }
                                                    <div class="input-group date">
                                                        @Html.TextBox("userInfoModel.DateOfJoining", DOJ, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DateOfJoining).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DateOfJoining).ToString(), new { @class = "form-control" }))
                                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    </div>
                                                    @Html.ValidationMessageFor(m => m.userInfoModel.DateOfJoining)
                                                </div>
                                            </div>


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div class="form-group" id="sandbox-container">
                                                    @Html.LabelFor(m => m.userInfoModel.DateOfBecomingInsider)
                                                    @{
                                                        string DOBI = "";
                                                        if (Model.userInfoModel.DateOfBecomingInsider != null)
                                                        {
                                                            DOBI = InsiderTrading.Common.Common.ApplyFormatting(Model.userInfoModel.DateOfBecomingInsider, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                        }
                                                    }
                                                    <div class="input-group date">
                                                        @Html.TextBox("userInfoModel.DateOfBecomingInsider", DOBI, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DateOfBecomingInsider).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DateOfBecomingInsider).ToString(), new { @class = "form-control" }))
                                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    </div>
                                                    @Html.ValidationMessageFor(m => m.userInfoModel.DateOfBecomingInsider)
                                                </div>
                                            </div>

                                        </div>
                                    </div>


                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group" id="sandbox-container">

                                                        @Html.LabelFor(m => m.userInfoModel.DateRemoved_asInsider)
                                                        @{
                                                            string dateRemoved = "";
                                                            if (Model.userInfoModel.DateRemoved_asInsider != null)
                                                            {
                                                                dateRemoved = InsiderTrading.Common.Common.ApplyFormatting(Model.userInfoModel.DateRemoved_asInsider, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                                                            }
                                                        }
                                                        <div class="input-group date ">
                                                            @Html.TextBox("userInfoModel.DateRemoved_asInsider", dateRemoved, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DateRemoved_asInsider).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DateRemoved_asInsider).ToString(), new { @class = "form-control" }))
                                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                        </div>
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.DateRemoved_asInsider)
                                                    </div>
                                                </div>
                                            </div>





                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.ReasonRemoved_asInsider)
                                                        @Html.TextAreaFor(m => m.userInfoModel.ReasonRemoved_asInsider, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.ReasonRemoved_asInsider).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.ReasonRemoved_asInsider).ToString(), new { @class = "form-control", style = "height:34px" }))
                                                        <br />@Html.ValidationMessageFor(m => m.userInfoModel.ReasonRemoved_asInsider)
                                                    </div>
                                                </div>
                                            </div>


                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.Location)
                                                        @Html.TextBoxFor(m => m.userInfoModel.Location, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.Location).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.Location).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.Location)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.DesignationId)
                                                        @Html.DropDownListFor(m => m.userInfoModel.DesignationId, new SelectList(ViewBag.DesignationDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DesignationId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DesignationId).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.DesignationId)
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>



                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12" id="divSubDesignation">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.SubDesignationId)
                                                        @if (ViewBag.SubDesignationDropDown.Count > 1)
                                                        {
                                                            @Html.DropDownListFor(m => m.userInfoModel.SubDesignationId, new SelectList(ViewBag.SubDesignationDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.SubDesignationId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.SubDesignationId).ToString(), new { @class = "form-control" }))
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(m => m.userInfoModel.SubDesignationId, new SelectList(ViewBag.SubDesignationDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.SubDesignationId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.SubDesignationId).ToString(), new { @class = "form-control", @disabled = "disabled" }))
                                                        }
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.SubDesignationId)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.DepartmentId)
                                                        @Html.DropDownListFor(m => m.userInfoModel.DepartmentId, new SelectList(ViewBag.DepartmentDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DepartmentId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DepartmentId).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.DepartmentId)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.GradeId)
                                                        @Html.DropDownListFor(m => m.userInfoModel.GradeId, new SelectList(ViewBag.GradeDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.GradeId).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.GradeId).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.GradeId)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.Category)
                                                        @Html.DropDownListFor(m => m.userInfoModel.Category, new SelectList(ViewBag.CategoryDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.Category).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.Category).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.Category)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12" id="divSubCategories">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.SubCategory)
                                                        @if (ViewBag.SubCategoryDropDown.Count > 1)
                                                        {
                                                            @Html.DropDownListFor(m => m.userInfoModel.SubCategory, new SelectList(ViewBag.SubCategoryDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.SubCategory).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.SubCategory).ToString(), new { @class = "form-control" }))
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(m => m.userInfoModel.SubCategory, new SelectList(ViewBag.SubCategoryDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.SubCategory).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.SubCategory).ToString(), new { @class = "form-control" }))
                                                        }
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.SubCategory)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.userInfoModel.DIN)
                                                        @Html.TextBoxFor(m => m.userInfoModel.DIN, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.userInfoModel.DIN).ToString(), Html.ActivityResourceKeyFor(m => m.userInfoModel.DIN).ToString(), new { @class = "form-control" }))
                                                        @Html.ValidationMessageFor(m => m.userInfoModel.DIN)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group">
                                                        <label></label> <br />
                                                        @if (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.Admin || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.COUserType)
                                                        {
                                                            @Html.CheckBoxFor(model => model.userInfoModel.AllowUpsiUser)<span>&nbsp;</span> @Html.LabelFor(m => m.userInfoModel.AllowUpsiUser)
                                                            @Html.ValidationMessageFor(m => m.userInfoModel.AllowUpsiUser)
                                                        }
                                                        @Html.HiddenFor(m => m.userInfoModel.AllowUpsiUser)
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <div role="form">
                                                            <div class="form-group">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>


                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12 pull-left">
                                        <div role="form">
                                            @Html.Hidden("confirm_role", ((bool)ViewBag.show_create_role_link))
                                            <button type="submit" class="btn btn-success pull-left" name="Create" id="emp_detail_save"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("usr_btn_50769")</button>

                                            @if (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.Admin || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.COUserType)
                                            {
                                                @*<a class="btn btn-success" href='@Url.Action("Index", "Employee", new { acid = ViewBag.user_action_ViewDetails })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14010")</a>*@
                                            }
                                            else
                                            {
                                                if (!(bool)ViewBag.show_not_login_user_details)
                                                {
                                                    @*<a class="btn btn-success" href='@Url.Action("ViewDetails", "Employee", new { acid = ViewBag.user_action_ViewDetails, nUserInfoID = Model.userInfoModel.UserInfoId })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14010")</a>*@
                                                }
                                                else
                                                {
                                                    <a class="btn btn-success" href='@Url.Action("Index", "Home", new { acid = "0" })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14010")</a>
                                                }
                                            }

                                            @Html.Hidden("partial_fetch", (int)ViewBag.user_action)
                                            <input type="hidden" name="authorization" value="Create:@ViewBag.user_action,ConfirmDetails:@ViewBag.user_action" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            if (Model.userInfoModel.UserInfoId != 0)
            {
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    @*//check if to show confirm personal details button or not*@
                    @*@if ((bool)ViewBag.show_confirm_personal_details_btn)
                        {
                            @Html.Hidden("confirm_msg", @InsiderTrading.Common.Common.getResource("usr_lbl_11493"))
                            <button type="button" class="btn btn-success" name="ConfirmDetails" id="ConfirmDetails"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("usr_btn_11418")</button>
                        }*@

                    @*@if (ViewBag.CompanyName == false)
                        {
                            <a class="btn btn-success" href='@Url.Action("ViewDetails", "Employee", new { acid = ViewBag.user_action_ViewDetails, nUserInfoID = Model.userInfoModel.UserInfoId })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14018")</a>
                        }*@



                    @if ((bool)ViewBag.show_not_login_user_details)
                    {
                        <a class="btn btn-success" href='@Url.Action("Index", "Employee", new { acid = ViewBag.user_action_ViewDetails })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14011")</a>
                    }
                </div>
            }

        }
    </div>

</section><!-- /.content -->
<div id="divDMATDetailsModal" style="display:none;"></div>
<div id="divDocumentDetailsModal" style="display:none;"></div>
<div class="modal fade" id="addRoleMaster" tabindex="-1" role="dialog" aria-labelledby="AddRoleMasterlabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>



<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="mobileNoModal" role="dialog">
        <form>
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title custom_align" id="myModalLabel">@InsiderTrading.Common.Common.getResource("usr_lbl_54041")</h4>
                    </div>
                    <div class="modal-body">

                        <table id="tblCustomers" class="table" cellpadding="0" cellspacing="0">
                            <thead>
                                <tr>
                                    <th style="width:150px">@InsiderTrading.Common.Common.getResource("usr_lbl_54042")</th>

                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>

                                @if (ViewBag.mobileno != null)
                                {


                                    foreach (var customer in ViewBag.mobileno)
                                    {
                                        <tr>
                                            <td>
                                                <input type="text" class='form-control txtmonileno' maxlength="13" pattern='^[0-9]*$' title="Enter 10 digit mobile number" id="txtmonileno" style='  width: 265px;' value="@customer.MobileNumber" onkeypress="return isNumberKey(event)" />
                                                <input type="text" class="form-control txtmonileno" maxlength="13" pattern='^[0-9]*$' id="txtName" style=" width: 265px; display:none" onkeypress="return isNumberKey(event)" />
                                            </td>
                                            <td>
                                                @if (counter != 1)
                                                {
                                                    <a class="display-icon icon icon-delete" role="button" onclick="Remove(this);"></a>
                                                    @*if (TotalMobileNo > 1 & counter == TotalMobileNo)
                                                        {
                                                            <input type="button" class="btn btn-success" id="btnAdd" value="+" />
                                                        }*@
                                                }
                                                else if (TotalMobileNo == 1 & counter == TotalMobileNo)
                                                {
                                                    <input type="button" class="btn btn-success" id="btnAdd" value="+" />
                                                }
                                                else if (counter == 1)
                                                {
                                                    <input type="button" class="btn btn-success" id="btnAdd" value="+" />
                                                }

                                            </td>

                                        </tr>
                                        @*<tr id="footerid" style="display:none">
                                                <td><input type="text" class="form-control txtmonileno" maxlength="13" pattern='^[0-9]*$' id="txtName" style=" width: 265px;" /></td>
                                                <td><input type="button" class="btn btn-success" id="btnAdd" value="+"  /></td>
                                                <p id="demo"></p>
                                            </tr>*@
                                        counter = counter + 1;
                                    }

                                }

                            </tbody>
                            @*<tfoot id="footerid" style="display:none">
                                    <tr>
                                        <td><input type="text" class="form-control txtmonileno " maxlength="13" value="+91" pattern="[1-9]{1}[0-9]{9}" id="txtName" style=" width: 265px;" /></td>
                                        <td><input type="button" class="btn btn-success" id="btnAdd" value="+" /></td>
                                        <p id="demo"></p>
                                    </tr>
                                </tfoot>*@
                        </table>
                        <br />
                        <button type="button" class="btn btn-success" id="btnSave" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("usr_btn_54043")</button>
                        <button type="button" class="btn btn-success" id="cancelButton" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("usr_btn_54044")</button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div id="divMobileNoDetailsModal" style="display:none;"></div>
</div>
@*@Html.Hidden("AddDMATno", Url.Action("AddMobileNoDetails", "Employee"), new { UserInfoID = Model.userInfoModel.UserInfoId, acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_EDIT })*@
@Html.Hidden("GetSubCategories", Url.Action("GetSubCategories", "Employee"))
@Html.Hidden("GetSubDesignation", Url.Action("GetSubDesignation", "Employee"))
@Scripts.Render("~/bundles/employee")


@{
    var IsNewEmpRegistration = @ViewBag.NewEmpRegistration;
    var MobNumberCountryCode = @InsiderTrading.Common.ConstEnum.CountryCode;
}

<script type="text/javascript">
    var MobNumCountryCode = "@MobNumberCountryCode";
    var Chk_IsNewEmpRegistration = "@IsNewEmpRegistration";
    if (Chk_IsNewEmpRegistration) {
        $("#txt_EmpMobNo").val(MobNumCountryCode);
    }
</script>


<script type="text/javascript">
    $(document).ready(function () {
        if ("@objLoginUserDetails.UserTypeCodeId" == "@InsiderTrading.Common.ConstEnum.Code.EmployeeType" || "@objLoginUserDetails.UserTypeCodeId" == "@InsiderTrading.Common.ConstEnum.Code.NonEmployeeType") {
            $("#txtLoginID").attr("disabled", "disabled");
            $("#txtEmployeeId").attr("disabled", "disabled");
        }
    });
</script>








<script type="text/javascript">
    $(document).ready(function () {
        if ('@Session["Confirm_PersonalDetails_Required"]' != 'True' && '@Session["UserInfoId"]' != 0) {
            $("#btn_GetUserDetails").removeClass("btn-warning").addClass("btn-success");
            $("#btn_GetUserDematDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserEducationDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_GetUserRelativeDetails").removeClass("btn-danger").addClass("btn-success");
            $("#btn_ConfirmDetails").removeClass("btn-danger").addClass("btn-success");

        }
        else {
            $("#btn_GetUserDetails").removeClass("btn-warning").addClass("btn-warning");
            $("#btn_GetUserDematDetails").removeClass("btn-danger").addClass("btn-danger");
            $("#btn_GetUserEducationDetails").removeClass("btn-danger").addClass("btn-danger");
            $("#btn_GetUserRelativeDetails").removeClass("btn-danger").addClass("btn-danger");
            $("#btn_ConfirmDetails").removeClass("btn-danger").addClass("btn-danger");
        }

        if ($("#btn_GetUserDematDetails").hasClass("btn-danger")) {
            $('#btn_GetUserDematDetails').attr("disabled", "disabled");
            $('#btn_GetUserEducationDetails').attr("disabled", "disabled");
            $('#btn_GetUserRelativeDetails').attr("disabled", "disabled");
            $('#btn_ConfirmDetails').attr("disabled", "disabled");

        }
        else {
            $('#btn_GetUserDematDetails').removeAttr("disabled", "disabled");
            $('#btn_GetUserEducationDetails').removeAttr("disabled", "disabled");
            $('#btn_GetUserRelativeDetails').removeAttr("disabled", "disabled");
            $('#btn_ConfirmDetails').removeAttr("disabled", "disabled");
        }
    });
</script>
<script>
    function isNumberKey(evt){
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && ((charCode < 48 && charCode != 43) || charCode > 57))
            return false;
        return true;
    }
    $(document).delegate(".btnAddMobileDetails", "click", function () {
        if (@Model.userInfoModel.UserInfoId != 0)
        {
            document.getElementById("txt_EmpMobNo").blur();
            $("#divMobileNoDetailsModal").show();
            $('#mobileNoModal').modal('show');
        }
    });
    $(document).delegate(".btnAddMobileDetails", "focusin", function () {
        if (@Model.userInfoModel.UserInfoId != 0)
        {
            document.getElementById("txt_EmpMobNo").blur();
            $("#divMobileNoDetailsModal").show();
            $('#mobileNoModal').modal('show');
        }
    });

    $("body").on("click", "#btnAdd", function () {

        var validation=true;

        $("#tblCustomers TBODY TR").each(function () {
            var row = $(this).closest("tr");

            if($('input:text:eq(0)', row).val()=="")
            {
                validation=false;
                return;
            }
            if($('input:text:eq(0)', row).val()=="+91")
            {

                validation=false;
                return;
            }


        });

        //var x = document.getElementsByTagName("tr");
        //var txt = "";
        //var i;
        //for (i = 0; i < x.length;i++) {
        //    txt = txt + "The index of Row "+(i+1)+" is: "+x[i].rowIndex+ $('input:text:eq(0)', i).val()+"<br>";
        //}
        //document.getElementById("demo").innerHTML = txt;
        if(validation)
        {

            var txtName = $("#txtName");
            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblCustomers > TBODY")[0];
            //Add Row.
            var row = tBody.insertRow(-1);
            //Add Name cell.
            var cell = $(row.insertCell(-1));
            //cell.html(txtName.val());
            cell.html("<input type='text' class='form-control txtmonileno' maxlength='13' pattern='[0-9]{5}[-][0-9]{7}[-][0-9]{1}'  id='mobileno' onkeypress='return isNumberKey(event)' style='  width: 265px;' value='+91" + txtName.val() + "' />"); //("<input type='text'  value='" + txtName.val() + "' />");
            //Add Country cell.
            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<a/>");
            btnRemove.attr("type", "button");
            btnRemove.attr("class", "display-icon icon icon-delete");
            btnRemove.attr("onclick", "Remove(this);");
            cell.append(btnRemove);
            //Clear the TextBoxes.


            txtName.val("");

        }

    });



    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        //if (confirm("Do you want to delete: " + name)) {
        //Get the reference of the Table.
        var table = $("#tblCustomers")[0];

        //Delete the Table row using it's Index.
        table.deleteRow(row[0].rowIndex);
        //}
    };
    $("body").on("click", "#btnSave", function () {
        //Loop through the Table rows and build a JSON array.
        var validation=true;
        var UserInfoid = 0;
        var UserRelativeID = 0;
        var row = $(this);
        var ContactDetails = new Array();
        $("#tblCustomers TBODY TR").each(function () {
            var row = $(this);
            var customer = {};

            UserInfoId = UserInfoid;
            customer.MobileNumber = $('input:text:eq(0)', row).val();
            ContactDetails.push(customer);


        });
        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: "@Url.Action("InsertCustomers", "Employee")",
            // data: JSON.stringify(customers),
            data: JSON.stringify({ ContactDetails: ContactDetails, UserInfoId: UserInfoid, UserRelativeID: UserRelativeID }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                $("#divMobileNoDetailsModal").hide();
                $('#mobileNoModal').modal('hide');
                document.getElementById('txt_EmpMobNo').value = r.data.MobileNumber;
            }
        });

    });

</script>

<script type="text/javascript">
    $(function () {
        $('.group_date_previous').datepicker({
            startDate: '0',
        
            format: "dd/M/yyyy",
            autoClose: true
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $('.datepickerDOB').datepicker({
            endDate: '0',
            format: "dd/M/yyyy",
            autoClose: true
        });
    });

</script>


<script type="text/javascript">
    $(document).ready(function () {
        var table = document.getElementById('tblCustomers');
        var x = document.getElementsByTagName("tr");
        for (var i = 1; i < table.rows.length; i++) {

            table.rows[i].onfocusout = function () {

                var row = $(this);
                var rindex = $('input:text:eq(0)', row).val();
                //document.getElementById("txtName").value=rindex;
                var phoneno = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
                if (rindex.match(phoneno)) {
                    return true;
                }
                else {

                    return false;

                }
            }


        }

    });

    //function phonenumber(rindex) {
    //   debugger
    //    var phoneno = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
    //    if(rindex.match(phoneno)) {
    //        return true;
    //    }
    //    else {
    //        document.getElementById(this).focus();
    //        return false;
    //    }
    //}

</script>
@*<style>

            td {border: 1px #DDD solid; padding: 1px; cursor: pointer;}

    .selected {
        background-color: brown;
        color: #FFF;
    }
        </style>*@


