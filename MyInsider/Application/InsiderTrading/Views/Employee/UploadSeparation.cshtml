@model InsiderTrading.Models.UserInfoModel
@{
    ViewBag.Title = "Separation List";
    int gridtype = InsiderTrading.Common.ConstEnum.GridType.UserSeparationList;
}

<script>
    $(document).ready(function () {
        $('#myModalSeparation').on('show.bs.modal', function (event, nUserInfoId) {

            var UserInfoId = $(this).attr('userinfoid');//$(event.relatedTarget).closest("tr").find("[name$='.clsUserInfoId']").val();//$(event.relatedTarget).attr("templateid");

            UserInfoId = $(event.relatedTarget).closest("tr").find("[name$='.clsUserInfoId']").val();

            if (UserInfoId !== "undefined" && UserInfoId != 0) {
                $.ajax({
                    url: "@Url.Action("EditSepration", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_USERSEPARATION_CREATE })",//"../TemplateMaster/Create?TemplateMasterId=0",
                    data: { "UserInfoID": parseInt(UserInfoId) },
                    method: "GET",
                    success: function (response) {

                        $("#myModalSeparation .modal-body").html(response);
                    }
                });
            }
            else {
                alert("test");
                $("#myModalSeparation .modal-body").html("Error Test me");

            }
        });
    });
</script>

<section class="content-header">
    <h1>@InsiderTrading.Common.Common.getResource("usr_ttl_11275")</h1>
</section>
<section class="content search" gridtype="@ViewBag.GridType">
    <button type="button" data-toggle="collapse" class="btn btn-success" data-target="#filter-panel">
        <i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")
    </button>
    <div id="filter-panel" class="collapse filter-panel">
        <br />
        <div class="col-lg-12">
            <div class="card panel-default">
                <div class="cra-body ">
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <input type="hidden" value="@ViewBag.Param1" id="1" gridtype="@ViewBag.GridType" />
                                    <label>@Html.LabelFor(m => m.EmployeeId)</label>
                                    @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "6" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.PAN)</label>
                                    @Html.TextBoxFor(m => m.PAN, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "9" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.UserTypeCodeId)</label>
                                    @Html.DropDownListFor(m => m.UserTypeCodeId, new SelectList(ViewBag.UserTypeDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "20" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.Label(InsiderTrading.Common.Common.getResource("usr_lbl_11436"))</label>
                                    @Html.DropDownList("InsiderStatus", new SelectList(ViewBag.InsiderStatusDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "25" })
                                </div>
                            </div>
                        </div>



                    </div>
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.DesignationId)</label>
                                    @Html.DropDownListFor(m => m.DesignationId, new SelectList(ViewBag.DesignationDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "12" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.DepartmentId)</label>
                                    @Html.DropDownListFor(m => m.DepartmentId, new SelectList(ViewBag.DepartmentDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "14" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.FirstName)</label>
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "3" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.EmailId)</label>
                                    @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "2" })
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.GradeId)</label>
                                    @Html.DropDownListFor(m => m.GradeId, new SelectList(ViewBag.GradeDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "11" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.Location)</label>
                                    @Html.TextBoxFor(m => m.Location, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "13" })
                                </div>
                            </div>
                        </div>
                        <!-- /.col-lg-3  -->
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.MobileNumber)</label>
                                    @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "7" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <div class="form-group">
                                    <label>@Html.LabelFor(m => m.StatusCodeId)</label>
                                    @Html.DropDownListFor(m => m.StatusCodeId, new SelectList(ViewBag.UserStatusDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "15" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group" id="sandbox-container">

                                <label>@Html.LabelFor(model => model.DateOfSeparation, "From Date Of Separation")</label>
                                @{
                                    string dtFromDateOfSeparation = "";
                                    if (Model != null)
                                    {
                                        dtFromDateOfSeparation = InsiderTrading.Common.Common.ApplyFormatting(Model.DateOfSeparation, InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                    }
                                }
                                <div class="input-group date">
                                    @Html.TextBoxFor(m => m.DateOfSeparation, dtFromDateOfSeparation, new { @class = "form-control", id = "21", gridtype = ViewBag.GridType })
                                    <span class="input-group-addon"><i class="icon icon-calender"></i></span>
                                </div>
                                @Html.ValidationMessageFor(m => m.DateOfSeparation)
                            </div>

                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group" id="sandbox-container">

                                <label>@Html.LabelFor(model => model.DateOfSeparation, "To Date Of Separation")</label>
                                @{
                                    string dtToDateOfSeparation = "";
                                    if (Model != null)
                                    {
                                        dtToDateOfSeparation = InsiderTrading.Common.Common.ApplyFormatting(Model.DateOfSeparation, InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                    }
                                }
                                <div class="input-group date">
                                    @Html.TextBoxFor(m => m.DateOfSeparation, dtToDateOfSeparation, new { @class = "form-control", id = "22", gridtype = ViewBag.GridType })
                                    <span class="input-group-addon"><i class="icon icon-calender"></i></span>
                                </div>
                                @Html.ValidationMessageFor(m => m.DateOfSeparation)
                            </div>

                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group" id="sandbox-container">

                                <label>@Html.LabelFor(model => model.DateOfInactivation, "From Date Of Inactivation")</label>
                                @{
                                    string dtFromDateOfInactivation = "";
                                    if (Model != null)
                                    {
                                        dtFromDateOfInactivation = InsiderTrading.Common.Common.ApplyFormatting(Model.DateOfInactivation, InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                    }
                                }
                                <div class="input-group date">
                                    @Html.TextBoxFor(m => m.DateOfInactivation, dtFromDateOfInactivation, new { @class = "form-control", id = "23", gridtype = ViewBag.GridType })
                                    <span class="input-group-addon"><i class="icon icon-calender"></i></span>
                                </div>
                                @Html.ValidationMessageFor(m => m.DateOfInactivation)
                            </div>

                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group" id="sandbox-container">

                                <label>@Html.LabelFor(model => model.DateOfInactivation, "To Date Of Inactivation")</label>
                                @{
                                    string dtToDateOfInactivation = "";
                                    if (Model != null)
                                    {
                                        dtToDateOfInactivation = InsiderTrading.Common.Common.ApplyFormatting(Model.DateOfInactivation, InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                    }
                                }
                                <div class="input-group date">
                                    @Html.TextBoxFor(m => m.DateOfInactivation, dtToDateOfInactivation, new { @class = "form-control", id = "24", gridtype = ViewBag.GridType })
                                    <span class="input-group-addon"><i class="icon icon-calender"></i></span>
                                </div>
                                @Html.ValidationMessageFor(m => m.DateOfInactivation)
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div role="form">
                                <button type="button" class="btn btn-success" id="btnEmployeeSearch"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                <button type="reset" class="btn btn-success" dt_name="btnReset" dt_gridtype="@ViewBag.GridType"><i class="fa fa-undo"></i> @InsiderTrading.Common.Common.getResource("com_btn_14006")</button>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <div class="div-spacer"></div><br />
    <div class="alert" style="display: none;" name="ErrorMessage" gridtype="@ViewBag.GridType"></div>
    @using (Html.BeginForm("", "", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmUserSeparation", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @*@Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })*@
        <div class="col-xs-12 row">
            @{Html.RenderAction("Index", "DatatableGrid", new { type = @InsiderTrading.Common.ConstEnum.GridType.UserSeparationList, btnSearch = "btnEmployeeSearch", sSortCol = "1", acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_USERSEPARATION_VIEW });}
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            @*<a class="btn btn-success" id="btnUploadSeparation" href="#" gridtype="@InsiderTrading.Common.ConstEnum.GridType.UserSeparationList" role="button">@InsiderTrading.Common.Common.getResource("com_btn_14017")</a>*@
            <a class="btn btn-success" href='@Url.Action("Index", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_VIEW })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14011")</a>
        </div>
    }
    @Html.Hidden("SaveUserSeparation", Url.Action("SaveUserSeparation", "Employee"))
    @Html.Hidden("SeparationACID", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_USERSEPARATION_CREATE)
    @Scripts.Render("~/bundles/employee")
</section>

@Html.Hidden("Edit", "#", new { name = "EditSeparationURL", @class = "gridtypecontrol", ctrtype = "link", gridtype = @ViewBag.GridType, gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'','data-toggle':'modal','data-target':'#myModalSeparation','class':'display-icon icon icon-edit','name': 'EditSeparation','ID':'EditSeparation','UserInfoId':'<UserInfoID>','href':'javascript:void(0,<UserInfoID>);'}" })


<div class="modal fade" id="myModalSeparation" tabindex="-1" role="dialog" aria-labelledby="myModalSeparationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>
