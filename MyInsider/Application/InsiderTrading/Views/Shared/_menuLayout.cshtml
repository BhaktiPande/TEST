@*@using InsiderTrading.Common*@

@using InsiderTrading.Common

<section class="sidebar">
    @{
        var ChangePwdFlag = ViewBag.IsChangePassword;
        List<InsiderTradingDAL.MenuMasterDTO> menuList = ViewBag.Menu;
    }
    <ul class="sidebar-menu">
        @{ foreach (var mp in menuList.Where(p => p.ParentMenuID == 0))
         {
            <li class="treeview" id="@mp.MenuID-MENU">
                @{if (@mp.MenuURL != null && @mp.MenuURL != "")
                {
                    <a href="@MenuURl(mp.MenuURL).GetValue(2).ToString()">
                        <i class='@mp.ImageURL'></i>
                        <span>@mp.MenuName</span>
                        <i class=""></i>
                    </a>
                }
                else
                {
                    <a href="#">
                        <i class='@mp.ImageURL'></i>
                        <span>@mp.MenuName</span>
                        <i class="fa fa-angle-right pull-right"></i>
                    </a>
                }
                }

                @{if (menuList.Count(p => p.ParentMenuID == mp.MenuID) > 0)
                {

                    @:<ul class="treeview-menu" style="display: none;" id="@mp.MenuID-MENU-@mp.MenuID-MENU">
                        }
                }
                @RenderMenuItem(menuList, mp)
                @{if (menuList.Count(p => p.ParentMenuID == mp.MenuID) > 0)
                {
                    @:</ul>
                        }
                }
            </li>
         }
        }
        <li><a href="@Url.Action("LogOut", "Account")"><i class="fa fa-sign-out"></i> Log out</a></li>
    </ul>

    @helper RenderMenuItem(List<InsiderTradingDAL.MenuMasterDTO> menuList,
InsiderTradingDAL.MenuMasterDTO mi)
{
    foreach (var cp in menuList.Where(p => p.ParentMenuID == mi.MenuID))
    {
        @:<li class="list" id="@cp.MenuID-@mi.MenuID">
        if (menuList.Count(p => p.ParentMenuID == cp.MenuID) > 0)
        {
            <a href="#">@cp.MenuName<i class="fa fa-angle-right pull-right"></i></a>
        }
        else
        {
            <a href="@MenuURl(cp.MenuURL).GetValue(2).ToString()">@cp.MenuName<i class=""></i></a>
        }

        if (menuList.Count(p => p.ParentMenuID == cp.MenuID) > 0)
        {
            @:<ul class="treeview-menu">
        }

        @RenderMenuItem(menuList, cp)

        if (menuList.Count(p => p.ParentMenuID == cp.MenuID) > 0)
        {
            @:</ul>
        }
        else
        {
            @:</li>
        }
    }
}

    @functions{
        public string[] MenuURl(string cp)
        {
            string controller = "";
            string action = "";
            string MenuUrl = cp;
            string[] returnArray = new string[3];
            if (ViewBag.IsChangePassword == false)
            {
                if (MenuUrl == null || MenuUrl == "")
                {
                    MenuUrl = "/Error/UnderConstruction";
                }
                if (MenuUrl != null || MenuUrl != "")
                {
                    if (MenuUrl.Contains('/'))
                    {
                        var urlArray = MenuUrl.Split(new string[] { "/" }, StringSplitOptions.RemoveEmptyEntries);
                        controller = urlArray[0];
                        action = urlArray[1];

                        if (urlArray[1].Contains('?'))
                        {
                            var a = urlArray[1].Split(new string[] { "?" }, StringSplitOptions.RemoveEmptyEntries);
                            MenuUrl = Url.Action(a[0], controller) + "?" + a[1];
                        }
                        else
                        {
                            MenuUrl = Url.Action(action, controller);
                        }
                    }
                }
            }
            else {
                    MenuUrl= "";
            }
            returnArray[0] = controller;
            returnArray[1] = action;
            returnArray[2] = MenuUrl;
            return returnArray;
        }
    }
</section>
<input type="hidden" id="ParentID" />

<script type="text/javascript">
    if (!String.prototype.startsWith) {
        String.prototype.startsWith = function (str) {
            return !this.indexOf(str);
        }
    }
    /*The code to remove the href attribute and bind the click event for the corresponding link will be done in release mode only.*/
    function removeLink() {
        if ("@HttpContext.Current.IsDebuggingEnabled" != "True") {
            $("a[href]").each(function() {
                var link = $(this).attr("href");
                if (link != 'javascript: void(0)' && link != '#' && link != '' && !link.startsWith('#') && !link.startsWith('javascript')) {
                    $(this).attr("href","javascript: void(0)")
                    $(this).click(function () {
                        window.location.href = link;
                    });
                }
            });
        }
    }
    function removeLinkInGrid(element) {
        if ("@HttpContext.Current.IsDebuggingEnabled" != "True") {
            $(element).find("a[href]").each(function () {
                var link = $(this).attr("href");
                if (link != 'javascript: void(0)' && link != '#' && link != '' && !link.startsWith('#') && !link.startsWith('javascript')) {
                    $(this).attr("href", "javascript: void(0)")
                    $(this).click(function () {
                        window.location.href = link;
                    });
                }
            });
        }
    }

    $(document).ready(function () {
        removeLink();


        $(document).delegate('.treeview', 'click', function (event) {
            var id = $(event.currentTarget).attr('id');
            $.ajax({
                url: '@Url.Action("SetSession","Menu")',
                type: 'post',
                headers: getRVToken(),
                data: { "SelectedParentId": id },
                success: function (response) {
                },
                error: function () {
                    //  alert("Error occured!");
                }
            });
            if (id == "50-MENU" || id == "41-MENU" || id == "43-MENU" || id == "62-24")
            {
                $.ajax({
                url: '@Url.Action("ClearPreClrList", "Menu")',
                type: 'post',
                headers: getRVToken(),
                async: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                },
                error: function () {
                }
                });
            }
            });

        $(document).delegate('.list', 'click', function (event) {
            var id = $(event.currentTarget).attr('id');
            $.ajax({
                url: '@Url.Action("SetChildSession", "Menu")',
                type: 'post',
                headers: getRVToken(),
                data: { "SelectedChildId": id },
                success: function (response) {
                },
                error: function () {
                    //  alert("Error occured!");
                }
            });
            if (id == "30-22" || id == "27-24" || id == "38-36" || id == "37-36" || id == "2-1" || id == "3-1" || id == "29-22" || id == "58-22" || id == "48-5") {
                $.ajax({
                    url: '@Url.Action("ClearPreClrList", "Menu")',
                    type: 'post',
                    headers: getRVToken(),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                    },
                    error: function () {
                    }
                });
            }
            event.stopPropagation();
        });

        $(function () {
            $.ajax({
                url: '@Url.Action("GetSelectedMenu", "Menu")',
                type: 'post',
                headers: getRVToken(),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    try {
                        if (response.SelectedParentID != null && response.SelectedParentID != "") {
                            $("#" + response.SelectedParentID).attr("class", "treeview active");
                            $("#" + response.SelectedParentID + "-" + response.SelectedParentID).attr("style", "display:block");
                            $("#" + response.SelectedParentID + "-" + response.SelectedParentID).attr("class", "treeview-menu menu-open");
                        
                            $("#" + response.SelectedChildId).attr("class", "list active");
                            $("#" + response.SelectedChildId).parents(".treeview-menu").attr("class", "treeview-menu menu-open");
                            $("#" + response.SelectedChildId).parents(".list").attr("class", "list active");
                       
                        }
                    } catch (e) { }
                },
                error: function () {
                  //  alert("Error occured!");
                }
            });
        });
    });

    function classStartsWith(str) {
        return $('div').map(function (i, e) {
            var classes = e.className.split(' ');
            for (var i = 0, j = classes.length; i < j; i++) {
                if (classes[i].substr(0, str.length) == str) return e;
            }
        }).get();
    }

</script>
@*@Scripts.Render("~/bundles/jqueryjson")*@

