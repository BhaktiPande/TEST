@model InsiderTrading.Models.TradingPolicyModel
@{
    ViewBag.Title = "_ContinuousDisclosureRequired";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    @Html.AntiForgeryToken()
</section>

<div class="row">
    <div class="col-lg-5 col-md-5 col-sm-6 col-xs-12">
        <div class="form-group">
            @Html.LabelFor(m => m.StExTradePerformDtlsSubmitToCOByInsdrLimit, new { @class = "normalLable" })
        </div>
    </div>
    <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
        <div class="form-group">
            @Html.TextBoxFor(m => m.StExTradePerformDtlsSubmitToCOByInsdrLimit, @InsiderTrading.Common.Common.IsTradingPolicyEdit("TextNumber", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId))
        </div>
    </div>
    <div class="col-lg-5 col-md-5 col-sm-6 col-xs-12">
        <div class="form-group">
            <label class="normalLable">@InsiderTrading.Common.Common.getResource("rul_lbl_15183")</label>
            @Html.ValidationMessageFor(m => m.StExTradePerformDtlsSubmitToCOByInsdrLimit)
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-5 col-md-5 col-sm-6 col-xs-12">
        <div class="form-group">
            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15187"), new { @class = "control-label text-left" })
        </div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
        <div class="form-group">
            <label class="radio-inline" for="radios-0">
                @Html.RadioButtonFor(model => model.StExSubmitTradeDiscloAllTradeFlag, "True", Model.StExSubmitTradeDiscloAllTradeFlag == true ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15169")
            </label>
            <label class="radio-inline" for="radios-1">
                @Html.RadioButtonFor(model => model.StExSubmitTradeDiscloAllTradeFlag, "False", Model.StExSubmitTradeDiscloAllTradeFlag == false ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15170")

            </label>
        </div>
    </div>
</div>
<div id="DivContinuousLimits">
    @{
        if (!Model.StExSubmitTradeDiscloAllTradeFlag)
        {
            @Html.Partial("~/Views/TradingPolicy/_ContinuousLimits.cshtml")
        }
    }
</div>
<div class="row">
    <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
        <div class="form-group">
            @Html.Label(InsiderTrading.Common.Common.getResource("rul_lbl_15193"), new { @class = "control-label text-left" })
        </div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
        <div class="form-group">
            <label class="radio-inline" for="radios-0">
                @Html.RadioButtonFor(model => model.StExSubmitDiscloToStExByCOFlag, "True", Model.StExSubmitDiscloToStExByCOFlag == true ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15176")
            </label>
            <label class="radio-inline" for="radios-1">
                @Html.RadioButtonFor(model => model.StExSubmitDiscloToStExByCOFlag, "False", Model.StExSubmitDiscloToStExByCOFlag == false ? @InsiderTrading.Common.Common.IsTradingPolicyEdit("Radio", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId) : @InsiderTrading.Common.Common.IsTradingPolicyEdit("RadioNull", Model.ApplicableFromDate, Model.TradingPolicyStatusCodeId)) @InsiderTrading.Common.Common.getResource("rul_lbl_15177")
            </label>
            @Html.HiddenFor(model => model.StExSubmitDiscloToStExByCOFlag)
        </div>
    </div>
    <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12">
        <div class="form-group">
            <label style="font-style:italic" class="normalLable">@InsiderTrading.Common.Common.getResource("rul_lbl_15178")</label>
            <label class="radio-inline" for="radios-1">
                @Html.CheckBox("StExSubmitDiscloToStExByCOHardcopyFlag_disable", true, new { @disabled = "disabled", @class = "cr-check" })
                @Html.LabelFor(m => m.StExSubmitDiscloToStExByCOHardcopyFlag, new { @class = "normalLable" })
                @Html.HiddenFor(m => m.StExSubmitDiscloToStExByCOHardcopyFlag)
            </label>
        </div>
    </div>
</div>
<div id="DivConDisSubmissionStockExchange">
@{
    if (Model.StExSubmitDiscloToStExByCOFlag)
    {
        @Html.Partial("~/Views/TradingPolicy/_ContinuousDisclosureSubmissionStockExchange.cshtml")
    }
}
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $(':radio[name="StExSubmitTradeDiscloAllTradeFlag"]').change(function () {
            var values = $("#frmTradingPolicy").serializeArray();
            values.push({
                name: "acid",
                value: $("#TradingPolicyUserAction").val()
            });
            var a = $(this).filter(':checked').val();
            if (a == 'False') {
                if ($('input:radio[name=TradingPolicyForCodeId]').filter(":checked").val() == 135001) {
                    if ($("#AutoSubmitTransaction").val() == 178001) {
                        $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("disabled", false);
                    } else {
                        $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("checked", $('#MultipleTransactionTrade').val());
                        $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').attr("disabled", true);
                    }
                    $(':radio[name="StExForAllSecuritiesFlag"]').attr("disabled", false);
                    $('#lblSingleTransactionTrade').removeClass("TextGray");
                } else if ($('input:radio[name=TradingPolicyForCodeId]').filter(":checked").val() == 135002) {
                    $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("checked", $('#MultipleTransactionTrade').val());
                    $('#lblSingleTransactionTrade').addClass("TextGray");
                   $.ajax({
                        url: $("#RadioButtonChangeTransaction").val(),
                        type: 'post',
                        headers: getRVToken(),
                        cache: false,
                        data: values,
                        success: function (result) {
                            $('#SingleTransactionDiv').html(result);
                        },
                        error: function (result) {
                        }
                    });
                   
                    $(':radio[name="StExForAllSecuritiesFlag"]').attr("disabled", false);
                }
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').attr("disabled", true);
                $('#lblSingleTransactionTrade').addClass("TextGray");
                $.ajax({
                    url: $("#ContinuousLimitsURL").val(),
                    type: 'post',
                    headers: getRVToken(),
                    cache: false,
                    data: values,
                    success: function (result) {
                        $('#DivContinuousLimits').html(result);
                    },
                    error: function (result) {
                    }
                });
               
                $.ajax({
                    url: $("#ContinousSecurityFlagChange").val(),
                    type: 'post',
                    headers: getRVToken(),
                    cache: false,
                    data: values,
                    success: function (result) {
                        $('#ContinousSecuritywiseLimitList').html(result);
                    },
                    error: function (result) {
                    }
                });
            }
            else {
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').attr("disabled", true);
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("checked", null);
                $(':radio[name="StExForAllSecuritiesFlag"]').attr("disabled", true);
                $(':radio[name="StExForAllSecuritiesFlag"]').prop("checked", null);
                $('#SingleTransactionDiv').empty();
                $('#DivYearType').empty();
                $('#DivContinuousLimits').html("");
                $('#ContinousSecuritywiseLimitList').empty();
            }
        });


        $(function () {
            var values = $("#frmTradingPolicy").serializeArray();
            values.push({
                name: "acid",
                value: $("#TradingPolicyUserAction").val()
            });
 
            if ($('input:radio[name=StExSubmitTradeDiscloAllTradeFlag]').filter(":checked").val() == 'False') {
                $.ajax({
                    url: $("#ContinuousLimitsURL").val(),
                    type: 'post',
                    headers: getRVToken(),
                    cache: false,
                    data: values,
                    success: function (result) {
                        $('#DivContinuousLimits').html(result);
                    },
                    error: function (result) {
                    }
                });
            }

            if ($('input:radio[name=StExSubmitTradeDiscloAllTradeFlag]').filter(":checked").val() == 'False'
                && $('input:radio[name=TradingPolicyForCodeId]').filter(":checked").val() == 135001) {
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("disabled", false);
                $(':radio[name="StExForAllSecuritiesFlag"]').attr("disabled", false);
                $('#lblSingleTransactionTrade').removeClass("TextGray");
            }
            else if ($('input:radio[name=StExSubmitTradeDiscloAllTradeFlag]').filter(":checked").val() == 'False'
                && $('input:radio[name=TradingPolicyForCodeId]').filter(":checked").val() == 135002) {
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("checked", $('#MultipleTransactionTrade').val());
                $.ajax({
                    url: $("#RadioButtonChangeTransaction").val(),
                    type: 'post',
                    headers: getRVToken(),
                    cache: false,
                    data: values,
                    success: function (result) {
                        $('#SingleTransactionDiv').html(result);
                    },
                    error: function (result) {
                    }
                });
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').attr("disabled", true);
                $('#lblSingleTransactionTrade').addClass("TextGray");
            }
            else {
               
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').attr("disabled", true);
                $(':radio[name="StExSingMultiTransTradeFlagCodeId"]').prop("checked", null);
                $(':radio[name="StExForAllSecuritiesFlag"]').attr("disabled", true);
                $(':radio[name="StExForAllSecuritiesFlag"]').prop("checked", null);
          
            }
                if ($('input:radio[name=StExSubmitDiscloToStExByCOFlag]').filter(":checked").val() == 'False') {
                    $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').attr("disabled", true);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').attr("disabled", true);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').prop("checked", null);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').prop("checked", null);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag_disable"]').prop("checked", null);
                    $("input[name='StExSubmitDiscloToStExByCOHardcopyFlag']").val("false");

                } else {
                    $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').prop("checked", true);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').attr("disabled", true);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').attr("disabled", true);
                    $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag_disable"]').prop("checked", true);
                    $("input[name='StExSubmitDiscloToStExByCOHardcopyFlag']").val("true");
                }
               
        });

        $(':radio[name="StExSubmitDiscloToStExByCOFlag"]').change(function () {
            var a = $(this).filter(':checked').val();
            var values = $("#frmTradingPolicy").serializeArray();
            values.push({
                name: "acid",
                value: $("#TradingPolicyUserAction").val()
            });
            if (a == 'True') {
                $('#DivConDisSubmissionStockExchange').html("");
                $.ajax({
                    url: $("#ContinuousDisclosureSubmissionStockExchangeURL").val(),
                    type: 'post',
                    headers: getRVToken(),
                    cache: false,
                    data: values,
                    success: function (result) {
                        $('#DivConDisSubmissionStockExchange').html(result);
                    },
                    error: function (result) {
                    }
                });
            } else {
                $('#DivConDisSubmissionStockExchange').empty();
            }
        });

        $(':radio[name="StExSubmitDiscloToStExByCOFlag"]').change(function () {
            var a = $(this).filter(':checked').val();
            if (a == 'True') {
                $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').prop("checked", true);
                $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').prop("disabled", true);
                $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').prop("disabled", true);
                $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag_disable"]').prop("checked", true);
                $("input[name='StExSubmitDiscloToStExByCOHardcopyFlag']").val("true");
            }
            else {
                $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').attr("disabled", true);
                $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').attr("disabled", true);
                $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').prop("checked", null);
                $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').prop("checked", null);
                $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag_disable"]').prop("checked", null);
                $("input[name='StExSubmitDiscloToStExByCOHardcopyFlag']").val("false");
            }
        });
        
        $(':checkbox[name="StExSubmitDiscloToStExByCOHardcopyFlag"]').change(function () {

            if ($(this).is(":checked")) {
                $(':checkbox[name="StExSubmitDiscloToStExByCOSoftcopyFlag"]').prop("checked", true);
            }
        });

        });
   
        function securityRadioButtonChange() {
            var value = $('input:radio[name=StExForAllSecuritiesFlag]').filter(":checked").val();//  $('input:radio[name=]:checked').val();
            var values = $("#frmTradingPolicy").serializeArray();
            values.push({
                name: "acid",
                value: $("#TradingPolicyUserAction").val()
            });
            if (value != 'null') {
                $('#ContinousSecuritywiseLimitList').html("");
                $.ajax({
                    url: $("#ContinousSecurityFlagChange").val(),
                    type: 'post',
                    headers: getRVToken(),
                    cache: false,
                    data: values,
                    success: function (result) {
                        $('#ContinousSecuritywiseLimitList').html(result);
                    },
                    error: function (result) {
                    }
                });
            }
        }


    
 </script> 

@Html.Hidden("ContinousSecurityFlagChange", Url.Action("ContinousSecurityFlagChange", "TradingPolicy"))
@Html.Hidden("RadioButtonChangeTransaction", Url.Action("RadioButtonChangeTransaction", "TradingPolicy"))
@Html.Hidden("ContinuousLimitsURL", Url.Action("ContinuousLimitsURL", "TradingPolicy"))