@model InsiderTrading.Models.NotificationModelSearchViewModel

@{
    ViewBag.Title = InsiderTrading.Common.Common.getResource("cmu_ttl_18046");
}
<script>
    $(document).ready(function () {


    });
</script>
<section class="content-header">
    @Html.AntiForgeryToken()
    <h1>@InsiderTrading.Common.Common.getResource("cmu_ttl_18046")</h1>
</section>

<section class="content search" gridtype="@ViewBag.GridType">
    @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
    <button type="button" data-toggle="collapse" class="btn btn-success" data-target="#filter-panel">
        <i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")
    </button>
    <form method="post">
        <div id="filter-panel" class="collapse filter-panel">
            <br />
            <div class="col-lg-12">
                <div class="card panel-default ">

                    <input type="hidden" value="@ViewBag.UserId" id="1" />
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Subject)
                                    @Html.TextBoxFor(m => m.Subject, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "3" })
                                    @Html.ValidationMessageFor(m => m.Subject)
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Contents)
                                    @Html.TextBoxFor(m => m.Contents, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "4" })
                                    @Html.ValidationMessageFor(m => m.Contents)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <!-- /.col-lg-3  -->
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ModeCodeId)
                                    @Html.DropDownListFor(m => m.ModeCodeId, new SelectList(ViewBag.ModeCodeList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "2" })
                                </div>
                            </div>
                            <!-- /.col-lg-3  -->
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group" id="sandbox-container">

                                    <label>@Html.LabelFor(model => model.FromDate)</label>
                                    @{
                                        string dtFromDate = "";
                                        if (Model != null)
                                        {
                                            dtFromDate = InsiderTrading.Common.Common.ApplyFormatting(Model.FromDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                    }
                                    <div class="input-group date">
                                        @Html.TextBoxFor(m => m.FromDate, dtFromDate, new { @class = "form-control", id = "5", gridtype = ViewBag.GridType })
                                        <span class="input-group-addon"><i class="icon icon-calender"></i></span>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.FromDate)
                                </div>

                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group" id="sandbox-container">

                                    <label>@Html.LabelFor(model => model.ToDate)</label>
                                    @{
                                        string dtToDate = "";
                                        if (Model != null)
                                        {
                                            dtToDate = InsiderTrading.Common.Common.ApplyFormatting(Model.ToDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                    }
                                    <div class="input-group date">
                                        @Html.TextBoxFor(m => m.FromDate, dtToDate, new { @class = "form-control", id = "6", gridtype = ViewBag.GridType })
                                        <span class="input-group-addon"><i class="icon icon-calender"></i></span>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.ToDate)
                                </div>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <button type="button" id="btnSearch" class="btn btn-success"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                <button type="button" dt_name="btnReset" dt_gridtype="@ViewBag.GridType" class="btn btn-success"><i class="fa fa-undo"></i>@InsiderTrading.Common.Common.getResource("com_btn_14006")</button>
                            </div>
                        </div>
                    </div>
                    <!-- /.panel-body -->
                </div>
                <!-- /.panel -->
            </div>
            <!-- /.col-lg-12 -->
        </div>
    </form>
    <div class="div-spacer"></div><br />

    @*<div id="divPartialCreateView">
            @{
                Html.RenderPartial("PartialCreate", Model);
            }
        </div>*@

<div class="col-xs-12 row">
    @if (ViewBag.CalledFrom == "OS")
    {

        <input type="hidden" value="OS" id="4" />
        { Html.RenderAction("Index", "DatatableGrid", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_LIST_RIGHT, type = @ViewBag.GridType, btnSearch = "btnSearch", sSortCol = "0" }); }
        {
            if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_VIEW_RIGHT))
            {
                @Html.Hidden("View", Url.Action("View", "Notification", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_VIEW_RIGHT }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("View", "Notification", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_VIEW_RIGHT }) + "&NotificationId=<NotificationQueueId>','class':'display-icon icon icon-eye'}" })

            }
        }
    }
    else
    {
        { Html.RenderAction("Index", "DatatableGrid", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_LIST_RIGHT, type = @ViewBag.GridType, btnSearch = "btnSearch", sSortCol = "0" }); }
        {
            if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_VIEW_RIGHT))
            {
                @Html.Hidden("View", Url.Action("View", "Notification", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_VIEW_RIGHT }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("View", "Notification", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NOTIFICATION_VIEW_RIGHT }) + "&NotificationId=<NotificationQueueId>','class':'display-icon icon icon-eye'}" })

            }
        }
    }


    <div class="div-spacer"></div><br /><br /><br /><br />

    <div class="div-spacer"></div>
</div>


</section>
