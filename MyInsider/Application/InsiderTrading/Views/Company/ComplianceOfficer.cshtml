@model InsiderTrading.Models.CompanyComplianceOfficerModel
@{
    ViewBag.Title = "ComplianceOfficer";
}
<div class="panel-body search" gridtype="@ViewBag.GridType">
    <input type="hidden" value="@ViewBag.Param1" id="1" gridtype="@ViewBag.GridType" />
    <input type="hidden" name="CompanyId" value="@ViewBag.CompanyId" />
    @using (Html.BeginForm("", "", new { ReturnUrl = ViewBag.ReturnUrl,formId = InsiderTrading.Common.ConstEnum.Code.frmSaveComplianceOfficer }, FormMethod.Post, new { @class = "", role = "form", id = "frmComplianceOfficer", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ComplianceOfficerName)
                        @Html.TextBoxFor(m => m.ComplianceOfficerName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ComplianceOfficerName)
                    </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                       @Html.LabelFor(m => m.PhoneNumber)
                       @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                       @Html.ValidationMessageFor(m => m.PhoneNumber)
                    </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EmailId)
                        @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.EmailId)
                    </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.DesignationId)
                        @Html.DropDownListFor(m => m.DesignationId, new SelectList(ViewBag.DesignationList, "Key", "Value", ""), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DesignationId)
                    </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="form-group" id="sandbox-container">
                    @Html.LabelFor(m => m.ApplicableFromDate)
                    @{
        string ApplicableFromDate = "";
        if (Model != null)
        {
            ApplicableFromDate = InsiderTrading.Common.Common.ApplyFormatting(Model.ApplicableFromDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

        }
                    }
                    <div class="input-group date" id="ApplicableFrom">
                        @Html.TextBox("ApplicableFromDate", ApplicableFromDate, null, new { @class = "form-control" })

                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(m => m.ApplicableFromDate)
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="form-group" id="sandbox-container">
                    @Html.LabelFor(m => m.ApplicableToDate)
                    @{
        string ApplicableToDate = "";
        if (Model != null)
        {
            ApplicableToDate = InsiderTrading.Common.Common.ApplyFormatting(Model.ApplicableToDate, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

        }
                    }
                    <div class="input-group date" id="ApplicableTo">
                        @Html.TextBox("ApplicableToDate", ApplicableToDate, null, new { @class = "form-control" })

                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(m => m.ApplicableToDate)
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.StatusCodeId)
                        @Html.DropDownListFor(m => m.StatusCodeId, new SelectList(ViewBag.StatusList, "Key", "Value", ""), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.StatusCodeId)
                    </div>
            </div>
        </div>
         @Html.HiddenFor(m => m.CompanyId)
         @Html.HiddenFor(m => m.CompanyComplianceOfficerId)
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
            @{
                if (ViewBag.CalledFrom == "Edit")
                {
                        <button type="button" class="btn btn-success" name="SaveComplianceOfficer" id="btnSaveComplianceOfficer"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("com_btn_14019")</button>
                }
            }
                <a class="btn btn-success cancel" href='@Url.Action("Index", "Company", new { acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_VIEW})' role="button"><i class="fa fa-times"></i> @InsiderTrading.Common.Common.getResource("com_btn_14011")</a>
            </div>
        </div>
       
        <br>
         <div class="div-spacer"></div>

        Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, btnSearch = "", sSortCol = "0", acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_VIEW });
    }

    </div>
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/Company")
@Scripts.Render("~/bundles/CompareDateAnnotation")
@Scripts.Render("~/bundles/JqueryConfirm")
@Scripts.Render("~/bundles/jQueryFixes")
<script src="~/Scripts/dist/js/custom.js"></script>
@Html.Hidden("SaveComplianceOfficer", Url.Action("SaveComplianceOfficer", "Company"))
@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.COMPANY_EDIT) && ViewBag.CalledFrom == "Edit")
{
      @Html.Hidden("EditComplianceOfficer", Url.Action("EditComplianceOfficer", "Company", new { acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_EDIT }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{ 'CompanyComplianceOfficerId':'<CompanyComplianceOfficerId>','text':'','href':'javascript:void(0);','class':'display-icon icon icon-edit btnEditComplianceOfficer'}" })
}
@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.COMPANY_EDIT) && ViewBag.CalledFrom == "Edit")
{
     @*@Html.Hidden("deleteRowURL", Url.Action("DeleteComplianceOfficer", "Company", new { acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_EDIT, CompanyId = @ViewBag.CompanyID }), new { name = "deleteRowURL", gridtype = @ViewBag.GridType, @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{ 'name': 'deleteRow','ID':'CompanyComplianceOfficerId','key':'<CompanyComplianceOfficerId>','CompanyComplianceOfficerId':'<CompanyComplianceOfficerId>','text':'','href':'javascript:void(0);','class':'display-icon icon icon-delete btnDeleteComplianceOfficer'}" })*@
    @Html.Hidden("deleteRowURL", Url.Action("DeleteComplianceOfficer", "Company", new { acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_EDIT, CompanyId = @ViewBag.CompanyID }), new { @class = "gridtypecontrol", ctrtype = "link", gridtype = @ViewBag.GridType, gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'', 'href':'javascript:void(0);', 'name':'deleteRow', 'queryString':'[ {ID:\"CompanyComplianceOfficerId\", key:\"<CompanyComplianceOfficerId>\"},{ID:\"formId\", key:\"103\"} ]', 'class':'display-icon icon icon-delete btnDeleteComplianceOfficer'}" })
}

