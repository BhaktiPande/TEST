
@model InsiderTrading.Models.CompanyModel
@{
    ViewBag.Title = "ViewCompanyInfo";
}
@{
    if (Model != null && Model.IsImplementing == true)
    {
        <div class="panel-body">
            @using (Html.BeginForm("SaveCompany", "Company", new { ReturnUrl = ViewBag.ReturnUrl, formId = 63 }, FormMethod.Post, new { @class = "", role = "form", @autocomplete = "off", id = "frmBasicInfo" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CompanyName)
                            @Html.DisplayFor(m => m.CompanyName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CompanyName)
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Address)
                            @Html.DisplayFor(m => m.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Address)
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Website)
                            @Html.DisplayFor(m => m.Website, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Website)
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.CompanyId)
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.EmailId)
                            @Html.DisplayFor(m => m.EmailId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.EmailId)
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ISINNumber)
                            @Html.DisplayFor(m => m.ISINNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ISINNumber)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                      
                        <button type="submit" name="Cancel" class="btn btn-success cancel" id="cancelButton" data-dismiss="modal"><i class="fa fa-times"></i> @InsiderTrading.Common.Common.getResource("com_btn_14011")</button>
                    </div>
                </div>
                <input type="hidden" name="authorization" value="SaveCompany:@InsiderTrading.Common.ConstEnum.UserActions.COMPANY_CREATE,DeleteCompany:@InsiderTrading.Common.ConstEnum.UserActions.COMPANY_DELETE" />
                @Html.HiddenFor(m => m.CompanyId)
                @Html.HiddenFor(m => m.IsImplementing)
                <input type="hidden" id="successmsg" name="successmsg" value="@ViewBag.Success" />
            }
        </div>
    }
    else
    {
        using (Html.BeginForm("SaveCompany", "Company", new { ReturnUrl = ViewBag.ReturnUrl, formId = 63 }, FormMethod.Post, new { @class = "", role = "form", @autocomplete = "off", id = "frmBasicInfo" }))
        {
            <section class="content-header">
                <h1>@InsiderTrading.Common.Common.getResource("cmp_ttl_13086")</h1>
            </section>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
            <section class="content">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="panel panel-default">
                            <div class="panel-body">

                                <div class="row">
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CompanyName)
                                            @Html.DisplayFor(m => m.CompanyName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CompanyName)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Address)
                                            @Html.DisplayFor(m => m.Address, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Address)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Website)
                                            @Html.DisplayFor(m => m.Website, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Website)
                                        </div>
                                    </div>
                                    @Html.HiddenFor(m => m.CompanyId)
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmailId)
                                            @Html.DisplayFor(m => m.EmailId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.EmailId)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <button type="submit" name="Cancel" class="btn btn-success cancel" id="cancelButton" data-dismiss="modal"><i class="fa fa-times"></i>  @InsiderTrading.Common.Common.getResource("com_btn_14011")</button>
                                    </div>
                                </div>
                                <input type="hidden" name="authorization" value="SaveCompany:@InsiderTrading.Common.ConstEnum.UserActions.COMPANY_CREATE,DeleteCompany:@InsiderTrading.Common.ConstEnum.UserActions.COMPANY_DELETE" />
                                @Html.HiddenFor(m => m.CompanyId)
                                @Html.HiddenFor(m => m.IsImplementing)
                                @Html.HiddenFor(m => m.ISINNumber)
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        }
    }
}
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/Company")
@Scripts.Render("~/bundles/JqueryConfirm")
@Scripts.Render("~/bundles/Messages")
@Html.Hidden("SaveBasicInfo", Url.Action("SaveImplementingCompanyBasinInfo", "Company"))
@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.COMPANY_DELETE))
{
    @*@Html.Hidden("DeleteFromGrid", Url.Action("DeleteFromGrid", "Company", new { acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_DELETE }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'CompanyName':'<cmp_grd_13001>','CompanyId':'<CompanyId>','text':'','href':'javascript:void(0);','class':'display-icon icon icon-delete btnDeleteCompany'}" })*@
    @Html.Hidden("DeleteFromGrid", Url.Action("DeleteFromGrid", "Company", new { acid = InsiderTrading.Common.ConstEnum.UserActions.COMPANY_DELETE }), new { @class = "gridtypecontrol", ctrtype = "link", gridtype = @ViewBag.GridType, gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'', 'href':'javascript:void(0);', 'name':'deleteRow', 'queryString':'[ {ID:\"CompanyName\", key:\"<cmp_grd_13001>\"},{ID:\"CompanyId\", key:\"<CompanyId>\"},{ID:\"formId\", key:\"88\"} ]', 'class':'display-icon icon icon-delete btnDeleteCompany'}" })
}

<script type="text/javascript">

    $(document).ready(function () {


        $('input,textarea', 'form').blur(function () {
            $(this).valid();

            $("#divValidationSummaryModal").removeClass("validation-summary-errors");
            $("#divValidationSummaryModal").addClass("validation-summary-valid");
        });
    });

</script>
