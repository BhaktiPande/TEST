@model InsiderTrading.Models.PreclearanceSearchViewModel
@{
    ViewBag.Title = "ListByCO";
    var searchResult = Html.Raw(Json.Encode(TempData["SearchArray"]));
}

<section class="content-header">    
    <label style="color:red;font-size:13px">@InsiderTrading.Common.Common.getResource("dis_lbl_50736")</label>
    @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
    <h1>@InsiderTrading.Common.Common.getResource("dis_ttl_17309")</h1>
</section>
<!-- Main content -->

<section class="content  search" gridtype="@ViewBag.GridType">

    <button id="searchBtn" type="button" data-toggle="collapse" class="btn btn-success" data-target="#filter-panel">
        <i class="fa fa-search"> @InsiderTrading.Common.Common.getResource("com_btn_14005")</i>
    </button>
    @{
        if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_PRECLEARANCE_REQUEST_NONIMPLEMENTATION))
        {
            if (ViewBag.COUserType == 1)
            {
                <a class="btn btn-success" href='@Url.Action("COList", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_PRECLEARANCE_REQUEST_NONIMPLEMENTATION })' role="button" title="@InsiderTrading.Common.Common.getResource("mst_lbl_50054")"><i class="fa fa-list"></i> @InsiderTrading.Common.Common.getResource("dis_btn_17511")</a>
            }
        }
    }

    <input type="hidden" gridtype="@ViewBag.GridType" />
    <input type="hidden" value="@ViewBag.UserID" id="1" gridtype="@ViewBag.GridType" />
    <form role="form">
        <div class="search" gridtype="@ViewBag.GridType" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <input type="hidden" value="@ViewBag.GroupID" id="21" name="" gridtype="@ViewBag.GridType" />
            <input type="hidden" value="@ViewBag.TransactionMasterId" id="26" name="" gridtype="@ViewBag.GridType" />
            <input type="hidden" value="@ViewBag.SecurityTypeId" id="27" name="" gridtype="@ViewBag.GridType" />
            <input type="hidden" value="@ViewBag.TransactionDate" id="28" name="" gridtype="@ViewBag.GridType" />
        </div>
        <div id="filter-panel" class="collapse filter-panel">
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17272")) 
                                        @Html.TextBoxFor(m=>m.EmployeeId, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "10" })
                                        @Html.ValidationMessageFor(m => m.EmployeeId)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17273"))
                                        @Html.TextBoxFor(m=>m.EmployeeName, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "11" })
                                        @Html.ValidationMessageFor(m => m.EmployeeName)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17274"))
                                        @*  @Html.DropDownList("Designation", new SelectList(ViewBag.TransactionTypeList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "12" })*@
                                        @Html.TextBoxFor(m=>m.Designation, "", new { @class = "form-control ui-autocomplete input", gridtype = @ViewBag.GridType, id = "12", autocomplete = "off" })
                                        @Html.Hidden("DesignationAC", "yes")
                                        @Html.Hidden("DesignantionListURL", Url.Action("GetDesignationList", "PreclearanceRequest"))
                                        @Html.ValidationMessageFor(m => m.Designation)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17275"))
                                        @Html.TextBoxFor(m=>m.PreClearanceID, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "2" })
                                        @Html.ValidationMessageFor(m => m.PreClearanceID)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17276"))
                                        @Html.DropDownListFor(m=>m.RequestStatus, new SelectList(ViewBag.RequestStatusList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "3" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17277"))
                                        @Html.DropDownListFor(m=>m.TransactionType, new SelectList(ViewBag.TransactionTypeList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "4" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17278"))
                                        @Html.DropDownListFor(m=>m.TradeDetails, new SelectList(ViewBag.TradeDetailsList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "7" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17279"))
                                        @Html.DropDownListFor(m=>m.DisclosureDetailsSoftcopy, new SelectList(ViewBag.DisclosureDetailsList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "8" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17280"))
                                        @{
                                        string SubmissionDate = "";
                                        SubmissionDate = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.SubmissionDate, SubmissionDate, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "5" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17281"))
                                        @{
                                        string SubmissionDateTo = "";
                                        SubmissionDateTo = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.SubmissionDateTo, SubmissionDateTo, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "6" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17282"))
                                        @{
                                        string SoftcopySubmissionFromDate = "";
                                        SoftcopySubmissionFromDate = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.SoftcopySubmissionFromDate, SoftcopySubmissionFromDate, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "13" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17283"))
                                        @{
                                        string SoftcopySubmissionDateTo = "";
                                        SoftcopySubmissionDateTo = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.SoftcopySubmissionDateTo, SoftcopySubmissionDateTo, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "14" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17284"))
                                        @Html.DropDownListFor(m=>m.DisclosureDetailsHardcopy, new SelectList(ViewBag.DisclosureDetailsList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "9" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17285"))
                                        @{
                                        string hardcopySubmissionFromDate = "";
                                        hardcopySubmissionFromDate = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.hardcopySubmissionFromDate, hardcopySubmissionFromDate, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "15" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17286"))
                                        @{
                                        string HardcopySubmissionDateTo = "";
                                        HardcopySubmissionDateTo = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.HardcopySubmissionDateTo, HardcopySubmissionDateTo, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "16" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17287"))
                                        @Html.DropDownListFor(m=>m.Stockexchangesubmissionstatus, new SelectList(ViewBag.StockExchangeStatusList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "19" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17288"))
                                        @{
                                        string StockExchangesubmissionFromDate = "";
                                        StockExchangesubmissionFromDate = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.StockExchangesubmissionFromDate, StockExchangesubmissionFromDate, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "17" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group" id="sandbox-container">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17289"))
                                        @{
                                        string StockExchangesubmissionToDate = "";
                                        StockExchangesubmissionToDate = InsiderTrading.Common.Common.ApplyFormatting("", InsiderTrading.Common.ConstEnum.DataFormatType.Date);
                                        }
                                        <div class="input-group date">
                                            @Html.TextBoxFor(m=>m.StockExchangesubmissionToDate, StockExchangesubmissionToDate, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "18" })
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_50598"))
                                        @Html.TextBoxFor(m=>m.PAN, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "23" })
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_50606"))
                                        @Html.DropDownListFor(m=>m.EmployeeStatus, new SelectList(ViewBag.EmployeeStatusList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "24" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        <label>&nbsp;</label>
                                        @Html.CheckBoxFor(m=>m.ContinuousDisclosureRequired, new { @class = "Checkbox cr-check", gridtype = @ViewBag.GridType, id = "20" })
                                        &nbsp;&nbsp; @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_17310"))

                                        @*@Html.TextBox("GroupType", new {groupid=@ViewBag.Param2,id = "21" })*@
                                        @*@Html.TextBox("GroupType", 607, null, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "21" })*@

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">


                                    <button type="button" class="btn btn-success" id="btnSearch"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                    <button type="button" class="btn btn-success" id="btnReset" dt_name="btnReset" dt_gridtype="@ViewBag.GridType"><i class="fa fa-undo"></i> @InsiderTrading.Common.Common.getResource("com_btn_14006")</button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>


    <div class="div-spacer"></div>

    @if (ViewData["inp_sParam"] == null)
    {
        //Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, btnSearch = "btnSearch", sSortCol = "" });
        Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, btnSearch = "btnSearch", sSortCol = "" });
    }
    else
    {
        Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, inp_sParam = @ViewData["inp_sParam"], btnSearch = "btnSearch", sSortCol = "" });
    }

    <!--For NSE Download--->
    @{
        var User = @ViewBag.User;
        var COUser = InsiderTrading.Common.ConstEnum.Code.COUserType;
        var AdminUser = InsiderTrading.Common.ConstEnum.Code.Admin;
        var Status = InsiderTrading.Common.ConstEnum.Code.EventStatusPending;
    }

    <!--For NSE Download--->
    <div class="row" id="NSEDownloadOpt" style="display:none;">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12" id="Lbl_NSE">
                    <div class="form-group">
                        @Html.Label(@InsiderTrading.Common.Common.getResource("dis_lbl_50423"))

                    </div>
                </div>

                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12" id="DD_NSE">
                    <div class="form-group">
                        @Html.DropDownList("NSEDownloadDataOptions", new SelectList(ViewBag.NSEDownloadOptionsList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @*<button type="button" class="btn btn-success" data-toggle="modal" data-target="#myModal"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("dis_btn_50424")</button>*@
                        @*changes made by Tushar on 20170209*@
                        <button type="button" class="btn btn-success" id="btnProceed" data-toggle="modal" data-target="#myModal"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("dis_btn_50424")</button>
                    </div>
                </div>
                <div id="MSG_NSE_VAL" style="display:none;">
                    <div class="form-group">
                        @InsiderTrading.Common.Common.getResource("nse_lbl_50509")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        var is_User = "@User";
        var is_CO_User = "@COUser";
        var is_Admin_User = "@AdminUser";
        var is_Status_Pending = "@Status";

        $(document).ready(function () {            
            $("#btnSearch").click(function () {
                var Selected_Status = $("#19").val()
                if ((is_User == is_CO_User || is_User == is_Admin_User) && (Selected_Status == is_Status_Pending)) {
                    var PendingEmp = '@ViewBag.pendingEmpList';
                    if (PendingEmp != 0) {
                        $("#NSEDownloadOpt").show();
                    }
                    else {
                        $("#NSEDownloadOpt").hide();
                    }
                    $("#21").val('');
                }
                else {
                    $("#NSEDownloadOpt").hide();
                    $("#21").val('');
                }
            });
            $("#btnReset").click(function () {
                $("#NSEDownloadOpt").hide();
            });
        });
    </script>
    @if (ViewBag.GroupID != 0)
    {
        <a id="backbuttonId" class="btn btn-success" data-toggle="modal" href='@Url.Action("Index", "NSEDownload", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NSEDownload })' role="button">Back</a>   
    }
    <section class="content-header">
        <h5>PLEASE NOTE:</h5>
        <h5>
            1.In "Trading Details Submission" column, the pending days indicates the days within which this pre clearance request is required to be closed.
        </h5>
        <h5>
            2.Trade details are required to be submitted within 2 days from the date of your transaction.
        </h5>
    </section>

    <div class="div-spacer"></div><br />
    <div class="form-group">
    </div>
    <div class="div-spacer"></div>
    <input type="hidden" name="PreclearaceRequestCOUserAction" id="PreclearaceRequestCOUserAction" value="@InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE" />
    <input type="hidden" name="DisclosureActionID" id="DisclosureActionID" value="@InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE" />
    <div class="div-spacer"></div>
    <div id="divNotTradedModal" style="display:none;"></div>
</section><!-- /.content -->
@Scripts.Render("~/bundles/PreclearanceRequest")
@Html.Hidden("RejectionView", Url.Action("RejectionView", "PreclearanceRequest"))
@Html.Hidden("NotTradedView", Url.Action("NotTradedViewView", "PreclearanceRequest"))
@Html.Hidden("ApproveRejectView", Url.Action("ApproveRejectAction", "PreclearanceRequest"), new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE })

@Html.Hidden("TradingDetailsPending", Url.Action("Index", "TradingTransaction"))

@Html.Hidden("SoftcopyPending", Url.Action("CreateLetter", "TradingTransaction", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_LETTER_SUBMISSION }))
@Html.Hidden("SoftcopyView", Url.Action("ViewLetter", "TradingTransaction", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_LETTER_SUBMISSION }))

@Html.Hidden("HardcopyPending", Url.Action("UploadHardDocument", "TradingTransaction", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_LETTER_SUBMISSION }))
@Html.Hidden("HardcopyView", Url.Action("ViewHardCopy", "TradingTransaction", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_LETTER_SUBMISSION }))

@Html.Hidden("stockexchangecopylink", Url.Action("CreateLetter", "TradingTransaction", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_STOCK_EXCHANGE_SUBMISSION }))
@Html.Hidden("stockexchangecopyviewlink", Url.Action("ViewLetter", "TradingTransaction", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_STOCK_EXCHANGE_SUBMISSION }))

@Html.Hidden("NoMoreTransaction", Url.Action("NoMoreTransaction", "PreclearanceRequest"))
@Html.Hidden("Index", Url.Action("ListByCO", "PreclearanceRequest"))
@Html.Hidden("DisclosureList", Url.Action("Index", "PreclearanceRequest"), new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE })

@Html.Hidden("View", Url.Action("Create", "PreclearanceRequest", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_dis_grd_17256", param = "{'text':'<dis_grd_17256>','href':'" + Url.Action("Create", "PreclearanceRequest", new { acid = 167, CalledFrom = "View" }) + "&PreclearanceRequestId=<PreclearanceRequestId>','class':'','style':'color:blue;'}" })
@Html.Hidden("DownloadFormE", Url.Action("DownloadFormE", "PreclearanceRequest", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE })))
@Html.Hidden("SearchResult", searchResult)
@Scripts.Render("~/bundles/SearchResult")
<!--Use for Create NSEGroup Confirmation PopUp-->
<div class="container">
    @*<h2>Modal Example</h2>*@
    <!-- Trigger the modal with a button -->
    @*<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button>*@

    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    @InsiderTrading.Common.Common.getResource("nse_msg_50544")
                </div>
                <div class="modal-footer">
                    @using (Html.BeginForm("SaveNSEGroup1", "PreclearanceRequest", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CO_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE, formId = InsiderTrading.Common.ConstEnum.Code.frmSaveNseGroup}, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="SPName" id="SPName" />

                        <button type="submit" id="btnYes" class="btn btn-success">Yes</button>

                        <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        $("#22").change(function () {
            var Selected_Entry = $("#22 option:selected").val();
            $('#SPName').val(Selected_Entry);
            if (Selected_Entry == "") {

                $('#SPName').val(Selected_Entry);
                $("#MSG_NSE_VAL").show();
                $("#21").val('');
                return false;
            }
            else {

                $("#MSG_NSE_VAL").hide();
                $("#21").val('');
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $("#btnProceed").click(function () {
            var Entry_Selected = $("#22 option:selected").val();

            if (Entry_Selected == "") {
                $("#MSG_NSE_VAL").show();
                $("#21").val('');
                return false;
            }
            else {
                $("#MSG_NSE_VAL").hide();
                $("#21").val('');
                $($(this).data("target")).show();
            }
        });

    });
    if ('@ViewBag.SecurityTypeId' != 0) {
            $('#4').val('@ViewBag.TransactionTypeId');
        }
</script>

<script>
    $('#btnYes').click(function () {
        $('#myModal').modal('hide');
        $("body").addClass("loading");
    });
</script>
