@model InsiderTrading.Models.MCQModel
@{
    ViewBag.Title = "MCQ_User";
    Layout = "~/Views/Shared/_MCQLayout.cshtml";
    var counter = 1;
}
<style>
    #Wrapper {
        box-shadow: 0 0 25px #111;
        -webkit-box-shadow: 0 0 25px #111;
        -moz-box-shadow: 0 0 25px #111;
        max-width: 1380px;
    }
</style>

<section class="content">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div class="panel-group" id="accordion">
                <div class="card panel-accordion">
                    <div class="card-header active" id="Wrapper">
                        <h4 class="card-title">
                            @InsiderTrading.Common.Common.getResource("com_lbl_54095")
                        </h4>
                    </div>
                    @using (Html.BeginForm("#", "MCQSetting", new { acid = 0 }, FormMethod.Post, new { @id = "MCQQuestionsUserForm", role = "form", autocomplete = "off" }))
                    {
                        @Html.AntiForgeryToken()


                        <div class="card-body" id="Wrapper">

                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div role="form">
                                            <div class="form-group AttmptMessage">
                                                @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
                                                @*@if (@ViewBag.AttemptMessage != null && (Model.objMCQUserValidationModel.TotalAttempts >= Model.objMCQUserValidationModel.AttemptNos && Model.objMCQUserValidationModel.AttemptNos != 1 && Model.objMCQUserValidationModel.FrequencyOfMCQs != "False" && !Model.objMCQUserValidationModel.IsBlocked))
                                                {
                                                    <span style="color:red;">@ViewBag.AttemptMessage</span>
                                                }*@

                                                @*@if (@ViewBag.UserMessage != null && Model.objMCQUserValidationModel.TotalAttempts <= Model.objMCQUserValidationModel.AttemptNos)
                                                {
                                                    if (Model.objMCQUserValidationModel.ResultDuringFrequency == "522003")
                                                    {
                                                        <span style="color:red;">
                                                            @ViewBag.UserMessage
                                                        </span>
                                                    }
                                                }
                                                @if (@ViewBag.UserMessage != null && Model.objMCQUserValidationModel.IsBlocked && !(Model.objMCQUserValidationModel.TotalAttempts < Model.objMCQUserValidationModel.AttemptNos))
                                                {
                                                    if (Model.objMCQUserValidationModel.ResultDuringFrequency == "522003")
                                                    {
                                                        <span style="color:red;">
                                                            @ViewBag.UserMessage
                                                        </span>
                                                    }
                                                } 
                                                @if (@ViewBag.UserMessage != null && Model.objMCQUserValidationModel.FrequencyOfMCQs == "False")
                                                {

                                                    <span style="color:red;">
                                                        @ViewBag.UserMessage
                                                    </span>

                                                }*@
                                                @if (@ViewBag.UserMessage != null )
                                                {

                                                    <span style="color:red;">
                                                        @ViewBag.UserMessage
                                                    </span>

                                                }
                                                
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="overflow-y:auto;height:550px" id="dvMCQQue">
                                @if (Model.objMCQUserValidationModel.FrequencyOfMCQs != "False"  && Model.objMCQUserValidationModel.AttemptNos <= Model.objMCQUserValidationModel.TotalAttempts && !Model.objMCQUserValidationModel.IsBlocked)
                                {
                                    foreach (var mcq in Model.objMCQModelList)
                                    {
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                <div role="form">
                                                    <div class="form-group que_@counter">
                                                        <div>
                                                            <b> @counter . </b><b> @mcq.Question </b><br />  <br />
                                                        </div>
                                                        @foreach (var mcqAnswer in @mcq.objMCQQuestionModelAnswerList)
                                                        {
                                                            <div style="padding-left:50px">
                                                                @if (@mcq.Answer_Type == "1")
                                                                {
                                                                    @*@Html.RadioButtonFor(m => m.objMCQQuestionModel.QuestionBankDetailsID, @mcqAnswer.QuestionBankDetailsID) <lable>&nbsp;</lable>  @mcqAnswer.QuestionsAnswer  <br />*@
                                                                    @Html.RadioButton("rdo_" + @counter, @mcqAnswer.QuestionBankDetailsID, new
                                                           {
                                                               @class = "custom-radiobutton rdo_" + @counter +
                                                                   " Que_" + @mcqAnswer.QuestionID,
                                                               @value = @mcqAnswer.QuestionBankDetailsID,
                                                               @name = @counter,
                                                               data_Que = @mcqAnswer.QuestionID
                                                           })
                                                                    <lable>&nbsp;</lable>  @mcqAnswer.QuestionsAnswer  <br />
                                                                    <script>

                                                                        $(this).attr("data-Que") ;
                                                                        $("rdo_" + @counter).attr("data-Que", @mcqAnswer.QuestionID);
                                                                    </script>
                                                                }
                                                                else
                                                                {

                                                                    @*@Html.CheckBoxFor(x => x.objMCQQuestionModel.IsCheked, new { @class = "custom-checkbox", @id = "chk_" + @mcqAnswer.QuestionBankDetailsID, @value = @mcqAnswer.QuestionBankDetailsID })*@
                                                                    @Html.CheckBox("chk_" + @counter, new
                                                           {
                                                               @class = "custom-checkbox chk_" + @counter + " Que_" + @mcqAnswer.QuestionID,
                                                               @id = "chk_" +
                                                                   @mcqAnswer.QuestionBankDetailsID,
                                                               @value = @mcqAnswer.QuestionBankDetailsID,
                                                               @name = @counter,
                                                               data_Que = @mcqAnswer.QuestionID
                                                           })
                                                                    <label> &nbsp;</label> @mcqAnswer.QuestionsAnswer    <br />

                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                                        counter = counter + 1;
                                    }
                                }

                            </div>

                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="text-align:center">
                                        <div role="form">
                                            <div class="form-group">
                                                <button type="button" class="btn btn-success" id="btnMCQ_Save"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("usr_btn_54115")</button>
                                                <button type="button" class="btn btn-success" id="btnMCQ_Reset"><i class="#"></i> @InsiderTrading.Common.Common.getResource("usr_btn_54122")</button>
                                                <a id="btnDashboard" href='@Url.Action("Index", "InsiderDashboard", new { acid = InsiderTrading.Common.ConstEnum.UserActions.DASHBOARD_INSIDERUSER })' class="btn btn-success">@InsiderTrading.Common.Common.getResource("usr_btn_54149")</a>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 header">
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="text-align:left;color:red">
                                        <div role="form">
                                            <div class="form-group">

                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>


                    }

                </div>
            </div>

        </div>


    </div>



</section>
<label></label><br /><br />
<br />
<label></label><br />


<script type="text/javascript">

    $(document).ready(function () {
        var TotalAttempts=@Html.Raw(Json.Encode(Model.objMCQUserValidationModel.TotalAttempts));
        var AttemptNos=@Html.Raw(Json.Encode(Model.objMCQUserValidationModel.AttemptNos));
        var ResultDuringFrequency=@Html.Raw(Json.Encode(Model.objMCQUserValidationModel.ResultDuringFrequency));
        var FrequencyOfMCQs=@Html.Raw(Json.Encode(Model.objMCQUserValidationModel.FrequencyOfMCQs));
        var IsBlocked=@Html.Raw(Json.Encode(Model.objMCQUserValidationModel.IsBlocked));
        $("#btnMCQ_Reset").hide();
        if(IsBlocked)
        {
            $("#btnDashboard").hide();
            $("#btnMCQ_Save").hide();
            $("#btnMCQ_Reset").hide();
        }
        if(FrequencyOfMCQs=="False" || ($.trim( FrequencyOfMCQs)=="True" && AttemptNos > TotalAttempts))
        {

            $("#btnDashboard").hide();
            $("#btnMCQ_Save").hide();
            $("#btnMCQ_Reset").hide();
        }
        if (TotalAttempts < AttemptNos &&  (objMCQ_QUESTION_DTO.IsBlocked && !objMCQ_QUESTION_DTO.FirstTimeLogin) )
        {
            $("#btnMCQ_Save").hide();
        }

        if(ResultDuringFrequency=="522003")
        {
            $("#btnDashboard").hide();
        }
        else
        {
            $("#btnDashboard").show();
            $("#btnMCQ_Save").hide();
            $("#btnMCQ_Reset").hide();
        }
        $(document).delegate("#btnMCQ_Reset", "click", function () {
            window.location  = "@Url.Action("MCQ_User", "MCQsetting", new { acid=1})"
        });

        $(document).delegate("#btnMCQ_Save", "click", function () {
            var AnswerArray=[];
            debugger;
            var counter =@counter -1
            var QuestionBankDetailsIDS;
            for (var i = 1; i <= counter; i++) {

                var result= getValueUsingClass(i);
                if(result.split(',').length>1)
                {
                    for (var j = 0; j < result.split(',').length; j++) {


                        var Answer={

                            QuestionId:result.split('_')[0],
                            QuestionsAnswer:result.split(',')[j].split('_')[1],
                            CorrectAnswer:false
                        }

                        AnswerArray.push(Answer) ;
                    }
                }
                else
                {

                    var Answer={

                        QuestionId:result.split('_')[0],
                        QuestionsAnswer:result.split('_')[1],
                        CorrectAnswer:false

                    }

                    AnswerArray.push(Answer) ;
                }
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("MCQ_User", "MCQSetting")",
                data: JSON.stringify({ acid: 1, objMCQQuestionModel: AnswerArray ,AttemptNo:'@ViewBag.AttemptNo'}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    if(r.status)
                    {

                        if(r.TotalAttempts>=r.NextAttempt)
                        {
                            if(r.ResultDuringFrequency=="522002")
                            {
                                $(".AttmptMessage").html( "<div> <span style='color:green;'>" +r.SuccessMessage +" </span></div>" );
                            }
                            else
                            {
                                $(".AttmptMessage").html( "<div> <span style='color:red;'>" +r.AttmptMessage + " " +r.SuccessMessage +" </span></div>" );
                            }
                        }
                        else
                        {
                            if(r.ResultDuringFrequency=="522002")
                            {
                                $(".AttmptMessage").html( "<div> <span style='color:green;'>" +r.SuccessMessage + '</span></div>');
                            }
                            else
                            {
                                $(".AttmptMessage").html( "<div> <span style='color:red;'>" +r.SuccessMessage + '</span></div>');
                            }
                        }

                        showMessage(r.Message["success"], r.status)
                      
                        var attempt = @Model.objMCQUserValidationModel.AttemptNos;
                        $("#btnMCQ_Save").hide();
                        $("#dvMCQQue").hide();
                        if(r.ResultDuringFrequency=="522002")
                        {
                            $("#btnMCQ_Reset").hide();
                            $("#btnDashboard").show();
                        }
                        else
                        {
                            if( @Model.objMCQUserValidationModel.TotalAttempts == attempt )
                            {
                                location.reload(true);
                            }
                          
                            $("#btnMCQ_Reset").show();
                            $("#btnDashboard").hide();
                        }
                    }
                    else
                    {
                        DisplayErrorMessage(r.Message['Error']);
                    }
                },
                error: function () {

                }
            });



        });

    });

    function getValueUsingClass(counter){

        /* declare an checkbox array */
        var chkArray = [];
        var cls="rdo_"+counter;

        var chk="chk_"+counter;

        /* look for all checkboes that have a class 'chk' attached to it and check if it was checked */
        $("."+cls+":checked").each(function() {

            chkArray.push($(this).data("que")+"_"+$(this).val());


        });
        $("."+chk+":checked").each(function() {

            chkArray.push($(this).data("que")+"_"+$(this).val());

        });
        /* we join the array separated by the comma */
        var selected;
        selected = chkArray.join(',') ;

        /* check if there is selected checkboxes, by default the length is 1 as it contains one single comma */
        //if(selected.length > 0){
        //    alert("You have selected " + selected);
        //}else{
        //    alert("Please at least check one of the checkbox");
        //}

        return selected;
    }


    function DisplayErrorMessage(ErrorMessage) {
        $('input').removeClass('input-validation-error');
        $('select').removeClass('input-validation-error');

        $('#messageSection div').not('#frmDMATDetails #divValidationSummaryModal,#mainMessageSection').remove();
        $("#MCQQuestionsUserForm #divValidationSummaryModal ul").html("");

        $("#MCQQuestionsUserForm  #divValidationSummaryModal ul").append(("<li>" + ErrorMessage + "</li>"));

        $('#MCQQuestionsUserForm  #divValidationSummaryModal').slideDown(500);
        $('#messageSection div').not('#frmDMATDetails  #divValidationSummaryModal').remove();
        $("#MCQQuestionsUserForm  #divValidationSummaryModal").removeClass("validation-summary-valid");
        $("#MCQQuestionsUserForm  #divValidationSummaryModal").addClass("validation-summary-errors");

        setTimeout(function () {
            $("#MCQQuestionsUserForm #divValidationSummaryModal").removeClass("validation-summary-errors");
            $('#MCQQuestionsUserForm #divValidationSummaryModal').removeClass('alert-danger').fadeOut('slow');
            $("#MCQQuestionsUserForm #divValidationSummaryModal").addClass("alert-danger");
            $("#MCQQuestionsUserForm #divValidationSummaryModal").addClass("validation-summary-valid");

        }, 10000);
    }

</script>
