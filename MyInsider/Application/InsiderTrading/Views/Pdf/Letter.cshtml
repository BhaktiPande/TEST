@model InsiderTrading.Models.TransactionLetterModel
@using InsiderTrading.Common
@{
    //ViewBag.absolutepath = Request.Url.Scheme + "://" + Request.Url.AuthorityViewBag.absolutepath
    var SessionValue = TempData["NseDownloadFlag"];
    ViewBag.CompanyLogoUrl = Url.Content("~/") + "images/Logos/" + ((InsiderTrading.Common.LoginUserDetails)InsiderTrading.Common.Common.GetSessionValue((string)ConstEnum.SessionValue.UserDetails)).CompanyName + "/" + ((InsiderTrading.Common.LoginUserDetails)InsiderTrading.Common.Common.GetSessionValue((string)ConstEnum.SessionValue.UserDetails)).CompanyName + "_190X51.jpg";
    ViewBag.Title = InsiderTrading.Common.Common.getResource("dis_ttl_17102");
    InsiderTrading.Common.LoginUserDetails objLoginUserDetails = (InsiderTrading.Common.LoginUserDetails)InsiderTrading.Common.Common.GetSessionValue(InsiderTrading.Common.ConstEnum.SessionValue.UserDetails);
 }

<script type="text/javascript">
    $(window).load(function () {
        var GetSessionValue = "@SessionValue";
        if (GetSessionValue == "1") {
            $("body").addClass("loading");            
            setTimeout(function () { $('#print').trigger('click') }, 1500);
        }
        else {            
            $("#letter_format").removeClass("DivLetter1");
            $("body").removeClass("loading");
        }
    });

    $(document).ready(function () {

        $(document).delegate("#print", "click", function () {

            var GridType1 = "", GridType2 = "";
            var lttr = '<table width="100%" style="border-spacing:0px;font-size:12pt;font-family:Roboto, sans-serif">' + $("#letter").html() + '</table>';
            $('#LetterContent').val(lttr);

            var form = $("#form").html();

            var TableOnForm = $('.search').html();
            jQuery("#DataTables_Table_0").find("tbody td").attr("style", "");
            jQuery("#DataTables_Table_1").find("tbody td").attr("style", "");

            GridType1 = jQuery("#DataTables_Table_0").attr("gridtype");
            GridType2 = jQuery("#DataTables_Table_1").attr("gridtype");

            var table = jQuery("#DataTables_Table_0").html();

            var table2 = $("#DataTables_Table_1").html();

            var table1Header = $("#Grid1Header").html();
            var table1Footer = $("#Grid1Footer").html();
            var table2Header = $("#Grid2Header").html();
            var table2Footer = $("#Grid2Footer").html();

            //$("#DataTables_Table_0").find("tbody td").removeAttr("style", "");
            $("form").append("<div id=\"tempContainer\" style=\"display: ;\" gridtype=\"" + GridType1 + "\"></div>");
            $("#tempContainer").html(table);
            $("#tempContainer thead").css({ "font-size": "10pt", "font-weight": "bold" });
            $("#tempContainer thead th").css({ "vertical-align": "top" });
            if (GridType1 == "@InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList") {//Form B Grid 1
                $("#tempContainer thead tr:eq(0) th:eq(1)").css({ "width": "5%" });
                $("#tempContainer thead tr:eq(0) th:eq(2)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(3)").css({ "width": "25%" });
                $("#tempContainer thead tr:eq(0) th:eq(4)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(5)").css({ "width": "16%" });
            }
            else if (GridType1 == "@InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider") {//Form C Grid 1
                $("#tempContainer thead tr:eq(0) th:eq(1)").css({ "width": "5%" });
                $("#tempContainer thead tr:eq(0) th:eq(2)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(3)").css({ "width": "30%" });
                $("#tempContainer thead tr:eq(0) th:eq(4)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(5)").css({ "width": "16%" });
            }
            else if (GridType1 == "@InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider") {//Form D Grid 1
                $("#tempContainer thead tr:eq(0) th:eq(1)").css({ "width": "5%" });
                $("#tempContainer thead tr:eq(0) th:eq(2)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(3)").css({ "width": "30%" });
                $("#tempContainer thead tr:eq(0) th:eq(4)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(5)").css({ "width": "16%" });
            }
            else if (GridType1 == "@InsiderTrading.Common.ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1") {
                $("#tempContainer thead tr:eq(0) th:eq(1)").css({ "width": "5%" });
                $("#tempContainer thead tr:eq(0) th:eq(2)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(3)").css({ "width": "25%" });
                $("#tempContainer thead tr:eq(0) th:eq(4)").css({ "width": "15%" });
                $("#tempContainer thead tr:eq(0) th:eq(5)").css({ "width": "16%" });
            }

            $("#tempContainer tbody").css({ "font-size": "9pt" });
            $("#tempContainer tbody td").each(function () {
                if ($(this).text() == "") {
                    $(this).html("&nbsp;");
                }
            });

            table = $("#tempContainer").html();

            $("#tempContainer").remove();

            $("form").append("<div id=\"tempContainer1\" style=\"display: ;\"  gridtype=\"" + GridType2 + "\"></div>");
            $("#tempContainer1").html(table2);
            $("#tempContainer1 thead").css({ "font-size": "10pt", "font-weight": "bold" });
            $("#tempContainer1 thead th").css({ "vertical-align": "top" });
            $("#tempContainer1 thead tr:eq(2) th").css({ "width": "15%" });
            $("#tempContainer1 tbody").css({ "font-size": "9pt" });
            $("#tempContainer1 tbody td").each(function () {
                if ($(this).text() == "")
                    $(this).html("&nbsp;");
            });
            table2 = $("#tempContainer1").html();
            $("#tempContainer1").remove();

            form = '<table width="100%" >' + form + '</table><div style="font-weight:bold;font-size:10pt;"><br>' + table1Header + '<br></div><br><br><table width="100%" cellpadding="1" style="border-spacing:0px" border="1" >' + table + '</table>'
            + '<div style="font-weight:bold;font-style:italic;font-size:9pt;"><br>' + table1Footer + '<br></div><br><br><div style="font-weight:bold;font-size:10pt;">' + table2Header + '</div><br><br><table width="100%" cellpadding="1" style="border-spacing:0px" border="1" >'
            + table2 + '</table><br><br><div style="font-weight:bold;font-style:italic;font-size:9pt;">' + table2Footer + '</div>'
                + '<br><br>' + '<table width="100%">' + $("#SignatureBody").html() + '</table>';
            $('#FormContent').val(form);

            return true;
        });


        $(document).delegate("#btnSubmitSoftCopy", "click", function () {
            $.confirm({
                //title: $("#msgSoftCopy").val(),
                text: $("#msgSoftCopy").val(),
                confirm: function (button) {
                    $("#frmSubmitSoftCopy").submit();
                },
                cancel: function (button) {
                },
                confirmButton: "Yes I Confirm",
                cancelButton: "No",
                post: true,
                confirmButtonClass: "btn btn-success",
                cancelButtonClass: "btn-danger",
                dialogClass: "modal-dialog modal-lg"
            });
        });
    });

    $(document).delegate("#btnCancel", "click", function () {
        $('#FormContent').val("");
        $('#LetterContent').val("");
        $('#LetterStatus').val("");
    });

    function datatableCallFunction() {
        mergeRowsForColumnNo($("#DataTables_Table_0"), 0);
        $("#DataTables_Table_0").addClass("notable-striped");
        $("#DataTables_Table_0 tbody td").each(function () {
            if ($(this).text() == "")
                $(this).html("&nbsp;");
        });
    }

    function removeStripedClassGrid2() {
        $("#DataTables_Table_1").addClass("notable-striped");
        $("#DataTables_Table_1 tbody td").each(function () {
            if ($(this).text() == "")
                $(this).html("&nbsp;");
        });
    }
</script>
@{

    ViewBag.EmailContent = Model.Contents;
    if (Model.IsActive)
    {
        ViewBag.EmailContent = ViewBag.EmailContent.Replace(Environment.NewLine, "<br/>");
        ViewBag.EmailContent = ViewBag.EmailContent.Replace("\r\n", "<br/>");
        ViewBag.EmailContent = ViewBag.EmailContent.Replace("\\n", "<br/>");
        ViewBag.EmailContent = ViewBag.EmailContent.Replace("\\r", "<br/>");
        ViewBag.EmailContent = ViewBag.EmailContent.Replace(" ", " ");

        ViewBag.ToAddress1 = Model.ToAddress1;
        ViewBag.ToAddress1 = ViewBag.ToAddress1.Replace(Environment.NewLine, "<br/>");
        ViewBag.ToAddress1 = ViewBag.ToAddress1.Replace("\r\n", "<br/>");
        ViewBag.ToAddress1 = ViewBag.ToAddress1.Replace("\\n", "<br/>");
        ViewBag.ToAddress1 = ViewBag.ToAddress1.Replace("\\r", "<br/>");
        ViewBag.ToAddress1 = ViewBag.ToAddress1.Replace(" ", " ");

        if (Model.ToAddress2 != null)
        {
            ViewBag.ToAddress2 = Model.ToAddress2;
            ViewBag.ToAddress2 = ViewBag.ToAddress2.Replace(Environment.NewLine, "<br/>");
            ViewBag.ToAddress2 = ViewBag.ToAddress2.Replace("\r\n", "<br/>");
            ViewBag.ToAddress2 = ViewBag.ToAddress2.Replace("\\n", "<br/>");
            ViewBag.ToAddress2 = ViewBag.ToAddress2.Replace("\\r", "<br/>");
            ViewBag.ToAddress2 = ViewBag.ToAddress2.Replace(" ", " ");
        }
        else
        {
            ViewBag.ToAddress2 = "";
        }

        ViewBag.Subject = Model.Subject;
        ViewBag.Subject = ViewBag.Subject.Replace(Environment.NewLine, "<br/>");
        ViewBag.Subject = ViewBag.Subject.Replace("\r\n", "<br/>");
        ViewBag.Subject = ViewBag.Subject.Replace("\\n", "<br/>");
        ViewBag.Subject = ViewBag.Subject.Replace("\\r", "<br/>");
        ViewBag.Subject = ViewBag.Subject.Replace(" ", " ");

        ViewBag.Signature = Model.Signature;
        ViewBag.Signature = ViewBag.Signature.Replace(Environment.NewLine, "<br/>");
        ViewBag.Signature = ViewBag.Signature.Replace("\r\n", "<br/>");
        ViewBag.Signature = ViewBag.Signature.Replace("\\n", "<br/>");
        ViewBag.Signature = ViewBag.Signature.Replace("\\r", "<br/>");
        ViewBag.Signature = ViewBag.Signature.Replace(" ", " ");
    }
}
@using (Html.BeginForm("SubmitSoftCopy", "TradingTransaction", new { ReturnUrl = ViewBag.ReturnUrl, formId = 72  }, FormMethod.Post, new { role = "form", autocomplete = "off", id = "frmSubmitSoftCopy" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
    {
        ViewBag.NoRecordsMessage = "";
        if (Model.DisclosureTypeCodeId == InsiderTrading.Common.ConstEnum.Code.DisclosureTypeInitial)
        {
            ViewBag.NoRecordsMessage = "No Holdings";
        }
        else if (Model.DisclosureTypeCodeId == InsiderTrading.Common.ConstEnum.Code.DisclosureTypeContinuous ||
            Model.DisclosureTypeCodeId == InsiderTrading.Common.ConstEnum.Code.DisclosureTypePeriodEnd)
        {
            ViewBag.NoRecordsMessage = "Not Traded";
        }
    }

    <div class="row DivLetter1" id="letter_format">

        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 disclosureLetterPrinting" id="pntLetter">
            @if (Model.IsActive)
            {
                <table width="100%" id="letter">
                    <tr><td colspan="2">&nbsp;</td></tr>
                    <tr>
                        <td width="50%"></td>
                        @*<td align="right">@Html.LabelFor(m => m.Date): @Html.Raw(InsiderTrading.Common.Common.ApplyFormatting(Model.Date, InsiderTrading.Common.ConstEnum.DataFormatType.Date))</td>*@
                        <td align="right"> @Html.Raw(InsiderTrading.Common.Common.ApplyFormatting(Model.Date, InsiderTrading.Common.ConstEnum.DataFormatType.Date))</td>
                    </tr>
                    <tr><td colspan="2">&nbsp;</td></tr>
                    <tr>
                        <td>@Html.Raw(ViewBag.ToAddress1)</td>
                        @if (Model.ToAddress2 != null)
                        {
                            <td>@Html.Raw(ViewBag.ToAddress2)</td>
                        }
                    </tr>
                    <tr><td colspan="2">&nbsp;</td></tr>
                    <tr>
                        <td colspan="2" align="center"><b><u>@Html.LabelFor(m => m.Subject): @Html.Raw(ViewBag.Subject)</u></b></td>
                    </tr>
                    <tr><td colspan="2">&nbsp;</td></tr>
                    <tr>
                        <td colspan="2">@Html.Raw(ViewBag.EmailContent)</td>
                    </tr>
                    <tr><td colspan="2">&nbsp;</td></tr>
                    @if (ViewBag.employeeId != null)
                    {
                        <tr>
                            <td colspan="2">@Html.Raw(ViewBag.employeeId)</td>
                        </tr>
                    }
                    <tr>
                        <td colspan="2">@Html.Raw(ViewBag.Name)</td>
                    </tr>
                    <tr>
                        <td colspan="2">Designation: @Html.Raw(@Model.LetterForUserDesignation)</td>
                    </tr>
                    <tr><td colspan="2">&nbsp;</td></tr>
                    <tr>
                        <td colspan="2">@Html.Raw(ViewBag.Signature)</td>
                    </tr>
                    <tr>
                        <td colspan="2"></td>
                    </tr>
                </table>
            }
            <div>&nbsp;</div>
            <table width="100%" id="form">
                <tr><td colspan="2">&nbsp;</td></tr>
                <tr>
                    <td align="left"><img src="@ViewBag.CompanyLogoUrl" class="img img-responsive" /></td>
                    <td align="right">@Html.LabelFor(m => m.Date): @Html.Raw(InsiderTrading.Common.Common.ApplyFormatting(Model.Date, InsiderTrading.Common.ConstEnum.DataFormatType.Date))</td>
                </tr>
                <tr>
                    <td width="50%"></td>
                    <td align="right"></td>
                </tr>
                <tr>

                    <td align="center" colspan="2">
                        @{
    if (@ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17120"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17175"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17182"), new { style = "font:bold" })
    }
                        }
                    </td>
                </tr>
                <tr>
                    <td align="center" colspan="2">
                        @{
    if (@ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17121"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17176"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17183"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_50409"), new { style = "font:bold" })
    }
                        }
                    </td>
                </tr>
                <tr>
                    <td align="center" colspan="2">
                        @{
    if (@ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17122"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17177"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider)
    {
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_17184"), new { style = "font:bold" })
    }
    else if (ViewBag.GridType == ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
    {
        string PeriodType = ViewBag.PeriodType;
        string PeriodStartDate = ViewBag.PeriodStartDate;
        string PeriodEndDate = ViewBag.PeriodEndDate;
        @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_50410").Replace("{0}", PeriodType).Replace("{1}", PeriodStartDate).Replace("{2}", PeriodEndDate), new { style = "font:bold" })
    }
                        }
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td align="left" colspan="2">
                        @if (ViewBag.GridType == ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
                        {
                            @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_50411"), new { style = "font:bold" })<span> : </span>@ViewBag.CompanyName
                        }
                        else
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17123")<span>:</span> @ViewBag.CompanyName
                        }
                    </td>
                </tr>
                <tr>
                    <td align="left" colspan="2">
                        @if (ViewBag.GridType == ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
                        {
                            @Html.Label(InsiderTrading.Common.Common.getResource("dis_lbl_50412"), new { style = "font:bold" }) <span> : </span>@ViewBag.CompanyISINNumber
                        }
                        else
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17124") <span>:</span>  @ViewBag.CompanyISINNumber
                        }
                    </td>
                </tr>
            </table>

            <div class="search" gridtype="@ViewBag.GridType" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <br />
                <input type="hidden" value="1" id="1" name="" gridtype="@ViewBag.GridType" />
                <input type="hidden" value="@Model.TransactionMasterId" id="2" name="" gridtype="@ViewBag.GridType" />
                <input type="hidden" value="@ViewBag.UserId" id="3" name="" gridtype="@ViewBag.GridType" />            
                <input type="hidden" value="@ViewBag.year" id="4" name="" gridtype="@ViewBag.GridType" />
                <input type="hidden" value="@ViewBag.Period" id="5" name="" gridtype="@ViewBag.GridType" />

                <div id="Grid1Header">
                    <table width="100%">
                        <tr>
                            <td align="left" colspan="2" id="Grid1Header">
                                <!--Grid 1 header messages for different forms B,C and D-->
                                @{
    if (@ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList)
    {
        <label style="font-weight: bold;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17125"))</label>
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider)
    {
        <label style="font-weight: bold;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17180"))</label>
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider)
    {
        <label style="font-weight: bold;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17404"))</label>
    }
    else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
    {
        <label style="font-weight: 500;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_50413"))</label>
    }
                                }
                            </td>
                        </tr>
                    </table>
                </div>

                @{
    Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, btnSearch = "", sSortCol = "0", bIsPagination = false, acid = ViewBag.acid, sNoRecordsfoundMessage = @ViewBag.NoRecordsMessage, sCallBackFunction = "datatableCallFunction", sShowProcessing = "false" });
    <div id="Grid1Footer">
        <table width="100%">
            <tr>
                                <td align="left" colspan="2" id="Grid1Footer">
                                    <!--Footer for the Grid1 for different Forms B,C and D-->
                                    @{
                                        if (@ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList)
                                        {
                                            <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17126"))</label>
                                        }
                                        else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider)
                                        {
                                            <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17181"))</label>
                                            <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_55500"))</label>
                                        }
                                        else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider)
                                        {
                                            <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17185"))</label>
                                            <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_55503"))</label>
                                        }
                                        else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
                                        {
                                            <label style="font-weight: 500;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_50414"))</label>
                                        }
                                    }
                                </td>
            </tr>
        </table>
    </div>
                }
            </div>

            <div class="search" gridtype="@ViewBag.GridType2" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <input type="hidden" value="2" id="1" name="" gridtype="@ViewBag.GridType2" />
                <input type="hidden" value="@Model.TransactionMasterId" id="2" name="" gridtype="@ViewBag.GridType2" />
                <input type="hidden" value="@ViewBag.UserId" id="3" name="" gridtype="@ViewBag.GridType" />
                <input type="hidden" value="@ViewBag.year" id="4" name="" gridtype="@ViewBag.GridType" />
                <input type="hidden" value="@ViewBag.Period" id="5" name="" gridtype="@ViewBag.GridType" />
                <div id="Grid2Header">
                    <div style='page-break-after: always;'> </div>
                    <table width="100%" id="form">
                        <tr>
                            <td align="left" colspan="2" id="Grid2Header">
                                <!--Grid 2 header messages for different forms B,C and D-->
                                @{
                                    if (@ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterListGrid2)
                                    {
                                        <label style="font:bold;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17405"))</label>
                                    }
                                    else if (ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsiderGrid2)
                                    {
                                        <label style="font:bold;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17407"))</label>
                                    }
                                    else if (ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsiderGrid2)
                                    {
                                        <label style="font:bold;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17409"))</label>
                                    }
                                    else if (ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid2)
                                    {
                                        <label style="font-weight: 500;">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_50415"))</label>
                                    }
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>&nbsp;&nbsp;</td>
                        </tr>
                    </table>
                </div>

                @{
    Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType2, btnSearch = "", sSortCol = "0", bIsPagination = false, acid = ViewBag.acid, sNoRecordsfoundMessage = @ViewBag.NoRecordsMessage, sCallBackFunction = "removeStripedClassGrid2", sShowProcessing = "false" });
	<div id="Grid2Footer">
	<!--Footer for the Grid2 for different Forms B,C and D-->
	 @{
	  	if (@ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterListGrid2)
 	   {
        <label style="font-weight:normal;font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17406"))</label>
    }
    else if (ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsiderGrid2)
    {
        <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17408"))</label>
    }
    else if (ViewBag.GridType2 == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsiderGrid2)
    {
        <label style="font-weight: normal; font-style: italic">@Html.Raw(InsiderTrading.Common.Common.getResource("dis_lbl_17410"))</label>
   	   }
      }
	  </div>
 				}
            </div>

            <table id="SignatureBody">
                <tr>
                    <td>&nbsp;&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        @{if (@ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.InitialDisclosureLetterList)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17127")<span>:</span>@* @Html.Raw(@ViewBag.Signature)*@
                        }
                        else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForEmployeeInsider)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17127")<span>:</span>@* @Html.Raw(@ViewBag.Signature)*@
                        }
                        else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsider)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17186")<span>:</span>@* @Html.Raw(@ViewBag.Signature)*@
                        }
                        else if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_50416")<span>:</span>@* @Html.Raw(@ViewBag.Signature)*@
                        }
                        }
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        @if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.PeriodEndDisclosureDataForLetterForEmployeeInsiderGrid1)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_50417")<span>:</span> @Model.LetterForUserDesignation
                        }
                        else
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17128")<span>:</span> @Model.LetterForUserDesignation
                        }
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        @if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsiderGrid2)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_50418") @Html.Raw(InsiderTrading.Common.Common.ApplyFormatting(Model.Date, InsiderTrading.Common.ConstEnum.DataFormatType.Date))
                        }
                        else
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17129") @Html.Raw(InsiderTrading.Common.Common.ApplyFormatting(Model.Date, InsiderTrading.Common.ConstEnum.DataFormatType.Date))
                        }
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        @if (ViewBag.GridType == InsiderTrading.Common.ConstEnum.GridType.ContinuousDisclosureDataForLetterForNonEmployeeInsiderGrid2)
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_50419")
                        }
                        else
                        {
                            @InsiderTrading.Common.Common.getResource("dis_lbl_17130")
                        }
                    </td>
                </tr>

                @if (ViewBag.ShowNote)
                {
                 <tr>
                    <td>&nbsp;</td>
                 </tr>
                 <tr>
                    <td>This is a system generated disclosure, physical signature is not required</td>
                 </tr>
                }
               
            </table>
        </div>
        <div>&nbsp;</div>
        <input type="hidden" name="year" value='@ViewBag.year' />

        @Html.Hidden("acid", (int)ViewBag.acid)
        @Html.Hidden("TransactionMasterId", Model.TransactionMasterId)
        @Html.Hidden("DisclosureTypeCodeId", Model.DisclosureTypeCodeId)
        @Html.Hidden("TransactionLetterId", Model.TransactionLetterId)
        @Html.Hidden("LetterStatus", Model.IsActive)
        @Html.Hidden("uid", (Int32)@ViewBag.UserId)
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            @if (ViewBag.transactionStatus == InsiderTrading.Common.ConstEnum.Code.DisclosureStatusForSoftCopySubmitted)
            {
            <a class="btn btn-success" href='@Url.Action("UploadHardDocument", "TradingTransaction", new { nTransactionLetterId = 0, nTransactionMasterId = Model.TransactionMasterId, nDisclosureTypeCodeId = Model.DisclosureTypeCodeId, nLetterForCodeId = InsiderTrading.Common.ConstEnum.Code.DisclosureLetterUserInsider, acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DISCLOSURE_DETAILS_CONTINUOUS_DISCLOSURE_LETTER_SUBMISSION })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_50599")</a>
            } 
            @if (ViewBag.DisclosureTypeCodeId == @InsiderTrading.Common.ConstEnum.Code.DisclosureTypeContinuous)
            {
              if(ViewBag.IsFormCSubmitted)
              {
                 <button class="btn btn-success" style="color: #222" id="print" name="Print" type="submit">@InsiderTrading.Common.Common.getResource("dis_btn_17111")</button>
              }               
            }
            else 
            {
                 <button class="btn btn-success" style="color: #222" id="print" name="Print" type="submit">@InsiderTrading.Common.Common.getResource("dis_btn_17111")</button>
            }
            <input type="hidden" id="LetterContent" name="LetterHTMLContent" />
            <input type="hidden" id="FormContent" name="FormHTMLContent" />
            <input type="hidden" id="LetterStatus" name="LetterHTMLStatus" />

            @if (ViewBag.EditLetter && (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.Admin || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.COUserType))
            {
                <a class="btn btn-success" href='@Url.Action("CreateLetter", "TradingTransaction", new { acid = ViewBag.acid, nTransactionMasterId = Model.TransactionMasterId, nDisclosureTypeCodeId = Model.DisclosureTypeCodeId, nLetterForCodeId = Model.LetterForCodeId, nTransactionLetterId = Model.TransactionLetterId, IsStockExchange = ViewBag.IsStockExchange })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14007")</a>
            }
            @if (ViewBag.EditLetter)
            {
                <button class="btn btn-success" type="button" id="btnSubmitSoftCopy">@InsiderTrading.Common.Common.getResource("com_btn_14025")</button>         
            }
            @if (@ViewBag.ReturnUrl != null && @ViewBag.ReturnUrl != "")
            {
                <a class="btn btn-success cancel" href="@ViewBag.ReturnUrl">Back</a>
            }
            else
            {
                <button type="submit" name="Cancel" class="btn btn-success cancel" id="btnCancel" data-dismiss="modal"> @InsiderTrading.Common.Common.getResource("com_btn_14010")</button>
            }
            @if (@ViewBag.GroupId != null && (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.Admin || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.COUserType))
            {
                <a href="@Url.Action("DownloadDocument", "NSEDownload", new { acid = InsiderTrading.Common.ConstEnum.UserActions.NSEDownload, GroupId = ViewBag.GroupId })"><img src="~/images/NSEDownload/download-doc.png" style='height:30px;width:30px;' class="download-doc" alt="" /></a>
            }

            <input type="hidden" name="authorization" value="SaveLetter:@ViewBag.acid" />
        </div>
    </div>
}

<input type="hidden" id="msgSoftCopy" value='@InsiderTrading.Common.Common.getResource("dis_lbl_17117")' />
<script>
    $(document).ready(function () {
        $("#DataTables_Table_0_info").closest("div.col-xs-6").remove();
    });
</script>
