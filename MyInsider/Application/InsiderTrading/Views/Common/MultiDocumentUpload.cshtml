@model List<InsiderTrading.Models.DocumentDetailsModel>

@{
    int ctr = 0; //counter used in loop

    int user_action = (int)ViewData["user_action"];

    int MapToCodeTypeId = 0;
    int Index = 0;
    int SubIndex = 0;
    bool HideRow = false;
    string styleString = ""; 
    bool bShowAddNew = false;
    
    foreach (InsiderTrading.Models.DocumentDetailsModel objDocModel in Model)
    {
        MapToCodeTypeId = objDocModel.MapToTypeCodeId;
        Index = objDocModel.Index;
        SubIndex = objDocModel.SubIndex;
        HideRow = objDocModel.HideRow;
        bShowAddNew = objDocModel.HasAddNewOption;
        
        if (HideRow)
        {
            styleString = "hideDocuments";
        }
        else
        {
            styleString = "";
            
        }
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 clsFileUpload @styleString">
            <div class="clsParentFileUpload row" indexvalue="@SubIndex">
                <div class="col-lg-8 col-md-8 col-sm-8 col-xs-8">
                    <div class=" fileinput input-group fileinput-new" data-provides="fileinput">
                        <div class="form-control" data-trigger="fileinput" style="min-height: 34px;height: auto;">
                            <i class="glyphicon glyphicon-file fileinput-exists"></i>
                            <span class="fileinput-filename" style="display:inline"></span>
                        </div>
                        <span class="input-group-addon btn btn-default btn-file">
                            <span class="fileinput-new">Select file</span>
                            <span class="fileinput-exists">Change</span>
                            <input type="hidden" value="" name="...">
                            <input type="file" name='[@Index].Value[@SubIndex].Document' class="form-control document" />
                            @Html.ValidationMessageFor(m => m[0].Document)
                        </span>
                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput"><i class="fa fa-times-circle-o"></i></a>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2" id="uploadButtonDiv">
                    <button type="button" data-details="@MapToCodeTypeId" data-index="@Index" data-flag="false"
                            class="btn btn-success clsStartFileUpload" id="fleUpload">
                        <i class="fa fa-upload">
                        </i> Upload
                    </button>
                </div>
                @{
                    if (ctr == 0 && bShowAddNew)
                    { 
                        <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2" id="addNewFileUploadDiv">
                            <button type="button" data-details="@MapToCodeTypeId" data-index="@Index" data-flag="false"
                                    class="btn btn-success" id="addNewFileUpload">
                                <i class="fa fa-upload">
                                </i> Add New
                            </button>
                        </div>
                    }
                }    
            </div>
            <div class="clsDivDynamic row" id="doc_@Index@SubIndex">
                @if (objDocModel.DocumentId != 0 && objDocModel.DocumentId != null)
                {
                    <div id="@Index@SubIndex">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            @Html.ActionLink(objDocModel.DocumentName, "Download", "Document", new { nDocumentDetailsID = objDocModel.DocumentId, GUID = objDocModel.GUID, sDocumentName = objDocModel.DocumentName, sFileType = objDocModel.FileType, acid = user_action }, null)
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            @if (@objDocModel.PurposeCodeId != null)
                            {
                                <a href="javascript:void(0);" class="display-icon icon icon-delete deleteDocument" querystring="[{key:'acid','value':@user_action},{key:'nDocumentDetailsID',value:@objDocModel.DocumentId},{key:'nIndex',value:@objDocModel.Index},{key:'nSubIndex',value:@objDocModel.SubIndex},{key:'GUID',value:'@objDocModel.GUID'},{key:'nMapToTypeCodeId',value:@objDocModel.MapToTypeCodeId},{key:'nMapToId',value:@objDocModel.MapToId},{key:'nPurposeCodeId',value:@objDocModel.PurposeCodeId}]"></a>
                            }
                            else
                            {
                                <a href="javascript:void(0);" class="display-icon icon icon-delete deleteDocument" querystring="[{key:'acid','value':@user_action},{key:'nDocumentDetailsID',value:@objDocModel.DocumentId},{key:'nIndex',value:@objDocModel.Index},{key:'nSubIndex',value:@objDocModel.SubIndex},{key:'GUID',value:'@objDocModel.GUID'},{key:'nMapToTypeCodeId',value:@objDocModel.MapToTypeCodeId},{key:'nMapToId',value:@objDocModel.MapToId},{key:'nPurposeCodeId',value:0}]"></a>
                            }
                        </div>
                    </div>
                }

            </div>
        </div>

        <input type="hidden" name="[@Index].Key" value="@objDocModel.MapToTypeCodeId" />
        <input type="hidden" name="[@Index].Value[@SubIndex].DocumentId" value="@objDocModel.DocumentId" />
        <input type="hidden" name="[@Index].Value[@SubIndex].MapToTypeCodeId" value="@objDocModel.MapToTypeCodeId" />
        <input type="hidden" name="[@Index].Value[@SubIndex].MapToId" value="@objDocModel.MapToId" />
        <input type="hidden" name="[@Index].Value[@SubIndex].PurposeCodeId" value="@objDocModel.PurposeCodeId" />
        <input type="hidden" name="[@Index].Value[@SubIndex].GUID" value="@objDocModel.GUID" />
        <input type="hidden" name="[@Index].Value[@SubIndex].Index" value="@objDocModel.Index" />
        <input type="hidden" name="[@Index].Value[@SubIndex].SubIndex" value="@objDocModel.SubIndex" />
        <input type="hidden" name="[@Index].Value[@SubIndex].DocumentName" value="@objDocModel.DocumentName" />
        
        ctr++; //loop counter incremented 
    }

    @Html.Hidden("buttonName");
    @Html.Hidden("index");
    @Html.Hidden("divclone");
    @Html.Hidden("acid", user_action);

    @Html.Hidden("DeleteSingleDocument", Url.Action("DeleteSingleDocumentDetails", "Document", new { acid = user_action }));
    @Html.Hidden("DownloadDocument", Url.Action("Download", "Document"));
    @Html.Hidden("UploadDocument", Url.Action("UploadDocument", "Document"));

}

<script>
    $(document).ready(function () {
        if ($(".clsFileUpload:not(.hideDocuments)").length < 1) {
            $(".clsFileUpload:eq(0)").removeClass("hideDocuments");
        } else {
            $("div#addNewFileUploadDiv").insertAfter(".clsFileUpload:not(.hideDocuments):last #uploadButtonDiv");
        }
        $(document).delegate("#addNewFileUpload", "click", function () {
            if ($(".clsFileUpload.hideDocuments").length > 0) {
                $(".clsFileUpload.hideDocuments:eq(0)").removeClass("hideDocuments");
                $("div#addNewFileUploadDiv").insertAfter(".clsFileUpload:not(.hideDocuments):last #uploadButtonDiv");
            } else {
                showMessage("Maximum limit to add new documents is reached.", false);
            }
        });
    });

</script>