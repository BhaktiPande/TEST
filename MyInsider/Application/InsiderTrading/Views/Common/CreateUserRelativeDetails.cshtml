@model InsiderTrading.Models.RelativeInfoModel


@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_CREATE) && Model.UserInfoId == 0)
{
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
            <p>
                <a class="btn btn-success " id="AddRelBtn" style="float: left; margin: 0px 15px 10px 0; role =" button">@InsiderTrading.Common.Common.getResource("usr_btn_11247")</a>
                @if (Model.UserInfoId == 0)
                {
                    <a class="btn btn-success " id="btnProceed" role="button" data-toggle="modal" data-target="#myModal">@InsiderTrading.Common.Common.getResource("usr_btn_50772")</a>
                }
            </p>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
            <p>
                <a class="btn btn-success " id="AddRelBtn"  style="float: left; display: none; margin: 0px 15px 10px 0; role = "button">@InsiderTrading.Common.Common.getResource("usr_btn_11247")</a>
                @if (Model.UserInfoId == 0)
                {
                    <a class="btn btn-success " id="btnProceed" style="margin: 0px 0px 10px 0px;" role="button"  data-toggle="modal" data-target="#myModal">@InsiderTrading.Common.Common.getResource("usr_btn_51001")</a>
                }
            </p>
        </div>
    </div>
}

<div class="alert" style="display: none;" name="ErrorMessage" gridtype="@InsiderTrading.Common.ConstEnum.GridType.UserRelativeList"></div>

@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_VIEW))
{
    if (@ViewBag.DupEmailChk != false)
    {
        <div class="search" gridtype="@InsiderTrading.Common.ConstEnum.GridType.UserRelativeList">
            @Html.Hidden("1", Model.ParentId, new { id = "1", gridtype = InsiderTrading.Common.ConstEnum.GridType.UserRelativeList })
            @{
        Html.RenderAction("Index", "DatatableGrid", new { sGridTagName = "DatatableGrid_relative", type = InsiderTrading.Common.ConstEnum.GridType.UserRelativeList, btnSearch = "", sSortCol = "0", acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_VIEW });
            }
        </div>
    }
}

@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_EDIT))
{
    @Html.Hidden("Edit", Url.Action("CreateRelative", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_EDIT, nUserInfoID = Model.UserInfoId, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = InsiderTrading.Common.ConstEnum.GridType.UserRelativeList + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("CreateRelative", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_EDIT, nConfirmPersonalDetailsRequired = Session["Confirm_PersonalDetails_Required"], nShowPersonalDetailsConfirmButtonRequired = Session["show_confirm_personal_details_btn"] }) + "&nUserInfoID=<UserInfoId>','class':'display-icon icon icon-edit '}" })
}
@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_DELETE))
{
    @Html.Hidden("deleteRowURL", Url.Action("DelateRelative", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_DELETE }), new { name = "deleteRowURL", gridtype = InsiderTrading.Common.ConstEnum.GridType.UserRelativeList, @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = InsiderTrading.Common.ConstEnum.GridType.UserRelativeList + "_usr_grd_11073", param = "{'name': 'deleteRow','ID':'DeleteUserRelative', 'queryString':'[ {ID:\"nUserInfoID\", key:\"<UserInfoId>\"},{ID:\"formId\", key:\"81\"} ]','text':'','href':'javascript:void(0);','class':'display-icon icon icon-delete '}" })
}
