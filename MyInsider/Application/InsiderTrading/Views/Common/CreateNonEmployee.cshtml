@model InsiderTrading.Models.UserInfoModel
@{
    ViewBag.Title = "CreateNonEmployee";
    InsiderTrading.Common.LoginUserDetails objLoginUserDetails = (InsiderTrading.Common.LoginUserDetails)InsiderTrading.Common.Common.GetSessionValue(InsiderTrading.Common.ConstEnum.SessionValue.UserDetails);
}

<!-- Content Header (Page header) -->
<section class="content-header">
    @*@Html.AntiForgeryToken()*@
</section>

<script>
    $(document).ready(function () {
        $("#addRoleMaster").on('show.bs.modal', function (event) {
            $(".modal-dialog").css({ width: '40%' });
            $.ajax({
                @*@Html.ActionLink(@InsiderTrading.Common.Common.getResource("usr_lbl_11339"), "Create", "RoleMaster", new { RoleId = 0, acid = @InsiderTrading.Common.ConstEnum.UserActions.CRUSER_ROLEMASTER_CREATE, frm = "emp", uid = Model.userInfoModel.UserInfoId }, new { @class = "create-link" })*@
                url: "@Url.Action("Create", "RoleMaster", new { acid = @InsiderTrading.Common.ConstEnum.UserActions.CRUSER_ROLEMASTER_CREATE, uid = Model.UserInfoId })",//"../TemplateMaster/Create?TemplateMasterId=0",
                data: { RoleId: "0", frm: "nonemp" },
                method: "GET",
                success: function (response) {
                    //$("#myModal .modal-body").html('');
                    $("#addRoleMaster .modal-body").html(response);
                }
            });
        });
    });
</script>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h4>@InsiderTrading.Common.Common.getResource("usr_ttl_11239")</h4>
    </div>
</div>
<div class="row">
    @Html.HiddenFor(m => m.UserInfoId)
    @Html.HiddenFor(m => m.IsRequiredConfirmPersonalDetails)

    @if (Model.UserInfoId != 0 && Model.UserInfoId != null)
    {
        @Html.Hidden("acid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RELATIVEUSER_EDIT)
    }
    else
    {
        @Html.Hidden("acid", InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_CREATE)
    }
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            @{
                //check if to show following option to login user -- if do not show role then hide div
                if (!(bool)ViewBag.show_not_login_user_details)
                {
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div role="form">
                            <div class="form-group">
                                @Html.LabelFor(m => m.LoginID)
                                @Html.TextBoxFor(m => m.LoginID, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.LoginID).ToString(), Html.ActivityResourceKeyFor(m => m.LoginID).ToString(), new { @class = "form-control", id = "txtNonEmpLoginID" }, 0, 1))
                                @Html.HiddenFor(m => m.LoginID)
                                @Html.ValidationMessageFor(m => m.LoginID)
                            </div>
                        </div>
                    </div>
                }
            }
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EmployeeId)
                        @Html.TextBoxFor(m => m.EmployeeId, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.EmployeeId).ToString(), Html.ActivityResourceKeyFor(m => m.EmployeeId).ToString(), new { @class = "form-control", id = "txtNonEmpEmployeeId" }, 0, 1))
                        @Html.HiddenFor(m => m.EmployeeId)
                        @Html.ValidationMessageFor(m => m.EmployeeId)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CompanyId)
                        @Html.DropDownListFor(m => m.CompanyId, new SelectList(ViewBag.CompanyDropDown, "Key", "Value", ""), @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.CompanyId).ToString(), Html.ActivityResourceKeyFor(m => m.CompanyId).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.CompanyId)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.UPSIAccessOfCompanyID)
                        @Html.DisplayFor(m => m.UPSIAccessOfCompanyName)
                        @*@Html.DropDownListFor(m => m.UPSIAccessOfCompanyID, new SelectList(ViewBag.CompanyDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.UPSIAccessOfCompanyID).ToString(), new { @class = "form-control", @disabled = "disabled" }, 0, 1))*@
                        @Html.ValidationMessageFor(m => m.UPSIAccessOfCompanyID)
                    </div>
                </div>
            </div>
        </div>
    </div>
    @{
        //check if to show following option to login user -- if do not show role then hide div
        if ((bool)ViewBag.show_not_login_user_details)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="row">
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div role="form">
                            <div class="form-group">
                                @Html.LabelFor(m => m.LoginID)
                                @Html.TextBoxFor(m => m.LoginID, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.LoginID).ToString(), Html.ActivityResourceKeyFor(m => m.LoginID).ToString(), new { @class = "form-control" }, 0, 1))
                                @Html.ValidationMessageFor(m => m.LoginID)
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div role="form">
                            <div class="form-group">
                                <div class="row" style="margin-left: 5px;margin-right: 5px;">
                                    @Html.LabelFor(m => m.AssignedRole)
                                    @{
                                        //check if user has permission to add role
                                        if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CRUSER_ROLEMASTER_CREATE))
                                        {
                                            if ((bool)ViewBag.show_create_role_link)
                                            {
                                                @Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                                                <div class="form-group">
                                                    <a href="javascript:void(0);" class="create-link" id="AT" type="button" data-toggle='modal' data-target='#addRoleMaster'>
                                                        @InsiderTrading.Common.Common.getResource("usr_lbl_11339")
                                                    </a>
                                                </div>
                                            }
                                        }
                                    }
                                    @Html.ListBoxFor(m => m.SubmittedRole, new MultiSelectList(Model.DefaultRole, "Key", "Value", Model.AssignedRole.Select(m => m.Key)), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.AssignedRole).ToString(), Html.ActivityResourceKeyFor(m => m.AssignedRole).ToString(), new { multiple = "multiple", @class = "form-control multiselect" }, 0, 1))
                                    @Html.ValidationMessageFor(m => m.SubmittedRole)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            //set hidden variable for role which need to be pass for saving
            @*@Html.HiddenFor(m => m.SubmittedRole)*@
        }
    }

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName)
                        @Html.TextBoxFor(m => m.FirstName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.FirstName).ToString(), Html.ActivityResourceKeyFor(m => m.FirstName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.FirstName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.MiddleName)
                        @Html.TextBoxFor(m => m.MiddleName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.MiddleName).ToString(), Html.ActivityResourceKeyFor(m => m.MiddleName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.MiddleName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName)
                        @Html.TextBoxFor(m => m.LastName, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.LastName).ToString(), Html.ActivityResourceKeyFor(m => m.LastName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.LastName)
                    </div>
                </div>
            </div>
            @if (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.EmployeeType || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.NonEmployeeType)
            {
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AssignedRole)
                        @foreach (var item in Model.AssignedRole)
                        {
                            <div><u>@item.Value</u></div>
                        }
                    </div>
                </div>
            }

        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PAN)
                        @Html.TextBoxFor(m => m.PAN, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.PAN).ToString(), Html.ActivityResourceKeyFor(m => m.PAN).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.PAN)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EmailId)
                        @Html.TextBoxFor(m => m.EmailId, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.EmailId).ToString(), Html.ActivityResourceKeyFor(m => m.EmailId).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.EmailId)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.MobileNumber)
                        @Html.TextBoxFor(m => m.MobileNumber, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.MobileNumber).ToString(), Html.ActivityResourceKeyFor(m => m.MobileNumber).ToString(), new { @class = "form-control", id = "txt_NonEmpMobNo" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.MobileNumber)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AddressLine1)
                        @Html.TextAreaFor(m => m.AddressLine1, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.AddressLine1).ToString(), Html.ActivityResourceKeyFor(m => m.AddressLine1).ToString(), new { @class = "form-control", style = "height:34px" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.AddressLine1)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PinCode)
                        @Html.TextBoxFor(m => m.PinCode, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.PinCode).ToString(), Html.ActivityResourceKeyFor(m => m.PinCode).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.PinCode)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CountryId)
                        @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.CountryDropDown, "Key", "Value", ""), InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.CountryId).ToString(), Html.ActivityResourceKeyFor(m => m.CountryId).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.CountryId)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div class="form-group" id="sandbox-container">
                    @Html.LabelFor(m => m.DateOfJoining)
                    @{
                        string DOJ = "";
                        if (Model.DateOfJoining != null)
                        {
                            DOJ = InsiderTrading.Common.Common.ApplyFormatting(Model.DateOfJoining, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                        }
                    }
                    <div class="input-group date">
                        @Html.TextBox("DateOfJoining", DOJ, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.DateOfJoining).ToString(), Html.ActivityResourceKeyFor(m => m.DateOfJoining).ToString(), new { @class = "form-control" }, 0, 1))
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(m => m.DateOfJoining)
                </div>
            </div>

            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div class="form-group" id="sandbox-container">
                    @Html.LabelFor(m => m.DateOfBecomingInsider)
                    @{
                        string DOBI = "";
                        if (Model.DateOfBecomingInsider != null)
                        {
                            DOBI = InsiderTrading.Common.Common.ApplyFormatting(Model.DateOfBecomingInsider, InsiderTrading.Common.ConstEnum.DataFormatType.Date);

                        }
                    }
                    <div class="input-group date">
                        @Html.TextBox("DateOfBecomingInsider", DOBI, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.DateOfBecomingInsider).ToString(), Html.ActivityResourceKeyFor(m => m.DateOfBecomingInsider).ToString(), new { @class = "form-control" }, 0, 1))
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(m => m.DateOfBecomingInsider)
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Location)
                        @Html.TextBoxFor(m => m.Location, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.Location).ToString(), Html.ActivityResourceKeyFor(m => m.Location).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.Location)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.DesignationName)
                        @Html.TextBoxFor(m => m.DesignationName, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.DesignationName).ToString(), Html.ActivityResourceKeyFor(m => m.DesignationName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.DesignationName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SubDesignationName)
                        @Html.TextBoxFor(m => m.SubDesignationName, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.SubDesignationName).ToString(), Html.ActivityResourceKeyFor(m => m.SubDesignationName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.SubDesignationName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.DepartmentName)
                        @Html.TextBoxFor(m => m.DepartmentName, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.DepartmentName).ToString(), Html.ActivityResourceKeyFor(m => m.DepartmentName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.DepartmentName)
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.GradeName)
                        @Html.TextBoxFor(m => m.GradeName, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.GradeName).ToString(), Html.ActivityResourceKeyFor(m => m.GradeName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.GradeName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CategoryName)
                        @Html.TextBoxFor(m => m.CategoryName, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.CategoryName).ToString(), Html.ActivityResourceKeyFor(m => m.CategoryName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.CategoryName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SubCategoryName)
                        @Html.TextBoxFor(m => m.SubCategoryName, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.SubCategoryName).ToString(), Html.ActivityResourceKeyFor(m => m.SubCategoryName).ToString(), new { @class = "form-control" }, 0, 1))
                        @Html.ValidationMessageFor(m => m.SubCategoryName)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.DIN)
                    @Html.TextBoxFor(m => m.DIN, InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.DIN).ToString(), Html.ActivityResourceKeyFor(m => m.DIN).ToString(), new { @class = "form-control" }, 0, 1))
                    @Html.ValidationMessageFor(m => m.DIN)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PersonalAddress)
                        @Html.TextBoxFor(m => m.PersonalAddress, @InsiderTrading.Common.Common.IsEditable(Html.ReourceKeyFor(m => m.PersonalAddress).ToString(), Html.ActivityResourceKeyFor(m => m.PersonalAddress).ToString(), new { @class = "form-control" }, 0, 1))
                       <br /> @Html.ValidationMessageFor(m => m.PersonalAddress)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <div role="form">
                    <div class="form-group">
                        <label></label> <br />
                        @if (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.Admin || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.COUserType)
                        {
                            @Html.CheckBoxFor(m => m.AllowUpsiUser)<span>&nbsp;</span> @Html.LabelFor(m => m.AllowUpsiUser)
                            @Html.ValidationMessageFor(m => m.AllowUpsiUser)
                        }
                        @Html.HiddenFor(m => m.AllowUpsiUser)
                    </div>
                </div>
            </div>



        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12 pull-left">
        <div role="form">
            @Html.Hidden("confirm_role", ((bool)ViewBag.show_create_role_link))
            <button type="submit" class="btn btn-success pull-left" name="Create" id="nonemp_detail_save"><i class="fa fa-save"></i> @InsiderTrading.Common.Common.getResource("usr_btn_50769")</button>
            @if (objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.Admin || objLoginUserDetails.UserTypeCodeId == InsiderTrading.Common.ConstEnum.Code.COUserType)
            {
                @*<a class="btn btn-success" href='@Url.Action("Index", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_INSIDERUSER_VIEW })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14010")</a>*@
            }
            else
            {
                if (!(bool)ViewBag.show_not_login_user_details)
                {
                    @*<a class="btn btn-success" href='@Url.Action("ViewDetails", "Employee", new { acid = InsiderTrading.Common.ConstEnum.UserActions.VIEW_DETAILS_PERMISSION_FOR_NON_EMPLOYEE_USER, nUserInfoID = Model.UserInfoId })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14010")</a>*@
                }
                else
                {
                    <a class="btn btn-success" href='@Url.Action("Index", "Home", new { acid = "0" })' role="button">@InsiderTrading.Common.Common.getResource("com_btn_14010")</a>
                }

            }
        </div>
    </div>
</div>
<div class="modal fade" id="addRoleMaster" tabindex="-1" role="dialog" aria-labelledby="AddRoleMasterlabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ("@objLoginUserDetails.UserTypeCodeId" == "@InsiderTrading.Common.ConstEnum.Code.EmployeeType" || "@objLoginUserDetails.UserTypeCodeId" == "@InsiderTrading.Common.ConstEnum.Code.NonEmployeeType") {
            $("#txtNonEmpLoginID").attr("disabled", "disabled");
            $("#txtNonEmpEmployeeId").attr("disabled", "disabled");
        }
    });
</script>