@model InsiderTrading.Models.COUserInfoSearchViewModel
@{
    ViewBag.Title = InsiderTrading.Common.Common.getResource("usr_ttl_11233");
    var searchResult = Html.Raw(Json.Encode(TempData["SearchArray"]));
}
            <!-- Content Header (Page header) -->
             
            <section class="content-header">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new Dictionary<string, object> { { "class", "alert alert-danger" }, { "id", "divValidationSummaryModal" } })
                <h1>@InsiderTrading.Common.Common.getResource("usr_ttl_11233")</h1>
                
            </section>
            <!-- Main content -->
            <section class="content  search" gridtype="@ViewBag.GridType">
                <button id="searchBtn" type="button" data-toggle="collapse" class="btn btn-success" data-target="#filter-panel">
                    <i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")
                </button>            
    
            <input type="hidden" value="@ViewBag.Param1" id="1" gridtype="@ViewBag.GridType" />
               
              <form method="post">
                <div id="filter-panel" class="collapse filter-panel">
                    <br />
                    <div class="col-lg-12">
                        <div class="card panel-default">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmployeeId)
                                            @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "6" })
                                            @Html.ValidationMessageFor(m=>m.EmployeeId)
                                        </div>

                                    </div>
                                    <!-- /.col-lg-3  -->
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LoginID)
                                            @Html.TextBoxFor(m => m.LoginID, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "17" })
                                            @Html.ValidationMessageFor(m => m.LoginID)

                                        </div>

                                    </div>
                                    <!-- /.col-lg-3  -->
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.FirstName)
                                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "3" })
                                            @Html.ValidationMessageFor(m => m.FirstName)
                                        </div>

                                    </div>
                                    <!-- /.col-lg-3  -->
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LastName)
                                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "5" })
                                            @Html.ValidationMessageFor(m => m.LastName)

                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CompanyId)

                                            @Html.DropDownListFor(m => m.CompanyId, new SelectList(ViewBag.CompanyDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "8" })
                                        </div>

                                    </div>
                                    <!-- /.col-lg-3  -->
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.StatusCodeId)

                                            @Html.DropDownListFor(m => m.StatusCodeId, new SelectList(ViewBag.StatusDropDown, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "15" })
                                        </div>

                                    </div>
                                    <!-- /.col-lg-3  -->
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.RoleID)

                                            @Html.DropDownListFor(m => m.RoleID, new SelectList(ViewBag.RoleList, "Key", "Value", ""), new { @class = "form-control", gridtype = @ViewBag.GridType, id = "19" })
                                        </div>

                                    </div>
                                    <!-- /.col-lg-3  -->
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmailId)
                                            @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "2" })
                                            @Html.ValidationMessageFor(m => m.EmailId)

                                        </div>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <form role="form">
                                            <button type="button" class="btn btn-success" id="btnSearch"><i class="fa fa-search"></i> @InsiderTrading.Common.Common.getResource("com_btn_14005")</button>
                                            <button type="button" class="btn btn-success" id="btnReset" dt_name="btnReset" dt_gridtype="@ViewBag.GridType"><i class="fa fa-undo"></i> @InsiderTrading.Common.Common.getResource("com_btn_14006")</button>
                                        </form>
                                    </div>
                                </div>
                                <!-- /.row (nested) -->
                            </div>
                            <!-- /.panel-body -->
                        </div>
                        <!-- /.panel -->
                    </div>
                    <!-- /.col-lg-12 -->
                </div>
               </form>
                <div class="div-spacer"></div><br />
                @*<hr>*@
            @if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_CREATE))
            {
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <p>
                            <a class="btn btn-success icon icon-add-user" data-toggle="modal" href='@Url.Action("Create", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_CREATE})' role="button">@InsiderTrading.Common.Common.getResource("usr_btn_11232")</a>
                        </p>
                    </div>
                </div>
            }
                <div class="div-spacer"></div>

                @{Html.RenderAction("Index", "DatatableGrid", new { type = @ViewBag.GridType, btnSearch = "btnSearch", sSortCol = "0", acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_VIEW });}


                <div class="div-spacer"></div><br />
                <div class="form-group">
                  
                </div>
                <div class="div-spacer"></div>

                <div class="div-spacer"></div>
            </section><!-- /.content -->
        @*</div>*@<!-- /.content-wrapper -->
    

@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_VIEW))
{
    @Html.Hidden("View", Url.Action("Edit", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_VIEW, CalledFrom = "View" }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("Edit", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_VIEW, CalledFrom = "View" }) + "&UserInfoID=<UserInfoID>','class':'display-icon icon icon-eye'}" })
}
@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_EDIT))
{ 
@Html.Hidden("Edit", Url.Action("Edit", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_EDIT, CalledFrom = "Edit" }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("Edit", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_EDIT, CalledFrom = "Edit" }) + "&UserInfoID=<UserInfoID>','class':'display-icon icon icon-edit'}" })
}

@if (InsiderTrading.Common.Common.CanPerform(InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_DELETE))
{ 
@*Html.Hidden("Delete", Url.Action("Delete", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_DELETE }))*@
@*@Html.Hidden("deleteRowURL", Url.Action("DeleteFromGrid", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_DELETE, CalledFrom = "Delete" }), new { name = "deleteRowURL", gridtype = @ViewBag.GridType, @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'name': 'deleteRow','ID':'UserInfoID','key':'<UserInfoID>','UserName':'Employee Name - <usr_grd_11065> & User Name - <usr_grd_11067>','UserInfoID':'<UserInfoID>','formId':82,'text':'','href':'javascript:void(0);','class':'display-icon icon icon-delete btnDeleteCOUser'}" })*@
@Html.Hidden("deleteRowURL", Url.Action("DeleteFromGrid", "UserDetails", new { acid = InsiderTrading.Common.ConstEnum.UserActions.CRUSER_COUSER_DELETE, CalledFrom = "Delete" }), new { @class = "gridtypecontrol", ctrtype = "link", gridtype = @ViewBag.GridType, gridcolumntype = @ViewBag.GridType + "_usr_grd_11073", param = "{'text':'', 'href':'javascript:void(0);', 'name':'deleteRow', 'queryString':'[ {ID:\"UserInfoID\", key:\"<UserInfoID>\"},{ID:\"UserName\", key:\"Employee Name - <usr_grd_11065> & User Name - <usr_grd_11067>\"},{ID:\"formId\", key:\"82\"} ]', 'class':'display-icon icon icon-delete btnDeleteCOUser'}" })
}

@Html.Hidden("SearchResult", searchResult)
@Scripts.Render("~/bundles/SearchResult")








