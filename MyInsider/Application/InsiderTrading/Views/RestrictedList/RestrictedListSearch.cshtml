@model InsiderTrading.Models.RestrictedListModel
@{
    List<InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel> List = null;
    List<InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel> PreclearanceRequestList = (List<InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel>)TempData["List"];
    List<InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel> PreclearanceRequestList_OS = (List<InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel>)TempData["PreClrList"];
    TempData.Keep();
    if ((bool)ViewBag.RequiredModule)
    {
        List = PreclearanceRequestList_OS;
    }
    else
    {
        List = PreclearanceRequestList;
    }
}
@if (ViewBag.IsFormEtemplateMsgShow)
{
    <h5 style="color:red;margin-left:15px">
        @InsiderTrading.Common.Common.getResource("mp_msg_50590")
    </h5>
}
<section class="content-header">
    <h1 style="color: black !important; font-size: 21px !important;">
        @InsiderTrading.Common.Common.getResource("rl_ttl_50002")
    </h1>
</section>
<script src="~/Scripts/popup.js"></script>

@*<input type="hidden" id="BSECode" value="@ViewBag.BSECode" />*@
@using (Html.BeginForm("RestrictedListSearch", "RestrictedList", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <section class="content">
        <div class="row">
            <div class="col-lg-12">
                <div class="card panel-default">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CompanyName)
                                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "txtCompany", data_url = Url.Action("GetList", "RestrictedList") })
                                    @Html.HiddenFor(model => model.RLCompanyId)
                                    @Html.HiddenFor(model => model.CompanyName)
                                </div>
                            </div>

                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ISINCode)
                                    @Html.TextBoxFor(model => model.ISINCode, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "txtISINCode", data_url = Url.Action("GetISINList", "RestrictedList") })
                                    @Html.HiddenFor(model => model.ISINCode)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BSECode)
                                    @Html.TextBoxFor(model => model.BSECode, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "txtBSECode", data_url = Url.Action("GetBSCList", "RestrictedList") })
                                    @Html.HiddenFor(model => model.BSECode)
                                </div>
                            </div>

                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NSECode)
                                    @Html.TextBoxFor(model => model.NSECode, new { @class = "form-control", gridtype = @ViewBag.GridType, id = "txtNSECode", data_url = Url.Action("GetNSCList", "RestrictedList") })
                                    @Html.HiddenFor(model => model.NSECode)
                                    <input type="hidden" id="myNames" value="@ViewBag.AlertMsg" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @if (ViewBag.IsPreClearanceAllow)
                                    {
                                        <button type="submit" name="Search" class="btn btn-success" id="btnSave" disabled="disabled"><i class="fa fa-search"> @InsiderTrading.Common.Common.getResource("com_btn_14005")</i></button>
                                    }
                                    else
                                    {
                                        <button type="submit" name="Search" class="btn btn-success" id="btnSave"><i class="fa fa-search"> @InsiderTrading.Common.Common.getResource("com_btn_14005")</i></button>
                                    }
                                </div>
                            </div>
                        </div>
                        @if (ViewBag.FormFRequire == @InsiderTrading.Common.ConstEnum.Code.CompanyConfig_YesNoSettings_Yes)
                        {
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <a href='@Url.Action("Download", "Document", new { nDocumentDetailsID = ViewBag.DocumentId, GUID = "", sDocumentName = "", sFileType = "", acid = @InsiderTrading.Common.ConstEnum.UserActions.INSIDER_DOCUMENT_VIEW })' class="pull-right"> Download Form F</a>
                                    @*<a href='@Url.Action("DownloadFormF", "RestrictedList", new { nDocumentDetailsID = ViewBag.DocumentId })' class="pull-right"> Download Form F</a>*@
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    </section>
}

@*For View*@
@if (ViewBag.IsPreClearanceAllow)
{
    if (ViewBag.RequiredModule)
    {
        if (ViewData["PreClrModel"] == null)
        {
            <div>
                @{ Html.RenderAction("CreatePreclearanceOS", "PreclearanceRequestNonImplCompany", new { acid = ViewBag.Acid, search = ViewBag.RLSearchAudId, company = ViewBag.RLCompId, backacid = ViewBag.IRListSearch, module = ViewBag.RequiredModule });}
            </div>
        }
        else
        {
            var model = (InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel)ViewData["PreClrModel"];
            <div>
                @{ Html.RenderPartial("~/Views/PreclearanceRequestNonImplCompany/CreatePreclearanceOS.cshtml", model); }
            </div>
        }
    }
    else { 
        if (ViewData["PreClrModel"] == null)
        {
            <div>
                @{ Html.RenderAction("Create", "PreclearanceRequestNonImplCompany", new { acid = ViewBag.InsiDiscoPreCleRequestNIC, search = ViewBag.RLSearchAudId, company = ViewBag.RLCompId, backacid = ViewBag.IRListSearch, module = ViewBag.RequiredModule });}
            </div>
        }
        else
        {
            var model = (InsiderTrading.Models.PreclearanceRequestNonImplCompanyModel)ViewData["PreClrModel"];
            <div>
                @{ Html.RenderPartial("~/Views/PreclearanceRequestNonImplCompany/Create.cshtml", model); }
            </div>
        }
    }
}
@if (ViewBag.GridAllow)
{
    <section class="content-header">
        <h4 style="margin: -31px 0px -3px 0px;">
            @InsiderTrading.Common.Common.getResource("rl_lbl_50587")
        </h4>
    </section>
    @*For Grid*@
    <div style="margin: 0px 9px 0px 10px;">
        @{
           Html.RenderAction("Index", "DatatableGrid", new { type = InsiderTrading.Common.ConstEnum.GridType.RestrictedListMultiplePreClearanceRequestDetails, btnSearch = "", sSortCol = "1", acid = InsiderTrading.Common.ConstEnum.UserActions.INSIDER_RESTRICTED_LIST_SEARCH, bIsPagination = false, bIsServerSide = false, sDom = "lrt" });
        }
    </div>
    if (ViewBag.IsFormEtemplateMsgShow == false)
    {
        <section class="content">
            <div class="row">
                <div class="col-lg-12">
                    <div>
                        <div>
                            <div class="row">
                                <div class="col-xs-12" style="margin: -15px 0px 0px 0px;">
                                    
                                        <button type="button" class="btn btn-success" id="SaveAllBtn" data-toggle="modal" data-target="#myModal">@InsiderTrading.Common.Common.getResource("rl_btn_50585")</button>
                                    
                                   
                                        <button type="button" class="btn btn-success" id="DeleteAllBtn" data-toggle="modal" data-target="#myModalforDelete">@InsiderTrading.Common.Common.getResource("rl_btn_50586")</button>
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
}


    @if ((bool)ViewBag.RequiredModule)
    {
        @Html.Hidden("EditPreclearance", Url.Action("Edit_OS", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities, formEAllowed = ViewBag.IsFormEtemplateMsgShow }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = InsiderTrading.Common.ConstEnum.GridType.RestrictedListMultiplePreClearanceRequestDetails + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("Edit", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_EDIT, formEAllowed = ViewBag.IsFormEtemplateMsgShow }) + "&sequenceNo=<SequenceNo>','class':'display-icon icon icon-edit'}" })
    }
    else{
        @Html.Hidden("EditPreclearance", Url.Action("Edit", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_EDIT, formEAllowed = ViewBag.IsFormEtemplateMsgShow }), new { @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = InsiderTrading.Common.ConstEnum.GridType.RestrictedListMultiplePreClearanceRequestDetails + "_usr_grd_11073", param = "{'text':'','href':'" + Url.Action("Edit", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_EDIT, formEAllowed = ViewBag.IsFormEtemplateMsgShow }) + "&sequenceNo=<SequenceNo>','class':'display-icon icon icon-edit'}" })
    }


    @if ((bool)ViewBag.RequiredModule)
    {
        @Html.Hidden("deleteRowURL", Url.Action("Delete_OS", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PreclearanceRequestOtherSecurities, formEAllowed = ViewBag.IsFormEtemplateMsgShow }), new { name = "deleteRowURL", gridtype = @ViewBag.GridType, @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = InsiderTrading.Common.ConstEnum.GridType.RestrictedListMultiplePreClearanceRequestDetails + "_usr_grd_11073", param = "{'name': 'deleteRow','ID':'sequenceNo','key':'<SequenceNo>','formEAllowed':'" + ViewBag.IsFormEtemplateMsgShow + "','text':'','href':'javascript:void(0);','class':'display-icon icon icon-delete'}" })
    }
    else
    {
        @Html.Hidden("deleteRowURL", Url.Action("Delete", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_DELETE, formEAllowed = ViewBag.IsFormEtemplateMsgShow }), new { name = "deleteRowURL", gridtype = @ViewBag.GridType, @class = "gridtypecontrol", ctrtype = "link", gridcolumntype = InsiderTrading.Common.ConstEnum.GridType.RestrictedListMultiplePreClearanceRequestDetails + "_usr_grd_11073", param = "{'name': 'deleteRow','ID':'sequenceNo','key':'<SequenceNo>','formEAllowed':'" + ViewBag.IsFormEtemplateMsgShow + "','text':'','href':'javascript:void(0);','class':'display-icon icon icon-delete'}" })
    }


<script type="text/javascript">
    function SearchCompany(cmpname) {
        $(function () {
            var CompanyName = cmpname;
            $.ajax({
                url: '@Url.Content("~/RestrictedList/GetExistNSEBSEDetailsJSON/")',
                type: "GET",
                data: { CompanyName: CompanyName },
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.agent != 0) {
                        $("#txtCompany").val(data[0].CompanyName);
                        $("#txtISINCode").val(data[0].ISINCode);
                        $("#txtNSECode").val(data[0].NSECode);
                        $("#txtBSECode").val(data[0].BSECode);
                    }
                }
            });
        });
    }

    $(function () {
        $('#txtCompany').autocomplete({
            minLength: 0,
            source: function (request, response) {
                var url = $(this.element).data('url');

                $.getJSON(url, { term: request.term }, function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.CompanyName,
                            value: item.CompanyName
                        }
                    }));
                })
            },
            select: function (event, ui) {
                $(event.target).val('').next('input[type=hidden]').val('');
                var cmpname = ui.item.label;
                SearchCompany(cmpname)
            },
            change: function (event, ui) {
                if (!ui.item) {
                    $(event.target).val('').next('input[type=hidden]').val('');
                }
            }
        });
    })

    $(function () {
        $('#txtBSECode').autocomplete({
            minLength: 0,
            source: function (request, response) {
                var url = $(this.element).data('url');

                $.getJSON(url, { term: request.term }, function (data) {

                    response($.map(data, function (item) {
                        return {
                            label: item.BSECode,
                            value: item.RlCompanyId
                        }
                    }));
                })
            },
            select: function (event, ui) {
                $(event.target).next('input[type=hidden]').val(ui.item.label);
                var BSCCode = ui.item.label;
                SearchCompany(BSCCode)
            },
            change: function (event, ui) {
                if (!ui.item) {
                    $(event.target).val('').next('input[type=hidden]').val('');
                }
            }
        });
    })

    $(function () {
        $('#txtISINCode').autocomplete({
            minLength: 0,
            source: function (request, response) {
                var url = $(this.element).data('url');

                $.getJSON(url, { term: request.term }, function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ISINCode,
                            value: item.RlCompanyId
                        }
                    }));
                })
            },
            select: function (event, ui) {
                $(event.target).next('input[type=hidden]').val(ui.item.label);
                var ISINCode = ui.item.label;
                SearchCompany(ISINCode)
            },
            change: function (event, ui) {
                if (!ui.item) {
                    $(event.target).val('').next('input[type=hidden]').val('');
                }
            }
        });
    })

    $(function () {
        $('#txtNSECode').autocomplete({
            minLength: 0,
            source: function (request, response) {
                var url = $(this.element).data('url');

                $.getJSON(url, { term: request.term }, function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.NSECode,
                            value: item.RlCompanyId
                        }
                    }));
                })
            },
            select: function (event, ui) {
                $(event.target).next('input[type=hidden]').val(ui.item.label);
                var BSCCode = ui.item.label;
                SearchCompany(BSCCode)
            },
            change: function (event, ui) {
                if (!ui.item) {
                    $(event.target).val('').next('input[type=hidden]').val('');
                }
            }
        });
    })
</script>
<script type="text/javascript">
    var preClrList = @Html.Raw(Json.Encode(List))
    $(document).ready(function () {
        var gridAllow = '@ViewBag.GridAllow'
        if (gridAllow == 'True') {
            for (var i = 0; i < preClrList.length; i++) {
                var datatable1 = $('table[name="DatatableGrid"][gridtype=@InsiderTrading.Common.ConstEnum.GridType.RestrictedListMultiplePreClearanceRequestDetails]').dataTable();
                datatable1.fnAddData({
                    'SequenceNo': preClrList[i]["SequenceNo"], 'rl_grd_50576': preClrList[i]["CompanyName"], 'rl_grd_50577': preClrList[i]["TradedFor"], 'rl_grd_50578': preClrList[i]["EmployeeName"], 'rl_grd_50579': preClrList[i]["TransactionType"], 'rl_grd_50580': preClrList[i]["SecurityType"], 'rl_grd_50581': preClrList[i]["SecuritiesToBeTradedQty"], 'rl_grd_50582': preClrList[i]["SecuritiesToBeTradedValue"], 'rl_grd_50583': preClrList[i]["ModeOfAcquisition"], 'rl_grd_50584': preClrList[i]["DEMATAccountNumber"]
                });
            }
        }
    });
</script>

<script>
    $("body").css({ 'overflow': 'scroll', 'height': 'auto' })
</script>

<!--Use for Create Restricted List Save All Confirmation PopUp-->
<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    @InsiderTrading.Common.Common.getResource("dis_msg_17092")
                </div>
                <div class="modal-footer">
                    @if ((bool)ViewBag.RequiredModule)
                    {
                        //using (Html.BeginForm("SaveAll_OS", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_SAVEALL, formId =66}, FormMethod.Post))
                        //{
                            @Html.AntiForgeryToken()
                        <input type="hidden" name="SPName" id="SPName" />
                        <button type="submit" id="btnYesOS" class="btn btn-success">@InsiderTrading.Common.Common.getResource("tra_btn_16459")</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("com_lbl_14022")</button>
                            //}
                        }
                    else{
                            using (Html.BeginForm("SaveAll", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_SAVEALL, formId=67 }, FormMethod.Post))
                            {
                            @Html.AntiForgeryToken()
                        <input type="hidden" name="SPName" id="SPName" />
                        <button type="submit" id="btnYes" class="btn btn-success">@InsiderTrading.Common.Common.getResource("tra_btn_16459")</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("com_lbl_14022")</button>
                        } 
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#btnYes').click(function () {
        $('#myModal').modal('hide');
        $("body").addClass("loading");
    });
</script>

<script>
    $('#btnYesOS').click(function () {
        $('#myModal').modal('hide');
        $("body").addClass("loading");
    });



    $('#btnYesOS').click(function () {
                
            var data = { 'acid': '@InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_SAVEALL'};

                $.ajax({
                    url: '@Url.Action("SaveAll_OS", "PreclearanceRequestNonImplCompany")',
                    method: 'POST',
                    headers: getRVToken(),
                    data: data,
                    datatype: 'json',
                    success: function (data) {                       
                        if (data.status) {
                            showMessage(data.Message, true);
                            
                        }
                        else {
                            showMessage(data.Message, false);
                        }
                        window.location.href = data.redirectTo;
                    }
                });

            });

</script>

<!--Use for Create Restricted List Delete All Confirmation PopUp-->
<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="myModalforDelete" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    @InsiderTrading.Common.Common.getResource("rl_msg_50592")
                </div>
                <div class="modal-footer">
                    @if ((bool)ViewBag.RequiredModule)
                    { 
                        using (Html.BeginForm("DeleteAll_OS", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_DELETEALL }, FormMethod.Post))
                        {
                            <input type="hidden" name="SPName" id="SPName" />
                            <button type="submit" id="btnYes" class="btn btn-success">@InsiderTrading.Common.Common.getResource("tra_btn_16459")</button>
                            <button type="button" class="btn btn-danger" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("com_lbl_14022")</button>
                        }
                    }
                    else
                    {
                       using (Html.BeginForm("DeleteAll", "PreclearanceRequestNonImplCompany", new { acid = InsiderTrading.Common.ConstEnum.UserActions.PRECLEARANCEREQUESTNONIMPLEMENTINGCOMPANY_DELETEALL }, FormMethod.Post))
                        {
                            <input type="hidden" name="SPName" id="SPName" />
                            <button type="submit" id="btnYes" class="btn btn-success">@InsiderTrading.Common.Common.getResource("tra_btn_16459")</button>
                            <button type="button" class="btn btn-danger" data-dismiss="modal">@InsiderTrading.Common.Common.getResource("com_lbl_14022")</button>
                        } 
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#btnYes').click(function () {
        $('#myModalforDelete').modal('hide');
    });
</script>


