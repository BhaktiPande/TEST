@model InsiderTrading.Models.PasswordManagementModel
@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    var objComCodeSL = new InsiderTrading.SL.ComCodeSL();
    string LogoImagePath = Server.MapPath("~") + "/images/Logos/" + InsiderTrading.Common.ConstEnum.CLIENT_DB_NAME + "/" + InsiderTrading.Common.ConstEnum.CLIENT_DB_NAME + "_320X105.jpg";
    string sLogoImageUrl = @Url.Content("~/images/Logos/" + InsiderTrading.Common.ConstEnum.CLIENT_DB_NAME) + "/" + @InsiderTrading.Common.ConstEnum.CLIENT_DB_NAME + "_320X105.jpg";
    InsiderTrading.Common.LoginUserDetails objLoginUserDetails = (InsiderTrading.Common.LoginUserDetails)InsiderTrading.Common.Common.GetSessionValue(InsiderTrading.Common.ConstEnum.SessionValue.UserDetails);
    string sSelectedcompany = objLoginUserDetails!=null?objLoginUserDetails.CompanyName:"";
    
    InsiderTrading.Models.PasswordConfigModel passwordModel = new InsiderTrading.Models.PasswordConfigModel();
    passwordModel = (InsiderTrading.Models.PasswordConfigModel)TempData["PasswordConfigModel"];
    TempData.Keep();
}
@{
    ViewBag.Title = "Change Password";
}
<script type="text/javascript">
    $(window).load(function () {
      
        var pageURL = $(location).attr("href");
        var RemoveProtocol = pageURL.substr(8, 50);
        var ClientName = RemoveProtocol.split('.')[0];
        $("#CompanyName").val(ClientName); 

        var length = $('#ddlCompanyName').children('option').length;
        if (length == 2) {
            $("#ddlCompanyName").prop("selectedIndex", 1);
            $('#NewPassword').next('input').focus();
        }
        else {
            $("#ddlCompanyName").prop("selectedIndex", 0);
        }
    })
</script>
@*<h2>@ViewBag.Title</h2>*@
@if (File.Exists(LogoImagePath))
{
    <div class="container login-logo" style="vertical-align: middle;">
        <img src="@Url.Content("~/images/MyInsider_Normal_Logo.png")" style="float: left;vertical-align:middle;">
        <img src="@sLogoImageUrl" style="float: right;vertical-align:middle;min-width: 320px;max-width: 320px;">
    </div>
}
else {
    <div class="container login-logo">
        <img src="@Url.Content("~/images/MyInsider_Normal_Logo.png")" class="img img-responsive center-block">
    </div>
}

<section class="content">
    <div class="striped login">
        <div class="container">
            <div style="color:red;font-size:20px">@ViewBag.ErrorMessage</div>
            <div class="row">
                <div class="mx-auto login-block">
                    <div class="login-panel card panel-default">
                        <div class="card-header">
                            <h3 class="card-title text-center">Set Password</h3>
                        </div>
                        <div class="card-body">
                            @using (Html.BeginForm("SetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", id = "ChangePassword", role = "form", @autocomplete = "off" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)
                            <fieldset>
                                @if (System.Configuration.ConfigurationManager.AppSettings["CompanyType"] == "Dropdownlist")
                                {
                                    <div class="row form-group">
                                        @Html.LabelFor(model => model.CompanyID, new { @class = "login-label " })
                                        @Html.DropDownListFor(model => model.CompanyID, new SelectList(ViewBag.CompaniesDropDown, "Key", "Value", sSelectedcompany), new { id = "ddlCompanyName", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.CompanyID)
                                    </div>
                                }
                                else
                                {
                                    if (@ViewBag.URLCompanyName == "IgnoreCompanyName")
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.stxtCompanyName, new { @class = "login-label", @for = "textinput" })
                                            @Html.TextBoxFor(m => m.CompanyID, new { @class = "form-control", @autocomplete = "off", placeholder = @ViewData["WaterMarkCompanyName"] })
                                            @Html.ValidationMessageFor(m => m.CompanyID)
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.stxtCompanyName, new { @class = "login-label", @for = "textinput" })
                                            @Html.TextBoxFor(m => m.CompanyID, new { @class = "form-control", @autocomplete = "off", Value = @ViewBag.URLCompanyName, @ReadOnly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.CompanyID)
                                        </div>
                                    }
                                }
                                <div class="row form-group">
                                    @Html.LabelFor(model => model.NewPassword, new { id = "NewPassword", @class = "login-label " })
                                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NewPassword)
                                </div>
                                <div class="row form-group">
                                    @Html.LabelFor(model => model.ConfirmNewPassword, new { @class = "login-label " })
                                    @Html.PasswordFor(model => model.ConfirmNewPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                                </div>

                                <div class="form-group">
                                    <input type="submit" value="Save" class="btn btn-success btn-lg" name="Create" />
                                </div>
                                @*@Html.HiddenFor(model => model.HashValue)*@
                                <input type="hidden" name="HashValue" value="@ViewBag.Hashcode" />
                            </fieldset>
                            }

                        </div>
                    </div>
                </div>
                <div class="login-panel card panel-default card-body">
                    @if (passwordModel != null)
                    {
                        @Html.Partial("~/Views/Account/_PasswordPolicyNote.cshtml", passwordModel)
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@Scripts.Render("~/bundles/jqueryval")
@Styles.Render("~/Content/css")

