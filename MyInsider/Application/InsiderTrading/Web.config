<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
    <!---CSRF (For IIS6/IIS7 in Classic ASP.NET mode)-->
    <section name="csrfSettings" type="Idunno.AntiCsrf.Configuration.CsrfSettings, Idunno.AntiCsrf" />
  <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /><section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>
  <!---CSRF (For IIS6/IIS7 in Classic ASP.NET mode)-->
  <csrfSettings cookieName="__CSRFCOOKIE" formFieldName="__CSRFTOKEN" detectionResult="RaiseException" errorPage="PageNotFound.html" />
  <connectionStrings>
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfE6UQX8hAX3i/VWmdpnIpoZi6o9Yxnb0/vCUpwhdF526YXZRa6/wjwF+4Y2gXKzDF5/VKcsdyT+EGnQr/Fi/Q3SY3IUji3HBaDQF7/GnVhBhsFkNjEkKLvVF1FrEXBjp0ctP9kGs30U6nWMzypD9wJrmunU2+IdLXAvGiPNOCsplr+NS4oWNxpHYqNgb5AXv5lVvxxQCyHzng==" providerName="System.Data.SqlClient" />-->

    <!--ESPS-004-->
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfE6UQX8hAX3i8W+WFhReQqWd7Ko5PeEvVt8RN8RNhd3Zpsu6o2lgIsG1Za7Ymg5h2QmVUYDASpobGTqpX+m3ZE/ncDUKKCr25jDDDf6k+zZfbcy3n5lZQee+VBqAOtmMI8XJYttPPS8li8aI804KymWv41LihY3Gkdio2BvkBe/mVW/HFALIfOe" providerName="System.Data.SqlClient" />-->
    
    <!--ESPS-DB-03-->
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfE6UQX8hAX3i8W+WFhReQqWd7Ko5PeEvVt8RN8RNhd3Zpsu6o2lgIsG1Za7Ymg5h2QmVUYDASpobGTqpX+m3ZE/ncDUKKCr25jDDDf6k+zZfbcy3n5lZQee+VBqAOtmMI8XJYttPPS8li8aI804KymWv41LihY3Gkdio2BvkBe/mVW/HFALIfOe" providerName="System.Data.SqlClient" />-->
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfESfYSQFVW9X8ppdZNPthnd7RtsXFdD9wD+rquZ+uxWbJIP239TZo099QTNakyTqsvpBdlRD0ZLwG5SZySkxULYBjLiADatiKpq8l+MqhbOBugqi44asRbK3gZDyw0DeqdiHDluLqE2B+HqzMbWGaFT/296139ITqWfNjbsOWQWyH/1P4kP4TEqXRfiiQ6uq1FcQ24d9143qQ==" providerName="System.Data.SqlClient" />-->

    <!--ESPS-p2FS SERVER-->    
    <add name="DefaultConnection" connectionString="+IyWX8SJvfGsHIDM7C99UPVWmdpnIpoZi6o9Yxnb0/vCUpwhdF526YXZRa6/wjwF+4Y2gXKzDF5/VKcsdyT+EGnQr/Fi/Q3SY3IUji3HBaCvLl1wdyzYpWaavANfOD5QLT/ZBrN9FOrIZCcplnQSJImC3pvjbdMfoEUFD/i7S2pdJlnNuLJAq8fkZcyQ8ko7ffWdk/V9Mto=" providerName="System.Data.SqlClient" />

<!--ESPS-->
<!--<add name="DefaultConnection" connectionString="+IyWX8SJvfE6UQX8hAX3iyEC/lCIeHGx7Nux/Z+X77xf5pDj/f91DP+yLSRFB9q9u9Ue15/6vv1mrEjqHsht5egTkf7wga8GEHWvzzJiynhLgSnvPxoETounWL3hRSfr9VfPjjmLF77N/U/V6rs4kf9vetd/SE6lnzY27DlkFsh/9T+JD+ExKl0X4okOrqtRXENuHfdeN6k=" providerName="System.Data.SqlClient"/>-->
    <!--ESPS-TS-01-->
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfE6UQX8hAX3i/VWmdpnIpoZi6o9Yxnb0/vCUpwhdF526YXZRa6/wjwF+4Y2gXKzDF5/VKcsdyT+EGnQr/Fi/Q3SY3IUji3HBaCvLl1wdyzYpWaavANfOD5QLT/ZBrN9FOrIZCcplnQSJImC3pvjbdMfoEUFD/i7S2pdJlnNuLJAq8fkZcyQ8ko7ffWdk/V9Mto=" providerName="System.Data.SqlClient"/>-->
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfHEi7HRwUSVh7GwY8EQ4xcF7RtsXFdD9wD+rquZ+uxWbJIP239TZo099QTNakyTqsvpBdlRD0ZLwG5SZySkxULYBjLiADatiKpq8l+MqhbOBlNrRQisRG7kYhw5bi6hNgc9sp9J6USGDMTX2XlqSG5PABA/97cwPCpgyaRYOT4S1TBalHwJlbfbMqwdW4a69ECXe7N1/mmRAg==" providerName="System.Data.SqlClient"/>-->

    <!--ESPD-0012-->
    <!--<add name="DefaultConnection" connectionString="+IyWX8SJvfHrG/y9IZvCvYwl9az/qCucBHHMGzQLQU3s27H9n5fvvF/mkOP9/3UM/7ItJEUH2r271R7Xn/q+/WasSOoeyG3l6BOR/vCBrwYQda/PMmLKeEuBKe8/GgROiapsmJ4Z1xCCkLYunC7feGA1Qj1bURRDnzY27DlkFsh/9T+JD+ExKl0X4okOrqtRXENuHfdeN6k=" providerName="System.Data.SqlClient" />-->
    
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!--<add key="SSRS_URL" value="http://10.10.60.19/ReportServer_SSRSINSTANCE/" />
    <add key="SSRS_UID" value="wxo5RenOkGQ=" />
    <add key="SSRS_PASS" value="PNVri7HmRtdtwoEEjRaUYg==" />-->
    <add key="SSRS_URL" value="http://esps-ts-01/ReportServer_SSRSINSTANCE/" />
    <add key="SSRS_UID" value="wxo5RenOkGQ=" />
    <add key="SSRS_PASS" value="y3bngIM1aEyz96lwnCv0sg==" />
    <add key="SSRS_DomainName" value="iw82mmFPPK2v2qOZTB6Xsg==" />
    <add key="SSRSReportPath" value="/Vigilante/" />
    <!--Each value for salt should be in range : 0-255-->
    <add key="Salt" value="99-102-245-9-16-230-97-24-80-31-38-64-146-69-177-4-98-105-64-153-1-215-64-056-103-130-168-64-242-133" />
    <add key="EnableAuthorization" value="true" />
    <add key="Document" value="D:\UAT\Vigilante\Application\InsiderTrading\Document\" />
    <add key="IsofficeInstalled" value="false" />
    <add key="ExportDocument" value="E:\Projects\InsiderTrading\CurrentDevelopment\EDOfficeCodeDevelopment\Vigilante\InsiderTrading_WebSite\INSIDERTRADING\Document\Temp\" />
    <add key="EncryptionString" value="Ps46klO0argt3mqY7FuwHt9zHQjv64LX" />
    <add key="Binaries" value="D:\UAT\Vigilante\Application\InsiderTrading\Binaries" />
    <add key="elmah.mvc.disableHandler" value="false" />
    <add key="elmah.mvc.disableHandleErrorFilter" value="false" />
    <add key="elmah.mvc.requiresAuthentication" value="false" />
    <add key="elmah.mvc.IgnoreDefaultRoute" value="false" />
    <add key="elmah.mvc.allowedRoles" value="*" />
    <add key="elmah.mvc.allowedUsers" value="*" /> 
    <add key="elmah.mvc.route" value="elmah" />
    <!-- Keys for EnableSSL. -->
    <add key="EnableSsl" value="true" />
    <!-- Keys for UseDefaultCredentials. -->
    <add key="UseDefaultCredentials" value="false" />
    <!-- Key for Company type 1) Dropdownlist 2) Textbox. -->
    <add key="CompanyType" value="Dropdownlist" />
    <!-- Key for showing which name on the application on the Top of the page along with prefix Welcome 1) LoginID 2)  FirstName 3) FirstNameAndLastName. -->
    <add key="DisplayName" value="LoginID" />
    <!--After successful SSO login, when user logged out then use below URL to go back to SSO Login page.-->
    <add key="SSOURL" value="https://10.10.60.18/Trunk/VigilanteSSO/" />
    <add key="SSOLogfilePath" value="D:\UAT\Vigilante\Application\SSOLogs\" />
    <add key="ClientPublicCertificate" value="D:\UAT\Vigilante\Application\InsiderTrading\ClientPublicCertificate\" />
	  <add key="ForgotPasswordDomainURL" value="https://" />
    <add key="SSOLogStoreLocation" value="textfile" />
    <!--==============ADFS Settings=================-->
    <add key="IsOLMID" value="1" />
       <!--MyInsider_Airtel = lGcs6zxg+0S2jwP0zeVdbpd7s3X+aZEC"-->
    <add key="Airtel" value="lGcs6zxg+0S2jwP0zeVdbpd7s3X+aZEC" /> 
    <add key="AirtelADFSURL" value="https://ssouat.airtel.com/adfs/ls/?wa=wsignin1.0%26wtrealm=https%3a%2f%2fvigilanteuat.airtel.com/ADFS/AssertionConsumerAirtel" />
    <!--Watermark text on Login page.-->
    <add key="ActivateWaterMark" value="false" />
    <add key="DomainName" value="esopdirect.com" />
    <add key="WaterMarkTextForCompanyName" value="Please enter company as RBL Bank" />
    <add key="WaterMarkTextForLoginId" value="Please enter your PAN number as Login ID" />
    <add key="WaterMarkTextForEmailId" value="Please enter your Email ID" />
    <add key="SendMailWithAttachment" value="0" />
    <add key="mandrillServer" value="smtp.mandrillapp.com" />
    <add key="mandrillUserName" value="ESOP Direct" />
    <add key="mandrillPWD" value="suAD7AdfJNspNHjvRP4jQw" />
    <add key="IsMyInsiderLoginPage" value="1" />
    <add key="IsADFSEnabled" value="0" />
    <add key="UrlRefererAuthority" value="ssouat" />
    <add key="ADFSCompanyDBName" value="giY6mlMHeZM=" />
    <add key="ADFSUrl" value="https://ssouat.airtel.com/adfs/ls/?wa=wsignin1.0%26wtrealm=https%3a%2f%2fvigilanteuat.airtel.com/ADFS/AssertionConsumerAirtel" />
  </appSettings>
  <system.web>
    <pages buffer="true" validateRequest="true" />
    <identity impersonate="false" userName="ESPS-0004\AppUser" password="Es0pM0n0ge1" />
    <httpHandlers>
      <add path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" validate="false" />
    </httpHandlers>
    <authentication mode="Windows" />
    <compilation debug="true" targetFramework="4.5">
      <!--debug flag set false to minified js file -->
      <assemblies>
        <add assembly="Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
        <add assembly="Microsoft.ReportViewer.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
        <add assembly="Microsoft.Build.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
      </assemblies>
      <buildProviders>
        <add extension=".rdlc" type="Microsoft.Reporting.RdlBuildProvider, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
      </buildProviders>
    </compilation>
    <httpRuntime targetFramework="4.5" executionTimeout="600" maxRequestLength="2000000" useFullyQualifiedRedirectUrl="false" minFreeThreads="8" minLocalRequestFreeThreads="4" appRequestQueueLimit="100" requestLengthDiskThreshold="8192" enableVersionHeader="false" />
    <globalization enableClientBasedCulture="false" culture="en-IN" uiCulture="en-IN" />
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
      <!---CSRF (For IIS6/IIS7 in Classic ASP.NET mode)-->
      <add name="AntiCSRF" type="Idunno.AntiCsrf.AntiCsrfModule, Idunno.AntiCsrf" />
    </httpModules>
    <!-- added cookie name attribute to hide default cookie of name "ASP NET_Session_id" -->
    <sessionState mode="InProc" cookieless="false" timeout="50" cookieName="v_au" />
    <!-- NOTE: In Following configuration setting
           "httpOnlyCookies = true" will make all server cookies read only and not editable to user
           In case of site is hosted on SSL ie with "https://" then set  "requiredSSL = true"
           If site is using "http://" only then set "requiredSSL = false"
        -->
    <httpCookies httpOnlyCookies="false" requireSSL="false" />
  </system.web>
  <system.webServer>
    <httpErrors errorMode="Custom">
      <remove statusCode="403" subStatusCode="-1" />
      <error statusCode="403" prefixLanguageFilePath="" path="PageNotFound.htm" responseMode="Redirect" />
    </httpErrors>
    <modules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
      <add name="CustomHeaderModule" type="MvcExtensions.Infrastructure.CustomServerName" />
      <!--CSRF(If  IIS7 in integrated mode)-->
      <add name="AntiCSRF" type="Idunno.AntiCsrf.AntiCsrfModule, Idunno.AntiCsrf" />
      <!--<remove name="FormsAuthentication" />-->
      <add name="WSFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <!--<remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="ReportViewerWebControlHandler" preCondition="integratedMode" verb="*" path="Reserved.ReportViewerWebControl.axd" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />-->
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />

      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="ReportViewerWebControlHandler" preCondition="integratedMode" verb="*" path="Reserved.ReportViewerWebControl.axd" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    
    </handlers>
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="1073741824" />
        <verbs allowUnlisted="true">
          <add verb="OPTIONS" allowed="false" />
          <add verb="TRACE" allowed="false" />
        </verbs>
      </requestFiltering>
    </security>
    <httpProtocol>
      <customHeaders>
        <remove name="X-Powered-By" />
        <remove name="Server" />
        <remove name="X-AspNetMvc-Version" />
      </customHeaders>
    </httpProtocol>
    <!-- Following section of "staticContent" is added to allow font file to load of extenstion of ".woff2"-->
    <staticContent>
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="font/woff2" />
    </staticContent>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
    </assemblyBinding>
  <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). --><legacyHMACWarning enabled="0" /><!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --></runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <elmah>
    <errorLog type="Elmah.SqlErrorLog, Elmah" connectionString="data source=10.10.60.19;initial catalog=Vigilante_Soft_Corner;persist security info=True;user id=sa;Password=Password;MultipleActiveResultSets=True;" />
    <security allowRemoteAccess="false" />
  </elmah>
  <location path="elmah.axd" inheritInChildApplications="false">
    <system.web>
      <trace enabled="true" pageOutput="true" />
      <httpHandlers>
        <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
      </httpHandlers>
    </system.web>
    <system.webServer>
      <handlers>
        <add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
      </handlers>
    </system.webServer>
  </location>

  <location path="FederationMetadata">
    <system.web>
      <!--<authorization>  
            <allow users="*" />  
        </authorization>-->
      <authorization>
        <deny users="?" />
      </authorization>
      <authentication mode="None" />
    </system.web>
  </location>
  <system.identityModel>
    <identityConfiguration>
      <audienceUris>
        <add value="https://vigilanteuat.airtel.com/Airtel/AssertionConsumerAirtel" />
      </audienceUris>
      <securityTokenHandlers>
        <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </securityTokenHandlers>
      <certificateValidation certificateValidationMode="None" />
      <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <trustedIssuers>
          <add thumbprint="694e1a75b363a2c5f8187e667ed09c888c270c41" name="http://ssouat.airtel.com/adfs/services/trust" />
        </trustedIssuers>
      </issuerNameRegistry>
    </identityConfiguration>
  </system.identityModel>
  <system.identityModel.services>
    <federationConfiguration>
      <cookieHandler requireSsl="false" />
      <wsFederation passiveRedirectEnabled="true" issuer="https://ssouat.airtel.com/adfs/ls/" realm="https://vigilanteuat.airtel.com/Airtel/AssertionConsumerAirtel" requireHttps="false" />
    </federationConfiguration>
  </system.identityModel.services>
  
  <system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net><dotNetOpenAuth>
	<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
		<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty></openid></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri></configuration>